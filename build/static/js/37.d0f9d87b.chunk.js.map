{"version":3,"file":"static/js/37.d0f9d87b.chunk.js","mappings":"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","sources":["utils/payments.js","utils/classNames.js","components/Admin/dashboardConstants.js","hooks/useDashboardData.js","components/Admin/DashboardCharts.js","context/DashboardDateContext.js","components/Admin/Dashboard.js"],"sourcesContent":["// src/utils/payments.js\r\n// Utilidades para normalizar métodos de pago y sumar exactamente por split o legado.\r\n\r\nconst norm = (s) => (s ?? '').toString().trim().toLowerCase();\r\n\r\nexport const normalizePaymentMethodKey = (methodLike) => {\r\n  const raw =\r\n    typeof methodLike === 'string'\r\n      ? methodLike\r\n      : methodLike?.name || methodLike?.label || methodLike?.title || methodLike?.method || methodLike?.type || methodLike?.payment || '';\r\n  const t = norm(raw);\r\n  if (t.includes('efect') || t.includes('cash')) return 'cash';\r\n  if (t.includes('nequi')) return 'nequi';\r\n  if (t.includes('davi')) return 'daviplata';\r\n  return 'other';\r\n};\r\n\r\nconst pickMethodLabel = (methodLike) => {\r\n  if (typeof methodLike === 'string') return methodLike;\r\n  return (\r\n    methodLike?.name ||\r\n    methodLike?.label ||\r\n    methodLike?.title ||\r\n    methodLike?.method ||\r\n    methodLike?.type ||\r\n    methodLike?.payment ||\r\n    'Otro'\r\n  );\r\n};\r\n\r\n/**\r\n * Extrae filas [{methodKey, amount, rawLabel}] desde una orden.\r\n * - Si existe order.payments (split), lo usa.\r\n * - Sino, detecta método legado y asigna 100% del total.\r\n * - Sino, cae en {other}.\r\n */\r\nexport const extractOrderPayments = (order) => {\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n\r\n  if (Array.isArray(order?.payments) && order.payments.length) {\r\n    return order.payments.map((p) => {\r\n      const amount = Math.floor(Number(p?.amount || 0)) || 0;\r\n      return {\r\n        methodKey: normalizePaymentMethodKey(p?.method),\r\n        amount,\r\n        rawLabel: pickMethodLabel(p?.method),\r\n      };\r\n    });\r\n  }\r\n\r\n  const legacySources = [\r\n    order?.meals?.[0]?.paymentMethod ?? order?.meals?.[0]?.payment,\r\n    order?.breakfasts?.[0]?.payment ?? order?.breakfasts?.[0]?.paymentMethod,\r\n    order?.paymentMethod ?? order?.payment,\r\n  ].filter(Boolean);\r\n\r\n  if (legacySources.length) {\r\n    const label = pickMethodLabel(legacySources[0]);\r\n    return [\r\n      {\r\n        methodKey: normalizePaymentMethodKey(legacySources[0]),\r\n        amount: total,\r\n        rawLabel: label,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return [{ methodKey: 'other', amount: total, rawLabel: 'Otro' }];\r\n};\r\n\r\n/** Texto compacto: \"Efectivo $6.000 + Nequi $6.000\" */\r\nexport const summarizePayments = (paymentsRows = []) => {\r\n  if (!Array.isArray(paymentsRows) || !paymentsRows.length) return 'Sin pago';\r\n  const agg = paymentsRows.reduce((a, r) => {\r\n    const key = r.methodKey || normalizePaymentMethodKey(r?.method);\r\n    a[key] = (a[key] || 0) + (Math.floor(Number(r.amount || 0)) || 0);\r\n    return a;\r\n  }, {});\r\n  const asText = [];\r\n  if (agg.cash) asText.push(`Efectivo $${agg.cash.toLocaleString('es-CO')}`);\r\n  if (agg.nequi) asText.push(`Nequi $${agg.nequi.toLocaleString('es-CO')}`);\r\n  if (agg.daviplata) asText.push(`Daviplata $${agg.daviplata.toLocaleString('es-CO')}`);\r\n  if (agg.other && !asText.length) asText.push(`Otro $${agg.other.toLocaleString('es-CO')}`);\r\n  return asText.join(' + ') || 'Sin pago';\r\n};\r\n\r\n/**\r\n * Valor por defecto para el editor de split:\r\n * - Si hay split → se usa tal cual\r\n * - Si hay método legado → 100% al método\r\n * - Sino → 100% Efectivo\r\n */\r\nexport const defaultPaymentsForOrder = (order) => {\r\n  const rows = extractOrderPayments(order);\r\n  if (rows?.length) return rows.map(({ methodKey, amount }) => ({ method: methodKey, amount }));\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n  return [{ method: 'cash', amount: total }];\r\n};\r\n\r\n/**\r\n * Totales simples por método (para tiles/chips rápidos).\r\n * Devuelve: { cash, nequi, daviplata, other, total }\r\n */\r\nexport const sumPaymentsByMethod = (orders = []) => {\r\n  const out = { cash: 0, nequi: 0, daviplata: 0, other: 0, total: 0 };\r\n  for (const order of orders) {\r\n    const rows = extractOrderPayments(order);\r\n    for (const r of rows) {\r\n      const amt = Math.floor(Number(r.amount || 0)) || 0;\r\n      out[r.methodKey] = (out[r.methodKey] || 0) + amt;\r\n      out.total += amt;\r\n    }\r\n  }\r\n  return out;\r\n};\r\n\r\n/** Helpers de clasificación por tipo/ubicación */\r\nexport const isBreakfastOrder = (order) =>\r\n  order?.type === 'breakfast' || Array.isArray(order?.breakfasts);\r\n\r\nexport const isDeliveryOrder = (order) => {\r\n  const tag =\r\n    order?.orderType ||\r\n    order?.meals?.[0]?.orderType ||\r\n    order?.breakfasts?.[0]?.orderType ||\r\n    '';\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  const c = norm(tag);\r\n  if (collection.includes('delivery')) return true;\r\n  if (c.includes('delivery') || c.includes('domicil')) return true;\r\n  return false;\r\n};\r\n\r\nexport const isTableOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  if (collection.includes('table')) return true;\r\n  const tableNumber =\r\n    order?.meals?.[0]?.tableNumber ?? order?.breakfasts?.[0]?.tableNumber;\r\n  return !!tableNumber;\r\n};\r\n\r\n/** Consideramos \"salón\" lo hecho por mesero: mesa o llevar desde mesa/breakfast table/takeaway */\r\nexport const isSalonOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  // Cualquier cosa que provenga de colecciones de mesa pertenece a salón\r\n  if (collection.includes('table')) return true;\r\n\r\n  // Para desayunos creados como mesa o para llevar por mesero, también cuenta como salón\r\n  const t = norm(order?.orderType || order?.breakfasts?.[0]?.orderType || '');\r\n  if (Array.isArray(order?.breakfasts) && (t.includes('table') || t.includes('takeaway') || t.includes('para llevar') || t.includes('llevar'))) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n\r\n/** Marcas típicas para saber si el domiciliario ya liquidó el efectivo */\r\nexport const isCashSettled = (order) => {\r\n  if (order?.settlement?.status && norm(order.settlement.status) === 'liquidated') return true;\r\n  if (order?.liquidated === true) return true;\r\n  if (order?.cashSettled === true) return true;\r\n  if (order?.settledAt) return true;\r\n  return false;\r\n};\r\n\r\n/** Totales por método con semántica de caja */\r\nexport const calcMethodTotalsAll = (orders = [], tableOrders = [], breakfastOrders = []) => {\r\n  const acc = {\r\n    nequiTotal: 0,\r\n    daviplataTotal: 0,\r\n    nequiPendiente: 0,\r\n    daviplatasPendiente: 0,\r\n    cashSalon: 0,\r\n    cashClientesSettled: 0,\r\n    cashClientesPendiente: 0,\r\n    totalLiquidado: 0,\r\n    totalPendiente: 0,\r\n    totalDomicilios: 0,\r\n    totalSalon: 0\r\n  };\r\n\r\n  const accumulate = (list = []) => {\r\n    for (const o of list) {\r\n      const rows = extractOrderPayments(o);\r\n      const isSalon = isSalonOrder(o);\r\n      \r\n      // Para cada método de pago en la orden\r\n      for (const r of rows) {\r\n        const amt = Math.floor(Number(r?.amount || 0)) || 0;\r\n        if (amt <= 0) continue;\r\n\r\n        if (isSalon) {\r\n          // Los pagos de salón siempre se suman al total\r\n          acc.totalSalon += amt;\r\n          if (r.methodKey === 'cash') acc.cashSalon += amt;\r\n          else if (r.methodKey === 'nequi') acc.nequiTotal += amt;\r\n          else if (r.methodKey === 'daviplata') acc.daviplataTotal += amt;\r\n          acc.totalLiquidado += amt;\r\n        } else {\r\n          // Para domicilios\r\n          acc.totalDomicilios += amt;\r\n          \r\n          // Depende del estado de liquidación\r\n          if (r.methodKey === 'cash') {\r\n            if (o?.settled || o?.paymentSettled?.cash) {\r\n              acc.cashClientesSettled += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.cashClientesPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n          else if (r.methodKey === 'nequi') {\r\n            if (o?.settled || o?.paymentSettled?.nequi) {\r\n              acc.nequiTotal += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.nequiPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n          else if (r.methodKey === 'daviplata') {\r\n            if (o?.settled || o?.paymentSettled?.daviplata) {\r\n              acc.daviplataTotal += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.daviplatasPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  accumulate(orders);\r\n  accumulate(tableOrders);\r\n  accumulate(breakfastOrders);\r\n\r\n  acc.cashCaja = acc.cashSalon + acc.cashClientesSettled;\r\n  \r\n  return acc;\r\n};\r\n","// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}","// src/constants/dashboardConstants.js\r\nexport const ORDER_STATUS = {\r\n  PENDING: 'pendiente',\r\n  DELIVERED: 'entregado',\r\n  CANCELLED: 'cancelado',\r\n};\r\n\r\nexport const ORDER_STATUS_DISPLAY = {\r\n  [ORDER_STATUS.PENDING]: 'Pendientes',\r\n  [ORDER_STATUS.DELIVERED]: 'Entregados',\r\n  [ORDER_STATUS.CANCELLED]: 'Cancelados',\r\n};\r\n\r\nexport const BAR_COLORS = {\r\n  Efectivo: '#22c55e',\r\n  Daviplata: '#ef4444',\r\n  Nequi: '#3b82f6',\r\n  Domicilios: '#8B5CF6',\r\n  Mesas: '#10B981'\r\n};\r\n\r\nexport const PIE_COLORS = ['#fbbf24', '#4ade80', '#ef4444', '#60a5fa', '#a78bfa'];\r\n\r\nexport const INGRESOS_COLLECTION = 'Ingresos';\r\nexport const PEDIDOS_DIARIOS_GUARDADOS_COLLECTION = 'PedidosDiariosGuardados';","// src/hooks/useDashboardData.js\r\nimport { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  Timestamp,\r\n  getDocs,\r\n  addDoc,\r\n  orderBy,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  serverTimestamp,\r\n} from 'firebase/firestore';\r\nimport {\r\n  ORDER_STATUS,\r\n  ORDER_STATUS_DISPLAY,\r\n  PIE_COLORS,\r\n  INGRESOS_COLLECTION,\r\n  PEDIDOS_DIARIOS_GUARDADOS_COLLECTION,\r\n} from '../components/Admin/dashboardConstants';\r\nimport { calcMethodTotalsAll } from '../utils/payments';\r\n\r\n/* ============================\r\n   Helpers de fechas / formato\r\n   ============================ */\r\n\r\nconst getDateRange = (rangeType, start, end) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  let startDate = new Date(today);\r\n  let endDate = new Date(today);\r\n  endDate.setHours(23, 59, 59, 999);\r\n\r\n  switch (rangeType) {\r\n    case '7_days':\r\n      startDate.setDate(today.getDate() - 6);\r\n      break;\r\n    case '30_days':\r\n      startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n      endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'year':\r\n      startDate = new Date(today.getFullYear(), 0, 1);\r\n      endDate = new Date(today.getFullYear(), 11, 31);\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'custom':\r\n      startDate = start ? new Date(start) : null;\r\n      if (startDate) startDate.setHours(0, 0, 0, 0);\r\n      endDate = end ? new Date(end) : null;\r\n      if (endDate) endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    default:\r\n      startDate.setDate(today.getDate() - 6);\r\n      break;\r\n  }\r\n  return { startDate, endDate };\r\n};\r\n\r\n// Normaliza fecha de docs con createdAt / timestamp / date → \"YYYY-MM-DD\"\r\nconst getDocDateISO = (doc) => {\r\n  const ts = doc?.createdAt || doc?.timestamp || doc?.date;\r\n  const d = ts?.toDate ? ts.toDate() : (ts ? new Date(ts) : null);\r\n  return d ? d.toISOString().split('T')[0] : null;\r\n};\r\n\r\n/* ======================================\r\n   Normalización de servicio y de comida\r\n   ====================================== */\r\n\r\nconst _asStr = (val) => {\r\n  if (typeof val === 'string') return val;\r\n  if (val && typeof val === 'object') {\r\n    return String(val.name ?? val.value ?? val.label ?? '').trim();\r\n  }\r\n  return '';\r\n};\r\n\r\n// ¿Es un pedido de desayuno?\r\nconst isBreakfastOrder = (o) => {\r\n  // Señales directas\r\n  if (o?.isBreakfast) return true;\r\n  if (_asStr(o?.meal).toLowerCase() === 'breakfast') return true;\r\n  if (Array.isArray(o?.breakfasts) && o.breakfasts.length > 0) return true;\r\n\r\n  // Señales derivadas (por si la estructura varía)\r\n  const maybeBreakfastStrs = [\r\n    _asStr(o?.type),\r\n    _asStr(o?.category),\r\n    _asStr(o?.group),\r\n    _asStr(o?.tag),\r\n  ]\r\n    .concat(\r\n      Array.isArray(o?.items)\r\n        ? o.items.map((it) => _asStr(it?.category ?? it?.type))\r\n        : []\r\n    )\r\n    .join(' ')\r\n    .toLowerCase();\r\n\r\n  if (maybeBreakfastStrs.includes('desayun') || maybeBreakfastStrs.includes('breakfast')) return true;\r\n\r\n  return false;\r\n};\r\n\r\n// Devuelve 'mesa' | 'llevar' | 'domicilio' | null\r\nconst normalizeServiceFromOrder = (o) => {\r\n  const candidates = [\r\n    o?.orderTypeNormalized,\r\n    o?.serviceType,\r\n    o?.orderType,\r\n    o?.channel,\r\n    o?.tipoPedido,\r\n    o?.typeOfOrder,\r\n    // anidados frecuentes\r\n    o?.meals?.[0]?.orderType,\r\n    o?.breakfasts?.[0]?.orderType,\r\n  ];\r\n\r\n  for (const c of candidates) {\r\n    const v = _asStr(c).toLowerCase();\r\n    if (!v) continue;\r\n    if (/mesa|table|sal[oó]n|dine/.test(v)) return 'mesa';\r\n    if (/llevar|para\\s*llevar|take(?:-|\\s)?away|to-?go|takeout/.test(v)) return 'llevar';\r\n    if (/domicil|deliver|env[ií]o/.test(v)) return 'domicilio';\r\n  }\r\n\r\n  // Heurísticas\r\n  if (o?.tableNumber || o?.mesa || o?.table) return 'mesa';\r\n  if (o?.address?.address || o?.deliveryAddress) return 'domicilio';\r\n\r\n  return null;\r\n};\r\n\r\n// Agregador genérico por tipo de venta (usa normalizadores)\r\nconst buildSaleTypeBreakdown = (orders = []) => {\r\n  const acc = {\r\n    domicilio_almuerzo: 0,\r\n    domicilio_desayuno: 0,\r\n    mesa_almuerzo: 0,\r\n    llevar_almuerzo: 0,\r\n    mesa_desayuno: 0,\r\n    llevar_desayuno: 0,\r\n  };\r\n\r\n  for (const o of orders) {\r\n    const total = Number(o?.total) || 0;\r\n    if (total <= 0) continue;\r\n\r\n    const kind = isBreakfastOrder(o) ? 'desayuno' : 'almuerzo';\r\n    const service = normalizeServiceFromOrder(o);\r\n    if (!service) continue;\r\n\r\n    if (service === 'domicilio') acc[`domicilio_${kind}`] += total;\r\n    else if (service === 'mesa') acc[`mesa_${kind}`] += total;\r\n    else if (service === 'llevar') acc[`llevar_${kind}`] += total;\r\n  }\r\n\r\n  return acc;\r\n};\r\n\r\n/* ============================\r\n   Hook principal\r\n   ============================ */\r\n\r\nexport const useDashboardData = (\r\n  db,\r\n  userId,\r\n  isAuthReady,\r\n  p4, // notify ó setError\r\n  p5, // startOfDay ó setSuccess\r\n  p6, // endOfDay ó salesFilterRange\r\n  p7, // selectedDate ó salesCustomStartDate\r\n  p8, // ordersFilterRange\r\n  p9, // ordersCustomStartDate\r\n  p10, // ordersCustomEndDate\r\n  p11, // selectedMonth\r\n) => {\r\n  // Compatibilidad con ambas firmas:\r\n  let notify = null;\r\n  let setError = null;\r\n  let setSuccess = null;\r\n  let startOfDay = null;\r\n  let endOfDay = null;\r\n  let selectedDate = null;\r\n\r\n  // Parámetros “viejos” de gráficos (si los usas):\r\n  let salesFilterRange = '7_days';\r\n  let salesCustomStartDate = null;\r\n  let salesCustomEndDate = null;\r\n  let ordersFilterRange = '7_days';\r\n  let ordersCustomStartDate = null;\r\n  let ordersCustomEndDate = null;\r\n  let selectedMonth = null;\r\n\r\n  if (typeof p4 === 'function') {\r\n    // NUEVA firma: (db, userId, isAuthReady, notify, startOfDay, endOfDay, selectedDate)\r\n    notify = p4;\r\n    setError = (m) => notify?.('error', m);\r\n    setSuccess = (m) => notify?.('success', m);\r\n    startOfDay = p5 || null;\r\n    endOfDay = p6 || null;\r\n    selectedDate = p7 || null;\r\n  } else {\r\n    // FIRMA ANTIGUA\r\n    setError = p4;\r\n    setSuccess = p5;\r\n    salesFilterRange = p6 ?? salesFilterRange;\r\n    salesCustomStartDate = p7 ?? null;\r\n    salesCustomEndDate = p8 ?? null;\r\n    ordersFilterRange = p9 ?? ordersFilterRange;\r\n    ordersCustomStartDate = p10 ?? null;\r\n    ordersCustomEndDate = p11 ?? null;\r\n    selectedMonth = arguments.length >= 12 ? arguments[11] : null;\r\n    notify = null;\r\n    startOfDay = null;\r\n    endOfDay = null;\r\n    selectedDate = null;\r\n  }\r\n\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [orders, setOrders] = useState([]);            // Domicilios almuerzo\r\n  const [tableOrders, setTableOrders] = useState([]);  // Salón (mesa/llevar) — puede haber desayuno/almuerzo\r\n  const [waiterOrders, setWaiterOrders] = useState([]); // Salón (mesa/llevar) creados por mesero\r\n  const [breakfastOrders, setBreakfastOrders] = useState([]); // deliveryBreakfastOrders\r\n  const [breakfastSalonOrders, setBreakfastSalonOrders] = useState([]); // ⬅️ desayunos de salón (colección 'breakfastOrders')\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [totals, setTotals] = useState({\r\n    cash: 0,\r\n    cashCaja: 0,\r\n    cashPendiente: 0,\r\n    daviplata: 0,\r\n    nequi: 0,\r\n    expenses: 0,\r\n    expensesByProvider: { total: 0, byProvider: {}, counts: {} },\r\n    byCategory: {\r\n      domiciliosAlmuerzo: 0,\r\n      mesasAlmuerzo: 0,\r\n      llevarAlmuerzo: 0,\r\n      domiciliosDesayuno: 0,\r\n      mesasDesayuno: 0,\r\n      llevarDesayuno: 0,\r\n    },\r\n    grossIncome: 0,\r\n    net: 0,\r\n  });\r\n\r\n  const [saleTypeBreakdown, setSaleTypeBreakdown] = useState({\r\n    domicilio_almuerzo: 0,\r\n    domicilio_desayuno: 0,\r\n    mesa_almuerzo: 0,\r\n    llevar_almuerzo: 0,\r\n    mesa_desayuno: 0,\r\n    llevar_desayuno: 0,\r\n  });\r\n\r\n  const [statusCounts, setStatusCounts] = useState({ Pending: 0, Delivered: 0, Cancelled: 0 });\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [ingresosData, setIngresosData] = useState([]);\r\n  const [pedidosDiariosGuardadosData, setPedidosDiariosGuardadosData] = useState([]);\r\n  const [dailySalesChartData, setDailySalesChartData] = useState([]);\r\n  const [dailyOrdersChartData, setDailyOrdersChartData] = useState([]);\r\n  const [statusPieChartData, setStatusPieChartData] = useState([]);\r\n\r\n  const initialLoadRefs = useRef({\r\n    orders: false,\r\n    tableOrders: false,\r\n    waiterOrders: false,\r\n    breakfastOrders: false,          // delivery\r\n    breakfastSalonOrders: false,     // salón\r\n    users: false,\r\n    activity: false,\r\n    ingresos: false,\r\n    pedidosDiariosGuardados: false,\r\n    payments: false,\r\n  });\r\n\r\n  // Unificar todos los pedidos de salón (excepto desayunos de salón que tratamos aparte para prorrateo)\r\n  const salonOrders = useMemo(\r\n    () => [...tableOrders, ...waiterOrders],\r\n    [tableOrders, waiterOrders]\r\n  );\r\n\r\n  const checkIfAllLoaded = () => {\r\n    if (\r\n      initialLoadRefs.current.orders &&\r\n      initialLoadRefs.current.tableOrders &&\r\n      initialLoadRefs.current.waiterOrders &&\r\n      initialLoadRefs.current.breakfastOrders &&\r\n      initialLoadRefs.current.breakfastSalonOrders &&\r\n      initialLoadRefs.current.users &&\r\n      initialLoadRefs.current.activity &&\r\n      initialLoadRefs.current.ingresos &&\r\n      initialLoadRefs.current.pedidosDiariosGuardados &&\r\n      initialLoadRefs.current.payments\r\n    ) {\r\n      setLoadingData(false);\r\n    }\r\n  };\r\n\r\n  /* ==========================================================\r\n     Sumas por categoría (usa normalización + detección robusta)\r\n     ========================================================== */\r\n  useEffect(() => {\r\n    const sum = {\r\n      domiciliosAlmuerzo: 0,\r\n      mesasAlmuerzo: 0,\r\n      llevarAlmuerzo: 0,\r\n      domiciliosDesayuno: 0,\r\n      mesasDesayuno: 0,\r\n      llevarDesayuno: 0,\r\n    };\r\n\r\n    // 1) Almuerzo — Domicilios: colección 'orders'\r\n    sum.domiciliosAlmuerzo = orders.reduce((acc, o) => acc + Number(o.total || 0), 0);\r\n\r\n    // 2) Salón (mesa / llevar) en 'tableOrders' + 'waiterOrders' — puede haber desayuno/almuerzo\r\n    for (const t of salonOrders) {\r\n      const amount = Number(t.total || 0);\r\n      if (amount <= 0) continue;\r\n\r\n      const esDesayuno = isBreakfastOrder(t);\r\n      const service = normalizeServiceFromOrder(t) || 'mesa'; // por defecto, salón\r\n\r\n      if (!esDesayuno) {\r\n        if (service === 'mesa') sum.mesasAlmuerzo += amount;\r\n        else if (service === 'llevar') sum.llevarAlmuerzo += amount;\r\n        else if (service === 'domicilio') sum.domiciliosAlmuerzo += amount; // por si se guardó raro\r\n        else sum.mesasAlmuerzo += amount; // fallback\r\n      } else {\r\n        // NOTA: aquí NO sumamos desayunos de salón que vienen en colección 'breakfastOrders'\r\n        // porque los tratamos abajo con prorrateo por ítem.\r\n        if (t.__collection !== 'breakfastOrders') {\r\n          if (service === 'mesa') sum.mesasDesayuno += amount;\r\n          else if (service === 'llevar') sum.llevarDesayuno += amount;\r\n          else if (service === 'domicilio') sum.domiciliosDesayuno += amount;\r\n          else sum.mesasDesayuno += amount;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 2.5) Desayunos de salón (colección 'breakfastOrders'): prorratear por ítems\r\n    const sumBreakfastSalon = (ordersArr = []) => {\r\n      let mesa = 0;\r\n      let llevar = 0;\r\n      for (const o of ordersArr) {\r\n        const amount = Number(o.total || 0);\r\n        if (amount <= 0) continue;\r\n\r\n        const items = Array.isArray(o.breakfasts) ? o.breakfasts : [];\r\n        if (items.length === 0) {\r\n          // Fallback: usa el servicio al nivel de orden\r\n          const s = normalizeServiceFromOrder(o) || 'mesa';\r\n          if (s === 'mesa') mesa += amount;\r\n          else if (s === 'llevar') llevar += amount;\r\n          continue;\r\n        }\r\n\r\n        const isMesa = (v) => {\r\n          const s = _asStr(v).toLowerCase();\r\n          return /mesa|table|sal[oó]n|dine/.test(s);\r\n        };\r\n        const isLlevar = (v) => {\r\n          const s = _asStr(v).toLowerCase();\r\n          return /llevar|take(?:-|\\s)?away|to-?go|takeout/.test(s);\r\n        };\r\n\r\n        const n = items.length;\r\n        const nMesa = items.filter(b => isMesa(b?.orderType)).length;\r\n        const nLlevar = items.filter(b => isLlevar(b?.orderType)).length;\r\n\r\n        // Reparte el total en proporción a cuántos ítems son mesa/llevar\r\n        if (n > 0) {\r\n          mesa += amount * (nMesa / n);\r\n          llevar += amount * (nLlevar / n);\r\n        }\r\n      }\r\n      return { mesa: Math.round(mesa), llevar: Math.round(llevar) };\r\n    };\r\n\r\n    const bSalon = sumBreakfastSalon(breakfastSalonOrders || []);\r\n    sum.mesasDesayuno += bSalon.mesa;\r\n    sum.llevarDesayuno += bSalon.llevar;\r\n\r\n    // 3) Desayunos delivery (deliveryBreakfastOrders) — normalizar por si hay mesa/llevar\r\n    for (const b of breakfastOrders) {\r\n      const amount = Number(b.total || 0);\r\n      if (amount <= 0) continue;\r\n\r\n      const service = normalizeServiceFromOrder(b);\r\n      const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n\r\n      if (service === 'mesa') sum.mesasDesayuno += amount;\r\n      else if (service === 'llevar') sum.llevarDesayuno += amount;\r\n      else if (service === 'domicilio' || (!service && hasAddr)) sum.domiciliosDesayuno += amount;\r\n      else sum.domiciliosDesayuno += amount; // conservador\r\n    }\r\n\r\n    // Separar ingresos de salón y domicilios\r\n    const ingresosSalon = \r\n      sum.mesasAlmuerzo +\r\n      sum.llevarAlmuerzo +\r\n      sum.mesasDesayuno +\r\n      sum.llevarDesayuno;\r\n\r\n    // Para domicilios, calcular total y liquidados separadamente\r\n    const { totalDomicilios, totalLiquidado: ingresosDomiciliosLiquidados } = calcMethodTotalsAll(orders);\r\n\r\n    // El ingreso bruto es la suma de todo lo liquidado más el total de salón\r\n    const gross = ingresosSalon + totalDomicilios;\r\n\r\n    setTotals((prev) => ({\r\n      ...prev,\r\n      byCategory: {\r\n        ...sum,\r\n        totalDomicilios,\r\n        ingresosSalon\r\n      },\r\n      grossIncome: gross,\r\n      net: Math.max(gross - (prev.expenses || 0), 0),\r\n    }));\r\n\r\n    // Desglose adicional (si lo usas en UI)\r\n    const mixed = [...orders, ...salonOrders, ...breakfastOrders, ...breakfastSalonOrders];\r\n    setSaleTypeBreakdown(buildSaleTypeBreakdown(mixed));\r\n  }, [orders, salonOrders, breakfastOrders, breakfastSalonOrders]);\r\n\r\n  /* =========================\r\n     Suscripciones a Firestore\r\n     ========================= */\r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) return;\r\n\r\n    setLoadingData(true);\r\n    const unsubscribes = [];\r\n\r\n    // Orders (domicilios almuerzo)\r\n    const ordersCollectionRef = collection(db, 'orders');\r\n    const unsubscribeOrders = onSnapshot(\r\n      ordersCollectionRef,\r\n      (snapshot) => {\r\n        const ordersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'orders', ...doc.data() }));\r\n        setOrders(ordersData);\r\n\r\n        const newTotals = { cash: 0, daviplata: 0, nequi: 0 };\r\n        const newStatusCounts = { Pending: 0, Delivered: 0, Cancelled: 0 };\r\n\r\n        ordersData.forEach((order) => {\r\n          const paymentSummary = order.paymentSummary || {};\r\n          newTotals.cash += Number(paymentSummary['Efectivo'] || 0);\r\n          newTotals.daviplata += Number(paymentSummary['Daviplata'] || 0);\r\n          newTotals.nequi += Number(paymentSummary['Nequi'] || 0);\r\n\r\n          const orderStatus = order.status?.toLowerCase() || '';\r\n          if (orderStatus === ORDER_STATUS.PENDING) newStatusCounts.Pending += 1;\r\n          else if (orderStatus === ORDER_STATUS.DELIVERED) newStatusCounts.Delivered += 1;\r\n          else if (orderStatus === ORDER_STATUS.CANCELLED) newStatusCounts.Cancelled += 1;\r\n        });\r\n\r\n        setStatusCounts(newStatusCounts);\r\n\r\n        const pieChartData = [\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.PENDING], value: newStatusCounts.Pending, color: PIE_COLORS[0] },\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.DELIVERED], value: newStatusCounts.Delivered, color: PIE_COLORS[1] },\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.CANCELLED], value: newStatusCounts.Cancelled, color: PIE_COLORS[2] },\r\n        ];\r\n        setStatusPieChartData(pieChartData);\r\n\r\n        if (!initialLoadRefs.current.orders) {\r\n          initialLoadRefs.current.orders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pedidos: ${error.message}`);\r\n        if (!initialLoadRefs.current.orders) {\r\n          initialLoadRefs.current.orders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeOrders);\r\n\r\n    // Table orders (salón)\r\n    const tableOrdersCollectionRef = collection(db, 'tableOrders');\r\n    const unsubscribeTableOrders = onSnapshot(\r\n      tableOrdersCollectionRef,\r\n      (snapshot) => {\r\n        const tableOrdersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'tableOrders', ...doc.data() }));\r\n        setTableOrders(tableOrdersData);\r\n\r\n        if (!initialLoadRefs.current.tableOrders) {\r\n          initialLoadRefs.current.tableOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pedidos de mesa: ${error.message}`);\r\n        if (!initialLoadRefs.current.tableOrders) {\r\n          initialLoadRefs.current.tableOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeTableOrders);\r\n\r\n    // Waiter orders (salón creados en alguna vista de mesero)\r\n    const waiterOrdersCollectionRef = collection(db, 'waiterOrders');\r\n    const unsubscribeWaiterOrders = onSnapshot(\r\n      waiterOrdersCollectionRef,\r\n      (snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'waiterOrders', ...doc.data() }));\r\n        setWaiterOrders(data);\r\n        if (!initialLoadRefs.current.waiterOrders) {\r\n          initialLoadRefs.current.waiterOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pedidos del mesero: ${error.message}`);\r\n        if (!initialLoadRefs.current.waiterOrders) {\r\n          initialLoadRefs.current.waiterOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeWaiterOrders);\r\n\r\n    // Breakfast orders DELIVERY (deliveryBreakfastOrders)\r\n    const deliveryBreakfastOrdersRef = collection(db, 'deliveryBreakfastOrders');\r\n    const unsubscribeBreakfastOrders = onSnapshot(\r\n      deliveryBreakfastOrdersRef,\r\n      (snapshot) => {\r\n        const breakfastOrdersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'deliveryBreakfastOrders', ...doc.data() }));\r\n        setBreakfastOrders(breakfastOrdersData);\r\n        if (!initialLoadRefs.current.breakfastOrders) {\r\n          initialLoadRefs.current.breakfastOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar desayunos (delivery): ${error.message}`);\r\n        if (!initialLoadRefs.current.breakfastOrders) {\r\n          initialLoadRefs.current.breakfastOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeBreakfastOrders);\r\n\r\n    // Breakfast orders de SALÓN (colección 'breakfastOrders' creada en WaiterDashboard)\r\n    const breakfastSalonOrdersRef = collection(db, 'breakfastOrders');\r\n    const unsubscribeBreakfastSalonOrders = onSnapshot(\r\n      breakfastSalonOrdersRef,\r\n      (snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'breakfastOrders', ...doc.data() }));\r\n        setBreakfastSalonOrders(data);\r\n        if (!initialLoadRefs.current.breakfastSalonOrders) {\r\n          initialLoadRefs.current.breakfastSalonOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar desayunos de salón: ${error.message}`);\r\n        if (!initialLoadRefs.current.breakfastSalonOrders) {\r\n          initialLoadRefs.current.breakfastSalonOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeBreakfastSalonOrders);\r\n\r\n    // Users\r\n    const usersCollectionRef = collection(db, 'users');\r\n    const unsubscribeUsers = onSnapshot(\r\n      usersCollectionRef,\r\n      (snapshot) => {\r\n        const usersData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setUsers(usersData);\r\n        if (!initialLoadRefs.current.users) {\r\n          initialLoadRefs.current.users = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar usuarios: ${error.message}`);\r\n        if (!initialLoadRefs.current.users) {\r\n          initialLoadRefs.current.users = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeUsers);\r\n\r\n    // User activity\r\n    const userActivityCollectionRef = collection(db, 'userActivity');\r\n    const unsubscribeActivity = onSnapshot(\r\n      userActivityCollectionRef,\r\n      (snapshot) => {\r\n        const activity = snapshot.docs\r\n          .map((doc) => {\r\n            const data = doc.data();\r\n            const timestampDate = data.timestamp instanceof Timestamp ? data.timestamp.toDate() : null;\r\n            return { id: doc.id, ...data, timestamp: timestampDate };\r\n          })\r\n          .sort((a, b) => (b.timestamp ? b.timestamp.getTime() : 0) - (a.timestamp ? a.timestamp.getTime() : 0));\r\n        setUserActivity(activity);\r\n        if (!initialLoadRefs.current.activity) {\r\n          initialLoadRefs.current.activity = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar actividad: ${error.message}`);\r\n        if (!initialLoadRefs.current.activity) {\r\n          initialLoadRefs.current.activity = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeActivity);\r\n\r\n    // Ingresos (históricos guardados)\r\n    const ingresosColRef = collection(db, INGRESOS_COLLECTION);\r\n    const unsubscribeIngresos = onSnapshot(\r\n      ingresosColRef,\r\n      (snapshot) => {\r\n        const ingresosData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setIngresosData(ingresosData);\r\n        if (!initialLoadRefs.current.ingresos) {\r\n          initialLoadRefs.current.ingresos = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar ingresos: ${error.message}`);\r\n        if (!initialLoadRefs.current.ingresos) {\r\n          initialLoadRefs.current.ingresos = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeIngresos);\r\n\r\n    // Pedidos diarios guardados (conteos)\r\n    const pedidosDiariosGuardadosColRef = collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION);\r\n    const unsubscribePedidosDiariosGuardados = onSnapshot(\r\n      pedidosDiariosGuardadosColRef,\r\n      (snapshot) => {\r\n        const pedidosData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setPedidosDiariosGuardadosData(pedidosData);\r\n        if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n          initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pedidos diarios guardados: ${error.message}`);\r\n        if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n          initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribePedidosDiariosGuardados);\r\n\r\n    // Payments (gastos) — opcionalmente filtrados por día seleccionado\r\n    const paymentsQuery = (startOfDay && endOfDay)\r\n      ? query(\r\n          collection(db, 'payments'),\r\n          where('timestamp', '>=', startOfDay),\r\n          where('timestamp', '<=', endOfDay),\r\n          orderBy('timestamp', 'asc'),\r\n        )\r\n      : collection(db, 'payments');\r\n\r\n    const unsubscribePayments = onSnapshot(\r\n      paymentsQuery,\r\n      (snapshot) => {\r\n        // Ignorar docs sin timestamp (serverTimestamp pendiente)\r\n        const items = snapshot.docs\r\n          .map(d => ({ id: d.id, ...d.data() }))\r\n          .filter(p => !!p.timestamp);\r\n\r\n        let totalExpenses = 0;\r\n        const byProvider = {};\r\n        const counts = {};\r\n\r\n        for (const p of items) {\r\n          const amount = Number(p.amount || 0);\r\n          const provider = (p.provider || p.store || '—').toString().trim() || '—';\r\n          totalExpenses += amount;\r\n          byProvider[provider] = (byProvider[provider] || 0) + amount;\r\n          counts[provider] = (counts[provider] || 0) + 1;\r\n        }\r\n\r\n        setTotals(prev => {\r\n          const net = Math.max((prev.grossIncome || 0) - totalExpenses, 0);\r\n          return {\r\n            ...prev,\r\n            expenses: totalExpenses,\r\n            expensesByProvider: { total: totalExpenses, byProvider, counts },\r\n            net,\r\n          };\r\n        });\r\n\r\n        if (!initialLoadRefs.current.payments) {\r\n          initialLoadRefs.current.payments = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pagos: ${error.message}`);\r\n        if (!initialLoadRefs.current.payments) {\r\n          initialLoadRefs.current.payments = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribePayments);\r\n\r\n    return () => {\r\n      unsubscribes.forEach((unsubscribe) => unsubscribe());\r\n    };\r\n  }, [db, userId, isAuthReady]); // evita bucles\r\n\r\n  /* ===========================================\r\n     Recalcular métodos de pago (orders + salón + desayunos)\r\n     =========================================== */\r\n  useEffect(() => {\r\n    const m = calcMethodTotalsAll(orders, salonOrders, [...breakfastOrders, ...breakfastSalonOrders]);\r\n    setTotals((prev) => ({\r\n      ...prev,\r\n      cash: m.cashCaja, // compat: cash == caja real\r\n      cashCaja: m.cashCaja,\r\n      cashPendiente: m.cashClientesPendiente,\r\n      daviplata: m.daviplataTotal,\r\n      nequi: m.nequiTotal,\r\n      grossIncome: m.totalLiquidado, // Solo incluye pagos liquidados\r\n      net: Math.max(m.totalLiquidado - (prev.expenses || 0), 0)\r\n    }));\r\n  }, [orders, salonOrders, breakfastOrders, breakfastSalonOrders]);\r\n\r\n  /* ==========================\r\n     Daily Sales Chart (categorías)\r\n     ========================== */\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const monthNames = [\r\n      'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n      'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre',\r\n    ];\r\n    const { startDate: salesStartDate, endDate: salesEndDate } = getDateRange(\r\n      salesFilterRange,\r\n      salesCustomStartDate,\r\n      salesCustomEndDate\r\n    );\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const todayISO = today.toISOString().split('T')[0];\r\n    let chartData;\r\n\r\n    if (salesFilterRange === 'year' && !selectedMonth) {\r\n      const monthlySales = {};\r\n      const currentYear = today.getFullYear();\r\n\r\n      for (let month = 0; month < 12; month++) {\r\n        const monthKey = `${currentYear}-${String(month + 1).padStart(2, '0')}`;\r\n        monthlySales[monthKey] = {\r\n          'Domicilios Almuerzo': 0,\r\n          'Domicilios Desayuno': 0,\r\n          'Mesas/Llevar Almuerzo': 0,\r\n          'Mesas/Llevar Desayuno': 0,\r\n        };\r\n      }\r\n\r\n      // Históricos guardados\r\n      ingresosData.forEach((summary) => {\r\n        const date = new Date(summary.date);\r\n        if (date.getFullYear() === currentYear) {\r\n          const mKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n          const c = summary.categories || {};\r\n          monthlySales[mKey]['Domicilios Almuerzo'] += Number(c.domiciliosAlmuerzo || 0);\r\n          monthlySales[mKey]['Domicilios Desayuno'] += Number(c.domiciliosDesayuno || 0);\r\n          monthlySales[mKey]['Mesas/Llevar Almuerzo'] += Number(c.mesasAlmuerzo || 0);\r\n          monthlySales[mKey]['Mesas/Llevar Desayuno'] += Number(c.mesasDesayuno || 0);\r\n        }\r\n      });\r\n\r\n      // Realtime del mes actual (simple: mesa+llevar juntos)\r\n      const currentMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n      let rt = { da: 0, dd: 0, ma: 0, md: 0 };\r\n\r\n      orders.forEach((o) => {\r\n        const d = o.createdAt?.toDate ? new Date(o.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth())\r\n          rt.da += Number(o.total || 0);\r\n      });\r\n      salonOrders.forEach((t) => {\r\n        const d = t.createdAt?.toDate ? new Date(t.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          const esDesayuno = isBreakfastOrder(t);\r\n          if (esDesayuno) rt.md += Number(t.total || 0);\r\n          else rt.ma += Number(t.total || 0);\r\n        }\r\n      });\r\n      // ⬇️ desayunos de salón (colección 'breakfastOrders') suman al bucket de \"Mesas/Llevar Desayuno\"\r\n      breakfastSalonOrders.forEach((b) => {\r\n        const d = b.createdAt?.toDate ? new Date(b.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          rt.md += Number(b.total || 0);\r\n        }\r\n      });\r\n      breakfastOrders.forEach((b) => {\r\n        const dISO = getDocDateISO(b);\r\n        if (!dISO) return;\r\n        const d = new Date(dISO);\r\n        if (d.getFullYear() !== currentYear || d.getMonth() !== today.getMonth()) return;\r\n\r\n        const amount = Number(b.total || 0);\r\n        const service = normalizeServiceFromOrder(b);\r\n        const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n        if (service === 'mesa' || service === 'llevar') rt.md += amount;\r\n        else if (service === 'domicilio' || (!service && hasAddr)) rt.dd += amount;\r\n        else rt.dd += amount;\r\n      });\r\n\r\n      monthlySales[currentMonthKey]['Domicilios Almuerzo'] += rt.da;\r\n      monthlySales[currentMonthKey]['Mesas/Llevar Almuerzo'] += rt.ma;\r\n      monthlySales[currentMonthKey]['Domicilios Desayuno'] += rt.dd;\r\n      monthlySales[currentMonthKey]['Mesas/Llevar Desayuno'] += rt.md;\r\n\r\n      chartData = Object.keys(monthlySales).map((monthKey) => ({\r\n        name: monthNames[parseInt(monthKey.split('-')[1]) - 1],\r\n        monthKey,\r\n        'Domicilios Almuerzo': monthlySales[monthKey]['Domicilios Almuerzo'],\r\n        'Domicilios Desayuno': monthlySales[monthKey]['Domicilios Desayuno'],\r\n        'Mesas/Llevar Almuerzo': monthlySales[monthKey]['Mesas/Llevar Almuerzo'],\r\n        'Mesas/Llevar Desayuno': monthlySales[monthKey]['Mesas/Llevar Desayuno'],\r\n      }));\r\n    } else {\r\n      const filteredDailySales = {};\r\n\r\n      // Históricos por día\r\n      ingresosData.forEach((summary) => {\r\n        const summaryDateISO = new Date(summary.date).toISOString().split('T')[0];\r\n        if (\r\n          summaryDateISO >= salesStartDate.toISOString().split('T')[0] &&\r\n          summaryDateISO <= salesEndDate.toISOString().split('T')[0]\r\n        ) {\r\n          const c = summary.categories || {};\r\n          filteredDailySales[summaryDateISO] = {\r\n            'Domicilios Almuerzo':\r\n              (filteredDailySales[summaryDateISO]?.['Domicilios Almuerzo'] || 0) +\r\n              Number(c.domiciliosAlmuerzo || 0),\r\n            'Domicilios Desayuno':\r\n              (filteredDailySales[summaryDateISO]?.['Domicilios Desayuno'] || 0) +\r\n              Number(c.domiciliosDesayuno || 0),\r\n            'Mesas/Llevar Almuerzo':\r\n              (filteredDailySales[summaryDateISO]?.['Mesas/Llevar Almuerzo'] || 0) +\r\n              Number(c.mesasAlmuerzo || 0),\r\n            'Mesas/Llevar Desayuno':\r\n              (filteredDailySales[summaryDateISO]?.['Mesas/Llevar Desayuno'] || 0) +\r\n              Number(c.mesasDesayuno || 0),\r\n          };\r\n        }\r\n      });\r\n\r\n      // Realtime del rango (simple: mesa+llevar juntos)\r\n      if (today >= salesStartDate && today <= salesEndDate) {\r\n        let da = 0, dd = 0, ma = 0, md = 0;\r\n\r\n        orders.forEach((o) => {\r\n          const dISO = o.createdAt?.toDate ? new Date(o.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n          if (dISO && dISO >= salesStartDate.toISOString().split('T')[0] && dISO <= salesEndDate.toISOString().split('T')[0]) {\r\n            da += Number(o.total || 0);\r\n          }\r\n        });\r\n\r\n        salonOrders.forEach((t) => {\r\n          const dISO = t.createdAt?.toDate ? new Date(t.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n          if (dISO && dISO >= salesStartDate.toISOString().split('T')[0] && dISO <= salesEndDate.toISOString().split('T')[0]) {\r\n            const esDesayuno = isBreakfastOrder(t);\r\n            if (esDesayuno) md += Number(t.total || 0);\r\n            else ma += Number(t.total || 0);\r\n          }\r\n        });\r\n\r\n        // ⬇️ desayunos de salón de 'breakfastOrders'\r\n        breakfastSalonOrders.forEach((b) => {\r\n          const dISO = b.createdAt?.toDate ? new Date(b.createdAt.toDate()).toISOString().split('T')[0] : getDocDateISO(b);\r\n          if (dISO && dISO >= salesStartDate.toISOString().split('T')[0] && dISO <= salesEndDate.toISOString().split('T')[0]) {\r\n            md += Number(b.total || 0);\r\n          }\r\n        });\r\n\r\n        breakfastOrders.forEach((b) => {\r\n          const dISO = getDocDateISO(b);\r\n          if (dISO && dISO >= salesStartDate.toISOString().split('T')[0] && dISO <= salesEndDate.toISOString().split('T')[0]) {\r\n            const amount = Number(b.total || 0);\r\n            const service = normalizeServiceFromOrder(b);\r\n            const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n            if (service === 'mesa' || service === 'llevar') md += amount;\r\n            else if (service === 'domicilio' || (!service && hasAddr)) dd += amount;\r\n            else dd += amount;\r\n          }\r\n        });\r\n\r\n        const k = todayISO;\r\n        filteredDailySales[k] = {\r\n          'Domicilios Almuerzo': (filteredDailySales[k]?.['Domicilios Almuerzo'] || 0) + da,\r\n          'Domicilios Desayuno': (filteredDailySales[k]?.['Domicilios Desayuno'] || 0) + dd,\r\n          'Mesas/Llevar Almuerzo': (filteredDailySales[k]?.['Mesas/Llevar Almuerzo'] || 0) + ma,\r\n          'Mesas/Llevar Desayuno': (filteredDailySales[k]?.['Mesas/Llevar Desayuno'] || 0) + md,\r\n        };\r\n      }\r\n\r\n      const sortedDates = Object.keys(filteredDailySales).sort((a, b) => new Date(a) - new Date(b));\r\n      chartData = sortedDates.map((date) => ({\r\n        name: date,\r\n        'Domicilios Almuerzo': filteredDailySales[date]['Domicilios Almuerzo'] || 0,\r\n        'Domicilios Desayuno': filteredDailySales[date]['Domicilios Desayuno'] || 0,\r\n        'Mesas/Llevar Almuerzo': filteredDailySales[date]['Mesas/Llevar Almuerzo'] || 0,\r\n        'Mesas/Llevar Desayuno': filteredDailySales[date]['Mesas/Llevar Desayuno'] || 0,\r\n      }));\r\n    }\r\n\r\n    setDailySalesChartData(chartData);\r\n  }, [\r\n    orders,\r\n    salonOrders,\r\n    breakfastOrders,\r\n    breakfastSalonOrders,\r\n    ingresosData,\r\n    salesFilterRange,\r\n    salesCustomStartDate,\r\n    salesCustomEndDate,\r\n    isAuthReady,\r\n    selectedMonth,\r\n  ]);\r\n\r\n  /* ==========================\r\n     Daily Orders Chart (conteos)\r\n     ========================== */\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const monthNames = [\r\n      'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n      'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre',\r\n    ];\r\n    const { startDate: ordersStartDate, endDate: ordersEndDate } = getDateRange(\r\n      ordersFilterRange,\r\n      ordersCustomStartDate,\r\n      ordersCustomEndDate\r\n    );\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const todayISO = today.toISOString().split('T')[0];\r\n    let chartData;\r\n\r\n    if (ordersFilterRange === 'year' && !selectedMonth) {\r\n      const monthlyOrders = {};\r\n      const currentYear = today.getFullYear();\r\n\r\n      for (let month = 0; month < 12; month++) {\r\n        const monthKey = `${currentYear}-${String(month + 1).padStart(2, '0')}`;\r\n        monthlyOrders[monthKey] = { domicilios: 0, mesas: 0 };\r\n      }\r\n\r\n      pedidosDiariosGuardadosData.forEach((summary) => {\r\n        const date = new Date(summary.date);\r\n        if (date.getFullYear() === currentYear) {\r\n          const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n          monthlyOrders[monthKey].domicilios += summary.domicilios || 0;\r\n          monthlyOrders[monthKey].mesas += summary.mesas || 0;\r\n        }\r\n      });\r\n\r\n      const currentMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n      let currentMonthRealtimeDomicilios = 0;\r\n      let currentMonthRealtimeMesas = 0;\r\n\r\n      orders.forEach((order) => {\r\n        const d = order.createdAt?.toDate ? new Date(order.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          currentMonthRealtimeDomicilios++;\r\n        }\r\n      });\r\n\r\n      salonOrders.forEach((tableOrder) => {\r\n        const d = tableOrder.createdAt?.toDate ? new Date(tableOrder.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          currentMonthRealtimeMesas++;\r\n        }\r\n      });\r\n\r\n      // ⬇️ contar órdenes de desayunos de salón como \"Mesas\"\r\n      breakfastSalonOrders.forEach((bo) => {\r\n        const d = bo.createdAt?.toDate ? new Date(bo.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          currentMonthRealtimeMesas++;\r\n        }\r\n      });\r\n\r\n      monthlyOrders[currentMonthKey].domicilios += currentMonthRealtimeDomicilios;\r\n      monthlyOrders[currentMonthKey].mesas += currentMonthRealtimeMesas;\r\n\r\n      chartData = Object.keys(monthlyOrders).map((monthKey) => ({\r\n        name: monthNames[parseInt(monthKey.split('-')[1]) - 1],\r\n        monthKey: monthKey,\r\n        Domicilios: monthlyOrders[monthKey].domicilios,\r\n        Mesas: monthlyOrders[monthKey].mesas,\r\n      }));\r\n    } else {\r\n      const filteredDailyOrders = {};\r\n\r\n      pedidosDiariosGuardadosData.forEach((summary) => {\r\n        const summaryDate = new Date(summary.date).toISOString().split('T')[0];\r\n        if (\r\n          summaryDate >= ordersStartDate.toISOString().split('T')[0] &&\r\n          summaryDate <= ordersEndDate.toISOString().split('T')[0]\r\n        ) {\r\n          if (ordersFilterRange === 'year' && selectedMonth) {\r\n            const monthKey = `${new Date(summary.date).getFullYear()}-${String(\r\n              new Date(summary.date).getMonth() + 1\r\n            ).padStart(2, '0')}`;\r\n            if (monthKey === selectedMonth) {\r\n              filteredDailyOrders[summaryDate] = {\r\n                Domicilios: summary.domicilios || 0,\r\n                Mesas: summary.mesas || 0,\r\n              };\r\n            }\r\n          } else {\r\n            filteredDailyOrders[summaryDate] = {\r\n              Domicilios: summary.domicilios || 0,\r\n              Mesas: summary.mesas || 0,\r\n            };\r\n          }\r\n        }\r\n      });\r\n\r\n      if (today >= ordersStartDate && today <= ordersEndDate) {\r\n        let currentDayRealtimeDomicilios = 0;\r\n        let currentDayRealtimeMesas = 0;\r\n\r\n        orders.forEach((order) => {\r\n          const orderDate = order.createdAt?.toDate\r\n            ? new Date(order.createdAt.toDate()).toISOString().split('T')[0]\r\n            : null;\r\n          if (orderDate === todayISO) {\r\n            currentDayRealtimeDomicilios++;\r\n          }\r\n        });\r\n\r\n        salonOrders.forEach((tableOrder) => {\r\n          const tableOrderDate = tableOrder.createdAt?.toDate\r\n            ? new Date(tableOrder.createdAt.toDate()).toISOString().split('T')[0]\r\n            : null;\r\n          if (tableOrderDate === todayISO) {\r\n            currentDayRealtimeMesas++;\r\n          }\r\n        });\r\n\r\n        // ⬇️ incluir desayuno de salón en el conteo de \"Mesas\"\r\n        breakfastSalonOrders.forEach((bo) => {\r\n          const dISO = bo.createdAt?.toDate\r\n            ? new Date(bo.createdAt.toDate()).toISOString().split('T')[0]\r\n            : getDocDateISO(bo);\r\n          if (dISO === todayISO) currentDayRealtimeMesas++;\r\n        });\r\n\r\n        if (ordersFilterRange === 'year' && selectedMonth) {\r\n          const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n          if (currentMonth === selectedMonth) {\r\n            filteredDailyOrders[todayISO] = {\r\n              Domicilios: (filteredDailyOrders[todayISO]?.Domicilios || 0) + currentDayRealtimeDomicilios,\r\n              Mesas: (filteredDailyOrders[todayISO]?.Mesas || 0) + currentDayRealtimeMesas,\r\n            };\r\n          }\r\n        } else {\r\n          filteredDailyOrders[todayISO] = {\r\n            Domicilios: (filteredDailyOrders[todayISO]?.Domicilios || 0) + currentDayRealtimeDomicilios,\r\n            Mesas: (filteredDailyOrders[todayISO]?.Mesas || 0) + currentDayRealtimeMesas,\r\n          };\r\n        }\r\n      }\r\n\r\n      const sortedDates = Object.keys(filteredDailyOrders).sort((a, b) => new Date(a) - new Date(b));\r\n      chartData = sortedDates.map((date) => ({\r\n        name: date,\r\n        Domicilios: filteredDailyOrders[date].Domicilios,\r\n        Mesas: filteredDailyOrders[date].Mesas,\r\n      }));\r\n    }\r\n\r\n    setDailyOrdersChartData(chartData);\r\n  }, [\r\n    orders,\r\n    salonOrders,\r\n    breakfastSalonOrders,\r\n    pedidosDiariosGuardadosData,\r\n    ordersFilterRange,\r\n    ordersCustomStartDate,\r\n    ordersCustomEndDate,\r\n    isAuthReady,\r\n    selectedMonth,\r\n  ]);\r\n\r\n  /* ==========================================\r\n     Guardar ingresos diarios (HOY) — coherente\r\n     ========================================== */\r\n  const handleSaveDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n\r\n      let da = 0, dd = 0, ma = 0, md = 0;\r\n\r\n      // Domicilios almuerzo (orders)\r\n      orders.forEach((o) => {\r\n        const dISO = o.createdAt?.toDate ? new Date(o.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (dISO === today) da += Number(o.total || 0);\r\n      });\r\n\r\n      // Salón (tableOrders + waiterOrders) — separar desayuno/almuerzo\r\n      salonOrders.forEach((t) => {\r\n        const dISO = t.createdAt?.toDate ? new Date(t.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (dISO !== today) return;\r\n        const amount = Number(t.total || 0);\r\n        if (amount <= 0) return;\r\n        const esDesayuno = isBreakfastOrder(t);\r\n        if (esDesayuno) md += amount;\r\n        else ma += amount;\r\n      });\r\n\r\n      // Desayunos de salón (colección 'breakfastOrders'): van al bucket de \"Mesas/Llevar Desayuno\"\r\n      breakfastSalonOrders.forEach((b) => {\r\n        const dISO = b.createdAt?.toDate ? new Date(b.createdAt.toDate()).toISOString().split('T')[0] : getDocDateISO(b);\r\n        if (dISO === today) md += Number(b.total || 0);\r\n      });\r\n\r\n      // Desayunos delivery\r\n      breakfastOrders.forEach((b) => {\r\n        if (getDocDateISO(b) === today) {\r\n          const amount = Number(b.total || 0);\r\n          const service = normalizeServiceFromOrder(b);\r\n          const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n          if (service === 'mesa' || service === 'llevar') md += amount;\r\n          else if (service === 'domicilio' || (!service && hasAddr)) dd += amount;\r\n          else dd += amount;\r\n        }\r\n      });\r\n\r\n      const totalIncome = da + dd + ma + md;\r\n\r\n      const qY = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const snap = await getDocs(qY);\r\n      const payload = {\r\n        date: today,\r\n        categories: {\r\n          domiciliosAlmuerzo: da,\r\n          domiciliosDesayuno: dd,\r\n          mesasAlmuerzo: ma,\r\n          mesasDesayuno: md,\r\n        },\r\n        totalIncome,\r\n        updatedAt: serverTimestamp(),\r\n      };\r\n\r\n      if (snap.empty) {\r\n        await addDoc(collection(db, INGRESOS_COLLECTION), {\r\n          ...payload,\r\n          createdAt: serverTimestamp(),\r\n        });\r\n        setSuccess?.(`Resumen de ingresos para ${today} guardado correctamente.`);\r\n      } else {\r\n        await updateDoc(doc(db, INGRESOS_COLLECTION, snap.docs[0].id), payload);\r\n        setSuccess?.(`Resumen de ingresos para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError?.(`Error al guardar/actualizar resumen de ingresos: ${error.message}`);\r\n      console.error('Error al guardar ingresos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, salonOrders, breakfastOrders, breakfastSalonOrders, setSuccess, setError]);\r\n\r\n  /* ===================================\r\n     Cierre automático diario (para AYER)\r\n     =================================== */\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const saveDay = async () => {\r\n      try {\r\n        const now = new Date();\r\n        const todayISO = now.toISOString().split('T')[0];\r\n        const y = new Date(now);\r\n        y.setDate(y.getDate() - 1);\r\n        y.setHours(0, 0, 0, 0);\r\n        const yesterdayISO = y.toISOString().split('T')[0];\r\n\r\n        const inDayISO = (ts, targetISO) => {\r\n          const d = ts?.toDate ? ts.toDate() : ts ? new Date(ts) : null;\r\n          if (!d) return false;\r\n          return d.toISOString().split('T')[0] === targetISO;\r\n        };\r\n\r\n        let da = 0, dd = 0, ma = 0, md = 0;\r\n\r\n        orders.forEach((o) => {\r\n          if (inDayISO(o.createdAt, yesterdayISO)) da += Number(o.total || 0);\r\n        });\r\n\r\n        salonOrders.forEach((t) => {\r\n          if (!inDayISO(t.createdAt, yesterdayISO)) return;\r\n          const amount = Number(t.total || 0);\r\n          if (amount <= 0) return;\r\n          const esDesayuno = isBreakfastOrder(t);\r\n          if (esDesayuno) md += amount;\r\n          else ma += amount;\r\n        });\r\n\r\n        // Desayunos de salón (ayer)\r\n        breakfastSalonOrders.forEach((b) => {\r\n          const bISO = getDocDateISO(b);\r\n          if (bISO !== yesterdayISO) return;\r\n          md += Number(b.total || 0);\r\n        });\r\n\r\n        // Desayunos delivery (ayer)\r\n        breakfastOrders.forEach((b) => {\r\n          const bISO = getDocDateISO(b);\r\n          if (bISO !== yesterdayISO) return;\r\n          const amount = Number(b.total || 0);\r\n          const service = normalizeServiceFromOrder(b);\r\n          const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n          if (service === 'mesa' || service === 'llevar') md += amount;\r\n          else if (service === 'domicilio' || (!service && hasAddr)) dd += amount;\r\n          else dd += amount;\r\n        });\r\n\r\n        const payloadY = {\r\n          date: yesterdayISO,\r\n          categories: {\r\n            domiciliosAlmuerzo: da,\r\n            domiciliosDesayuno: dd,\r\n            mesasAlmuerzo: ma,\r\n            mesasDesayuno: md,\r\n          },\r\n          totalIncome: da + dd + ma + md,\r\n          updatedAt: serverTimestamp(),\r\n        };\r\n\r\n        // Upsert AYER\r\n        const qY = query(collection(db, INGRESOS_COLLECTION), where('date', '==', yesterdayISO));\r\n        const snapY = await getDocs(qY);\r\n        if (snapY.empty) {\r\n          await addDoc(collection(db, INGRESOS_COLLECTION), { ...payloadY, createdAt: serverTimestamp() });\r\n        } else {\r\n          await updateDoc(doc(db, INGRESOS_COLLECTION, snapY.docs[0].id), payloadY);\r\n        }\r\n\r\n        // Sembrar HOY vacío si no existe\r\n        const qToday = query(collection(db, INGRESOS_COLLECTION), where('date', '==', todayISO));\r\n        const snapToday = await getDocs(qToday);\r\n        if (snapToday.empty) {\r\n          await addDoc(collection(db, INGRESOS_COLLECTION), {\r\n            date: todayISO,\r\n            categories: { domiciliosAlmuerzo: 0, domiciliosDesayuno: 0, mesasAlmuerzo: 0, mesasDesayuno: 0 },\r\n            totalIncome: 0,\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          });\r\n        }\r\n      } catch (e) {\r\n        setError?.(`Cierre automático: ${e.message}`);\r\n        console.error('Cierre automático diario', e);\r\n      }\r\n    };\r\n\r\n    // Programar a las 00:00:05\r\n    const schedule = () => {\r\n      const now = new Date();\r\n      const next = new Date(now);\r\n      next.setDate(now.getDate() + 1);\r\n      next.setHours(0, 0, 5, 0);\r\n      const ms = next.getTime() - now.getTime();\r\n      return setTimeout(async () => {\r\n        await saveDay();\r\n        schedule();\r\n      }, ms);\r\n    };\r\n\r\n    const timer = schedule();\r\n    return () => clearTimeout(timer);\r\n  }, [isAuthReady, orders, salonOrders, breakfastOrders, breakfastSalonOrders, setError]);\r\n\r\n  /* ==========================================\r\n     Guardar / borrar conteo de pedidos diarios\r\n     ========================================== */\r\n  const handleDeleteDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, INGRESOS_COLLECTION, docToDelete.id));\r\n        setSuccess?.(`Resumen de ingresos para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess?.(`No se encontró un resumen de ingresos para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError?.(`Error al eliminar resumen de ingresos: ${error.message}`);\r\n      console.error('Error al eliminar ingresos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  const handleSaveDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      let currentDayDomicilios = 0;\r\n      let currentDayMesas = 0;\r\n\r\n      orders.forEach((order) => {\r\n        const orderDate = order.createdAt?.toDate\r\n          ? new Date(order.createdAt.toDate()).toISOString().split('T')[0]\r\n          : null;\r\n        if (orderDate === today) currentDayDomicilios++;\r\n      });\r\n\r\n      salonOrders.forEach((tableOrder) => {\r\n        const tableOrderDate = tableOrder.createdAt?.toDate\r\n          ? new Date(tableOrder.createdAt.toDate()).toISOString().split('T')[0]\r\n          : null;\r\n        if (tableOrderDate === today) currentDayMesas++;\r\n      });\r\n\r\n      // ⬇️ contar también las órdenes de desayunos de salón\r\n      breakfastSalonOrders.forEach((bo) => {\r\n        const dISO = bo.createdAt?.toDate\r\n          ? new Date(bo.createdAt.toDate()).toISOString().split('T')[0]\r\n          : getDocDateISO(bo);\r\n        if (dISO === today) currentDayMesas++;\r\n      });\r\n\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (existingSummarySnapshot.empty) {\r\n        await addDoc(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), {\r\n          date: today,\r\n          domicilios: currentDayDomicilios,\r\n          mesas: currentDayMesas,\r\n          createdAt: serverTimestamp(),\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess?.(`Conteo de pedidos diarios para ${today} guardado correctamente.`);\r\n      } else {\r\n        const docToUpdate = existingSummarySnapshot.docs[0];\r\n        await updateDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToUpdate.id), {\r\n          domicilios: currentDayDomicilios,\r\n          mesas: currentDayMesas,\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess?.(`Conteo de pedidos diarios para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError?.(`Error al guardar/actualizar conteo de pedidos diarios: ${error.message}`);\r\n      console.error('Error al guardar conteo de pedidos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, salonOrders, breakfastSalonOrders, setSuccess, setError]);\r\n\r\n  const handleDeleteDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToDelete.id));\r\n        setSuccess?.(`Conteo de pedidos diarios para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess?.(`No se encontró un conteo de pedidos diarios para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError?.(`Error al eliminar conteo de pedidos diarios: ${error.message}`);\r\n      console.error('Error al eliminar conteo de pedidos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  /* ============\r\n     Retorno hook\r\n     ============ */\r\n  return {\r\n    loadingData,\r\n    orders,\r\n    tableOrders,\r\n    waiterOrders,\r\n    breakfastOrders,        // delivery\r\n    breakfastSalonOrders,   // salón\r\n    users,\r\n    totals,\r\n    statusCounts,\r\n    userActivity,\r\n\r\n    // ALIAS para DashboardCharts:\r\n    ingresosCategoriasData: dailySalesChartData,\r\n    gastosPorTiendaData: Object.entries(totals?.expensesByProvider?.byProvider || {})\r\n      .map(([name, value]) => ({ name, value })),\r\n    pedidosDiariosChartData: dailyOrdersChartData,\r\n    statusPieChartData,\r\n\r\n    // Desglose robusto por Tipo de Venta\r\n    saleTypeBreakdown,\r\n\r\n    // Handlers:\r\n    handleSaveDailyIngresos,\r\n    handleDeleteDailyIngresos,\r\n    handleSaveDailyOrders,\r\n    handleDeleteDailyOrders,\r\n  };\r\n};\r\n","//src/components/Admin/DashboardCharts.js\r\nimport React, { Fragment, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  PieChart, Pie, Cell, Label\r\n} from 'recharts';\r\nimport { DollarSign, MoreVertical, Save, Trash2, TrendingUp, Package, ArrowLeft } from 'lucide-react';\r\nimport { Popover, PopoverButton, PopoverPanel, Transition } from '@headlessui/react';\r\nimport { collection, onSnapshot, query, orderBy } from 'firebase/firestore';\r\nimport { db } from '../../config/firebase';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { BAR_COLORS, PIE_COLORS } from './dashboardConstants';\r\nimport { isMobile as checkIsMobile } from '../../utils/Helpers';\r\n\r\n// Custom scrollbar styles\r\nconst scrollbarStyles = `\r\n  .custom-scrollbar::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-track {\r\n    background: var(--scrollbar-track-color, #2d3748);\r\n    border-radius: 10px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-thumb {\r\n    background: var(--scrollbar-thumb-color, #4a5568);\r\n    border-radius: 10px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n    background: var(--scrollbar-thumb-hover-color, #64748b);\r\n  }\r\n  .custom-scrollbar {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: var(--scrollbar-thumb-color, #4a5568) var(--scrollbar-track-color, #2d3748);\r\n  }\r\n`;\r\n\r\nconst SkeletonLoader = ({ type, theme, isMobile }) => {\r\n  if (type === 'bar') {\r\n    const numBars = isMobile ? 5 : 7;\r\n    return (\r\n      <div className=\"flex h-full items-end justify-around p-4 animate-pulse\">\r\n        {Array.from({ length: numBars }).map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className={classNames(\r\n              'rounded-t-md',\r\n              theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200',\r\n              'mx-1'\r\n            )}\r\n            style={{ width: `${100 / numBars - 5}%`, height: `${Math.random() * 70 + 30}%` }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else if (type === 'pie') {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full animate-pulse\">\r\n        <div className={classNames(\r\n          isMobile ? 'w-32 h-32' : 'w-40 h-40',\r\n          'rounded-full',\r\n          theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200'\r\n        )}></div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n// Colombian Peso formatter\r\nconst copFormatter = new Intl.NumberFormat('es-CO', {\r\n  style: 'currency',\r\n  currency: 'COP',\r\n  minimumFractionDigits: 0,\r\n});\r\n\r\n// Custom Tooltip for Bar Charts\r\nconst CustomBarTooltip = ({ active, payload, label, theme, chartTextColor, copFormatter, isOrderChart = false }) => {\r\n  if (active && payload && payload.length) {\r\n    const total = payload.reduce((sum, entry) => sum + entry.value, 0);\r\n    const formatValue = isOrderChart ? (value) => value.toLocaleString() : (value) => typeof copFormatter === 'function' ? copFormatter(value) : copFormatter.format(value);\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 5 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: 5 }}\r\n        className=\"custom-tooltip p-3 rounded-xl shadow-lg border\"\r\n        style={{\r\n          backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n          borderColor: theme === 'dark' ? 'rgba(75, 85, 99, 0.7)' : 'rgba(229, 231, 235, 0.7)',\r\n          backdropFilter: 'blur(8px)',\r\n          color: chartTextColor,\r\n          fontSize: '14px',\r\n        }}\r\n      >\r\n        <p className=\"font-bold mb-1\">{label}</p>\r\n        {payload.map((entry, index) => (\r\n          <p key={`item-${index}`} style={{ color: entry.color || chartTextColor }}>\r\n            {entry.name}: <span className=\"font-semibold\">{formatValue(entry.value)}</span>\r\n          </p>\r\n        ))}\r\n        <p className=\"font-bold mt-2 border-t pt-2\" style={{ borderColor: theme === 'dark' ? '#4b5563' : '#e5e7eb' }}>\r\n          Total: {formatValue(total)}\r\n        </p>\r\n      </motion.div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n// Custom Tooltip for Pie Chart\r\nconst CustomPieTooltip = ({ active, payload, theme, chartTextColor }) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 5 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: 5 }}\r\n        className=\"custom-tooltip p-3 rounded-xl shadow-lg border\"\r\n        style={{\r\n          backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n          borderColor: theme === 'dark' ? 'rgba(75, 85, 99, 0.7)' : 'rgba(229, 231, 235, 0.7)',\r\n          backdropFilter: 'blur(8px)',\r\n          color: chartTextColor,\r\n          fontSize: '14px',\r\n        }}\r\n      >\r\n        <p className=\"font-bold mb-1\" style={{ color: data.color || chartTextColor }}>{data.name}</p>\r\n        <p>\r\n          Valor: <span className=\"font-semibold\">{data.value}</span>\r\n        </p>\r\n        <p>\r\n          Porcentaje: <span className=\"font-semibold\">{`${(data.percent * 100).toFixed(1)}%`}</span>\r\n        </p>\r\n      </motion.div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DashboardCharts = React.memo(({\r\n  dailySalesChartData,\r\n  dailyOrdersChartData,\r\n  statusPieChartData,\r\n  theme = 'dark',\r\n  chartTextColor = '#ffffff',\r\n  salesFilterRange,\r\n  setSalesFilterRange = () => {},\r\n  salesCustomStartDate,\r\n  setSalesCustomStartDate = () => {},\r\n  salesCustomEndDate,\r\n  setSalesCustomEndDate = () => {},\r\n  ordersFilterRange,\r\n  setOrdersFilterRange = () => {},\r\n  ordersCustomStartDate,\r\n  setOrdersCustomStartDate = () => {},\r\n  ordersCustomEndDate,\r\n  setOrdersCustomEndDate = () => {},\r\n  handleSaveDailyIngresos = () => {},\r\n  handleDeleteDailyIngresos = () => {},\r\n  handleSaveDailyOrders = () => {},\r\n  handleDeleteDailyOrders = () => {},\r\n  handleSaveDailyExpenses = () => {},\r\n  handleDeleteDailyExpenses = () => {},\r\n  loading,\r\n  selectedMonth,\r\n  setSelectedMonth = () => {}\r\n}) => {\r\n  const [isMobileDevice, setIsMobileDevice] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n  const [expenseFilterRange, setExpenseFilterRange] = useState('30_days');\r\n  const [expenseCustomStartDate, setExpenseCustomStartDate] = useState(null);\r\n  const [expenseCustomEndDate, setExpenseCustomEndDate] = useState(null);\r\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const paymentsQuery = query(collection(db, 'payments'), orderBy('timestamp', 'desc'));\r\n    const unsubscribe = onSnapshot(paymentsQuery, (snapshot) => {\r\n      setPayments(\r\n        snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))\r\n      );\r\n    }, (error) => console.error(`Error al cargar pagos: ${error.message}`));\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobileDevice(checkIsMobile());\r\n    };\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const dailyExpensesChartData = useMemo(() => {\r\n    const groupedByDate = payments.reduce((acc, payment) => {\r\n      if (!payment.timestamp) return acc;\r\n      const date = new Date(payment.timestamp.toDate());\r\n      const now = new Date();\r\n      let startDate;\r\n      if (expenseFilterRange === '7_days') {\r\n        startDate = new Date(now.setDate(now.getDate() - 7));\r\n      } else if (expenseFilterRange === '30_days') {\r\n        startDate = new Date(now.setDate(now.getDate() - 30));\r\n      } else if (expenseFilterRange === 'year') {\r\n        startDate = new Date(now.getFullYear(), 0, 1);\r\n      } else if (expenseFilterRange === 'custom' && expenseCustomStartDate && expenseCustomEndDate) {\r\n        startDate = new Date(expenseCustomStartDate);\r\n      } else {\r\n        startDate = new Date(0);\r\n      }\r\n      if (expenseFilterRange === 'custom' && expenseCustomEndDate) {\r\n        const endDate = new Date(expenseCustomEndDate);\r\n        if (date < startDate || date > endDate) return acc;\r\n      } else if (date < startDate) {\r\n        return acc;\r\n      }\r\n      const dateKey = date.toISOString().split('T')[0];\r\n      if (!acc[dateKey]) {\r\n        acc[dateKey] = { name: dateKey, Total: 0 };\r\n      }\r\n      acc[dateKey].Total += payment.amount;\r\n      return acc;\r\n    }, {});\r\n    return Object.values(groupedByDate).sort((a, b) => new Date(a.name) - new Date(b.name));\r\n  }, [payments, expenseFilterRange, expenseCustomStartDate, expenseCustomEndDate]);\r\n\r\n  const totalExpenses = useMemo(() => payments.reduce((sum, payment) => sum + payment.amount, 0), [payments]);\r\n  const totalOrders = useMemo(() => statusPieChartData.reduce((sum, entry) => sum + entry.value, 0), [statusPieChartData]);\r\n\r\n  const aggregatedPaymentsByRecipient = useMemo(() => {\r\n    const grouped = payments.reduce((acc, payment) => {\r\n      const storeName = payment.store || 'Desconocido';\r\n      if (!acc[storeName]) {\r\n        acc[storeName] = { totalAmount: 0, payments: [] };\r\n      }\r\n      acc[storeName].totalAmount += payment.amount;\r\n      acc[storeName].payments.push(payment);\r\n      return acc;\r\n    }, {});\r\n    return Object.entries(grouped)\r\n      .map(([store, data]) => ({ store, ...data }))\r\n      .sort((a, b) => b.totalAmount - a.totalAmount);\r\n  }, [payments]);\r\n\r\n  const paymentsForSelectedRecipient = useMemo(() => {\r\n    if (!selectedRecipient) return [];\r\n    return payments.filter(payment => payment.store === selectedRecipient).sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate());\r\n  }, [payments, selectedRecipient]);\r\n\r\n  const chartVariants = {\r\n    hidden: { opacity: 0, scale: 0.98, y: 10 },\r\n    visible: { opacity: 1, scale: 1, y: 0, transition: { duration: 0.6, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.98, y: 10, transition: { duration: 0.4, ease: \"easeIn\" } },\r\n  };\r\n\r\n  const pieChartVariants = {\r\n    hidden: { opacity: 0, scale: 0.9 },\r\n    visible: { opacity: 1, scale: 1, transition: { duration: 0.7, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.9, transition: { duration: 0.5, ease: \"easeIn\" } },\r\n  };\r\n\r\n  const chartMinWidth = isMobileDevice ? \"min-w-[700px]\" : \"min-w-0\";\r\n  const chartHeight = isMobileDevice ? \"h-[250px]\" : \"h-[300px]\";\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-12 mb-8 px-4 sm:px-6 lg:px-8 pb-12\">\r\n      <style dangerouslySetInnerHTML={{ __html: scrollbarStyles }} />\r\n      {/* Daily Sales Chart */}\r\n      <div className={classNames(\r\n          theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n          isMobileDevice ? 'p-4' : 'p-6',\r\n          'rounded-2xl shadow-xl border',\r\n          theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n          'relative min-h-[450px] flex flex-col'\r\n        )}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n            <DollarSign className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-green-400\")} />\r\n            Ingresos Diarios\r\n          </h3>\r\n          <Popover className=\"relative\">\r\n            <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n              <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n            </PopoverButton>\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <PopoverPanel className={classNames(\r\n                \"absolute z-50 mt-2\",\r\n                \"right-0 left-auto\",\r\n                isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                \"origin-top-right\",\r\n                \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n              )}>\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={handleSaveDailyIngresos}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    )}\r\n                  >\r\n                    <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                    {loading ? 'Guardando...' : 'Guardar Ventas del Día'}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDeleteDailyIngresos()}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                    )}\r\n                  >\r\n                    <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                    Eliminar Ventas del Día\r\n                  </button>\r\n                  <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('7_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver últimos 7 días\r\n                  </button>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('30_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver todo el mes\r\n                  </button>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('year'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver todo el año\r\n                  </button>\r\n                  <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                  <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                  <div className=\"px-4 py-2\">\r\n                    <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={salesCustomStartDate ? salesCustomStartDate.toISOString().split('T')[0] : ''}\r\n                      onChange={(e) => { setSalesCustomStartDate(new Date(e.target.value)); setSalesFilterRange('custom'); setSelectedMonth(null); }}\r\n                      className={classNames(\r\n                        \"block w-full rounded-md shadow-sm p-2\",\r\n                        isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                        theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                      )}\r\n                    />\r\n                  </div>\r\n                  <div className=\"px-4 py-2\">\r\n                    <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={salesCustomEndDate ? salesCustomEndDate.toISOString().split('T')[0] : ''}\r\n                      onChange={(e) => { setSalesCustomEndDate(new Date(e.target.value)); setSalesFilterRange('custom'); }}\r\n                      className={classNames(\r\n                        \"block w-full rounded-md shadow-sm p-2\",\r\n                        isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                        theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </PopoverPanel>\r\n            </Transition>\r\n          </Popover>\r\n        </div>\r\n        <motion.div\r\n          className={classNames(\r\n            isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n            'relative flex flex-col flex-grow'\r\n          )}\r\n          variants={chartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          {salesFilterRange === 'year' && selectedMonth && (\r\n            <motion.button\r\n              initial={{ opacity: 0, x: -10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              exit={{ opacity: 0, x: -10 }}\r\n              onClick={() => setSelectedMonth(null)}\r\n              className=\"mb-4 text-blue-500 hover:underline text-sm self-start transition-all duration-200\"\r\n            >\r\n              <ArrowLeft className=\"w-4 h-4 inline-block mr-2\" />Volver al resumen anual\r\n            </motion.button>\r\n          )}\r\n          {loading ? (\r\n            <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n          ) : (\r\n            <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                  data={dailySalesChartData}\r\n                  margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                  barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n                  barGap={1}\r\n                >\r\n                  <CartesianGrid\r\n                    strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n                    stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n                    vertical={false}\r\n                  />\r\n                  <XAxis\r\n                    dataKey=\"name\"\r\n                    stroke={chartTextColor}\r\n                    tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                    angle={-45}\r\n                    textAnchor=\"end\"\r\n                    interval={0}\r\n                    height={60}\r\n                  />\r\n                  <YAxis\r\n                    stroke={chartTextColor}\r\n                    tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                    tickFormatter={(value) => copFormatter.format(value)}\r\n                    width={isMobileDevice ? 50 : 80}\r\n                  />\r\n                  <Tooltip\r\n                    cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n                    content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={copFormatter} />}\r\n                  />\r\n                  <Legend\r\n                    wrapperStyle={{ color: chartTextColor, fontSize: isMobileDevice ? 10 : 13, paddingTop: '15px', paddingBottom: '20px' }}\r\n                    align=\"center\"\r\n                    verticalAlign=\"top\"\r\n                    iconType=\"circle\"\r\n                  />\r\n<Bar\r\n  dataKey=\"Domicilios Almuerzo\"\r\n  fill=\"#34D399\"\r\n  stroke=\"#34D399\"\r\n  radius={[8, 8, 0, 0]}\r\n  maxBarSize={isMobileDevice ? 12 : 25}\r\n  animationDuration={800}\r\n  onClick={(data) => { if (salesFilterRange === 'year' && data.monthKey) setSelectedMonth(data.monthKey); }}\r\n/>\r\n<Bar\r\n  dataKey=\"Domicilios Desayuno\"\r\n  fill=\"#60A5FA\"\r\n  stroke=\"#60A5FA\"\r\n  radius={[8, 8, 0, 0]}\r\n  maxBarSize={isMobileDevice ? 12 : 25}\r\n  animationDuration={800}\r\n/>\r\n<Bar\r\n  dataKey=\"Mesas/Llevar Almuerzo\"\r\n  fill=\"#FBBF24\"\r\n  stroke=\"#FBBF24\"\r\n  radius={[8, 8, 0, 0]}\r\n  maxBarSize={isMobileDevice ? 12 : 25}\r\n  animationDuration={800}\r\n/>\r\n<Bar\r\n  dataKey=\"Mesas/Llevar Desayuno\"\r\n  fill=\"#F472B6\"\r\n  stroke=\"#F472B6\"\r\n  radius={[8, 8, 0, 0]}\r\n  maxBarSize={isMobileDevice ? 12 : 25}\r\n  animationDuration={800}\r\n/>\r\n\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* New 2x2 Grid for Expenses Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n        {/* Daily Expenses Chart */}\r\n        <div className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col'\r\n          )}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n              <DollarSign className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n              Gastos Diarios\r\n            </h3>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n                <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-50 mt-2\",\r\n                  \"right-0 left-auto\",\r\n                  isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"origin-top-right\",\r\n                  \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyExpenses}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                      {loading ? 'Guardando...' : 'Guardar Gastos del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyExpenses()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                      Eliminar Gastos del Día\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('7_days'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('30_days'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('year'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={expenseCustomStartDate ? expenseCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setExpenseCustomStartDate(new Date(e.target.value)); setExpenseFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={expenseCustomEndDate ? expenseCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setExpenseCustomEndDate(new Date(e.target.value)); setExpenseFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </div>\r\n          <motion.div\r\n            className={classNames(\r\n              isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n              'relative flex flex-col flex-grow'\r\n            )}\r\n            variants={chartVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            {loading ? (\r\n              <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n            ) : (\r\n              <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={dailyExpensesChartData}\r\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                    barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n                    barGap={1}\r\n                  >\r\n                    <CartesianGrid\r\n                      strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n                      stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n                      vertical={false}\r\n                    />\r\n                    <XAxis\r\n                      dataKey=\"name\"\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      angle={-45}\r\n                      textAnchor=\"end\"\r\n                      interval={0}\r\n                      height={60}\r\n                    />\r\n                    <YAxis\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      tickFormatter={(value) => copFormatter.format(value)}\r\n                      width={isMobileDevice ? 50 : 80}\r\n                    />\r\n                    <Tooltip\r\n                      cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n                      content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={copFormatter} />}\r\n                    />\r\n                    <Legend\r\n                      wrapperStyle={{ color: chartTextColor, paddingTop: '15px', fontSize: isMobileDevice ? 10 : 13 }}\r\n                      align=\"center\"\r\n                      verticalAlign=\"top\"\r\n                      iconType=\"circle\"\r\n                    />\r\n                    <Bar\r\n                      dataKey=\"Total\"\r\n                      fill=\"#EF4444\"\r\n                      stroke=\"#EF4444\"\r\n                      radius={[8, 8, 0, 0]}\r\n                      maxBarSize={isMobileDevice ? 12 : 25}\r\n                      animationDuration={800}\r\n                    />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Expenses Summary Card */}\r\n        <motion.div\r\n          className={classNames(\r\n            `bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`\r\n          )}\r\n          variants={chartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-5\">\r\n            <h3 className=\"text-2xl font-bold text-gray-100\">Gastos</h3>\r\n            <DollarSign className=\"text-red-400 w-10 h-10 animate-pulse\" />\r\n          </div>\r\n          <div className=\"space-y-4 text-base text-gray-300\">\r\n            <div className=\"flex justify-between items-center text-xl font-semibold\">\r\n              <span className=\"text-gray-200\">Total de Gastos:</span>\r\n              <span className=\"font-extrabold text-red-400\">\r\n                {copFormatter.format(totalExpenses)}\r\n              </span>\r\n            </div>\r\n            <div\r\n              className=\"border-t border-dashed my-4\"\r\n              style={{ borderColor: theme === 'dark' ? '#4b5563' : '#d1d5db' }}\r\n            ></div>\r\n            {!selectedRecipient ? (\r\n              <>\r\n                <p className=\"text-gray-400 text-sm mb-2\">Gastos por Remitente:</p>\r\n                <div className=\"text-sm max-h-52 overflow-y-auto custom-scrollbar pr-2\">\r\n                  {aggregatedPaymentsByRecipient.length === 0 ? (\r\n                    <p className=\"text-gray-500 text-center py-6\">\r\n                      Aún no hay gastos registrados. ¡Empieza a añadir algunos! 📝\r\n                    </p>\r\n                  ) : (\r\n                    aggregatedPaymentsByRecipient.map((entry, idx) => (\r\n                      <button\r\n                        key={idx}\r\n                        onClick={() => setSelectedRecipient(entry.store)}\r\n                        className=\"flex justify-between items-center w-full py-3 border-b last:border-b-0 transition-colors duration-200 hover:bg-gray-700 dark:hover:bg-gray-800 rounded-md px-2 -mx-2 cursor-pointer\"\r\n                        style={{ borderColor: theme === 'dark' ? '#374151' : '#e5e7eb' }}\r\n                      >\r\n                        <span className=\"text-gray-300 flex-1 pr-3 truncate text-left font-medium\">\r\n                          {entry.store}\r\n                        </span>\r\n                        <div className=\"flex flex-col items-end\">\r\n                          <span className=\"text-red-300 font-semibold\">\r\n                            {copFormatter.format(entry.totalAmount)}\r\n                          </span>\r\n                          <span className=\"text-gray-500 text-xs mt-1\">\r\n                            ({entry.payments.length} movimientos)\r\n                          </span>\r\n                        </div>\r\n                      </button>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => setSelectedRecipient(null)}\r\n                  className=\"flex items-center text-blue-400 hover:underline text-sm mb-4 transition-colors\"\r\n                >\r\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" /> Volver a Gastos por Remitente\r\n                </button>\r\n                <h4 className=\"text-lg font-semibold text-gray-200 mb-3\">{selectedRecipient}</h4>\r\n                <div className={classNames(\"text-sm max-h-52 overflow-y-auto custom-scrollbar pr-2\", isMobileDevice ? \"overflow-x-auto\" : \"overflow-x-hidden\")}>\r\n                    <div className=\"min-w-full inline-block align-middle\">\r\n                        {paymentsForSelectedRecipient.length === 0 ? (\r\n                            <p className=\"text-gray-500 text-center py-6\">\r\n                                No hay movimientos para este remitente en el rango de fechas seleccionado.\r\n                            </p>\r\n                        ) : (\r\n                            paymentsForSelectedRecipient.map((payment, idx) => (\r\n                                <div\r\n                                    key={idx}\r\n                                    className=\"flex items-center py-3 border-b last:border-b-0 transition-colors duration-200 hover:bg-gray-700 dark:hover:bg-gray-800 rounded-md px-2 -mx-2\"\r\n                                    style={{ borderColor: theme === 'dark' ? '#374151' : '#e5e7eb' }}\r\n                                >\r\n                                    <span className=\"text-gray-400 font-normal mr-3 min-w-[80px]\">\r\n                                        {payment.name || 'N/A'}\r\n                                    </span>\r\n                                    <span className=\"text-gray-300 font-light text-nowrap mr-3 min-w-[150px]\">\r\n                                        {new Date(payment.timestamp?.toDate()).toLocaleString('es-CO', { dateStyle: 'short', timeStyle: 'short' })}\r\n                                    </span>\r\n                                    <span className=\"text-red-300 font-semibold text-right flex-grow\">\r\n                                        {copFormatter.format(payment.amount)}\r\n                                    </span>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Existing Daily Orders and Status Pie Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n        {/* Daily Orders Chart */}\r\n        <div className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col'\r\n          )}>\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center justify-between\">\r\n            <span className=\"flex items-center\">\r\n              <Package className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-purple-400\")} />\r\n              Pedidos Diarios\r\n            </span>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n                <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-50 mt-2\",\r\n                  \"right-0 left-auto\",\r\n                  isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"origin-top-right\",\r\n                  \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyOrders}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                      {loading ? 'Guardando...' : 'Guardar Pedidos del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyOrders()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                      Eliminar Pedidos del Día\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('7_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('30_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('year'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomStartDate ? ordersCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomStartDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomEndDate ? ordersCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomEndDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </h3>\r\n          <motion.div\r\n            className={classNames(\r\n              isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n              'relative flex flex-col flex-grow'\r\n            )}\r\n            variants={chartVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            {ordersFilterRange === 'year' && selectedMonth && (\r\n              <motion.button\r\n                initial={{ opacity: 0, x: -10 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: -10 }}\r\n                onClick={() => setSelectedMonth(null)}\r\n                className=\"mb-4 text-blue-500 hover:underline text-sm self-start transition-all duration-200\"\r\n              >\r\n                <ArrowLeft className=\"w-4 h-4 inline-block mr-2\" />Volver al resumen anual\r\n              </motion.button>\r\n            )}\r\n            {loading ? (\r\n              <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n            ) : (\r\n        <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n    <BarChart\r\n      data={dailyOrdersChartData}\r\n      margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n      barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n      barGap={1}\r\n    >\r\n      <CartesianGrid\r\n        strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n        stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n        vertical={false}\r\n      />\r\n      <XAxis\r\n        dataKey=\"name\"\r\n        stroke={chartTextColor}\r\n        tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n        angle={-45}\r\n        textAnchor=\"end\"\r\n        interval={0}\r\n        height={60}\r\n      />\r\n      <YAxis\r\n        stroke={chartTextColor}\r\n        tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n        width={isMobileDevice ? 30 : 50}\r\n      />\r\n      <Tooltip\r\n        cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n        content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={(val) => val.toLocaleString()} />}\r\n      />\r\n      <Legend\r\n        wrapperStyle={{ color: chartTextColor, paddingTop: '10px', fontSize: isMobileDevice ? 8 : 12 }}\r\n        align=\"center\"\r\n        verticalAlign=\"top\"\r\n        iconType=\"circle\"\r\n      />\r\n      <Bar\r\n        dataKey=\"Domicilios\"\r\n        fill=\"#8B5CF6\"\r\n        stroke=\"#8B5CF6\"\r\n        radius={[10, 10, 0, 0]}\r\n        opacity={1}\r\n        isAnimationActive={false}\r\n        maxBarSize={isMobileDevice ? 12 : 25}\r\n      />\r\n      <Bar\r\n        dataKey=\"Mesas\"\r\n        fill=\"#10B981\"\r\n        stroke=\"#10B981\"\r\n        radius={[10, 10, 0, 0]}\r\n        opacity={1}\r\n        isAnimationActive={false}\r\n        maxBarSize={isMobileDevice ? 12 : 25}\r\n      />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n</div>\r\n            )}\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Order Status Pie Chart */}\r\n        <motion.div\r\n          className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col justify-center items-center'\r\n          )}\r\n          variants={pieChartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n            <TrendingUp className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n            Estado de Pedidos\r\n          </h3>\r\n          {loading ? (\r\n            <SkeletonLoader type=\"pie\" theme={theme} isMobile={isMobileDevice} />\r\n          ) : (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={statusPieChartData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={isMobileDevice ? 80 : 120}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  animationDuration={800}\r\n                  innerRadius={isMobileDevice ? 40 : 60}\r\n                >\r\n                  {statusPieChartData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={PIE_COLORS[index % PIE_COLORS.length]} stroke={theme === 'dark' ? '#1f2937' : '#ffffff'} strokeWidth={2} />\r\n                  ))}\r\n                  <Label\r\n                    value={`${totalOrders} Pedidos`}\r\n                    position=\"center\"\r\n                    fill={chartTextColor}\r\n                    fontSize={isMobileDevice ? 14 : 18}\r\n                    fontWeight=\"bold\"\r\n                    dy={isMobileDevice ? 0 : -10}\r\n                  />\r\n                  <Label\r\n                    value=\"Total\"\r\n                    position=\"center\"\r\n                    fill={chartTextColor}\r\n                    fontSize={isMobileDevice ? 10 : 12}\r\n                    dy={isMobileDevice ? 15 : 15}\r\n                  />\r\n                </Pie>\r\n                <Tooltip content={<CustomPieTooltip theme={theme} chartTextColor={chartTextColor} />} />\r\n                <Legend\r\n                  wrapperStyle={{ color: chartTextColor, fontSize: isMobileDevice ? 10 : 13, paddingTop: '15px' }}\r\n                  align=\"center\"\r\n                  verticalAlign=\"bottom\"\r\n                  iconType=\"circle\"\r\n                  layout=\"horizontal\"\r\n                />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DashboardCharts;","// src/context/DashboardDateContext.jsx\r\nimport React, { createContext, useContext, useMemo, useState, useCallback } from 'react';\r\n\r\nconst DashboardDateContext = createContext(null);\r\n\r\nconst tz = 'America/Bogota'; // sin DST\r\n\r\n// YYYY-MM-DD en zona Bogotá\r\nconst ymdInBogota = (date = new Date()) => {\r\n  const fmt = new Intl.DateTimeFormat('en-CA', { timeZone: tz, year: 'numeric', month: '2-digit', day: '2-digit' });\r\n  return fmt.format(date); // 'YYYY-MM-DD'\r\n};\r\n\r\nconst startOfDayBogota = (ymd) => new Date(`${ymd}T00:00:00.000-05:00`);\r\nconst endOfDayBogota   = (ymd) => new Date(`${ymd}T23:59:59.999-05:00`);\r\n\r\nconst timeAgo = (date) => {\r\n  if (!date) return '—';\r\n  const diff = Date.now() - new Date(date).getTime();\r\n  const mins = Math.max(0, Math.floor(diff / 60000));\r\n  if (mins < 1) return 'hace segundos';\r\n  if (mins === 1) return 'hace 1 min';\r\n  if (mins < 60) return `hace ${mins} min`;\r\n  const hours = Math.floor(mins / 60);\r\n  if (hours === 1) return 'hace 1 hora';\r\n  if (hours < 24) return `hace ${hours} horas`;\r\n  const days = Math.floor(hours / 24);\r\n  return days === 1 ? 'hace 1 día' : `hace ${days} días`;\r\n};\r\n\r\nexport const DashboardDateProvider = ({ children }) => {\r\n  const [selectedDate, setSelectedDate] = useState(ymdInBogota());\r\n\r\n  const setDateFromInput = useCallback((value) => {\r\n    // value es 'YYYY-MM-DD'\r\n    if (!value) return;\r\n    setSelectedDate(value);\r\n  }, []);\r\n\r\n  const value = useMemo(() => {\r\n    const startOfDay = startOfDayBogota(selectedDate);\r\n    const endOfDay   = endOfDayBogota(selectedDate);\r\n    return {\r\n      selectedDate,\r\n      startOfDay,\r\n      endOfDay,\r\n      setSelectedDate: setDateFromInput,\r\n      timeAgo,\r\n      ymdInBogota,\r\n    };\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <DashboardDateContext.Provider value={value}>\r\n      {children}\r\n    </DashboardDateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDashboardDate = () => useContext(DashboardDateContext);\r\n","//src/components/Admin/Dashboard.js\r\nimport React, { useState, useEffect, Fragment, useMemo, useCallback, useRef } from 'react';\r\nimport { db, auth } from '../../config/firebase';\r\nimport { onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { writeBatch, getDocs, collection } from 'firebase/firestore';\r\nimport { classNames } from '../../utils/classNames';\r\nimport {\r\n  Dialog, Transition, Popover, PopoverButton, PopoverPanel\r\n} from '@headlessui/react';\r\nimport {\r\n  Trash2, Info, X, ShoppingCart, DollarSign, Users,\r\n  Activity, Calendar, ChevronDown, ChevronUp, Clock, AlertTriangle\r\n} from 'lucide-react';\r\nimport { useDashboardData } from '../../hooks/useDashboardData';\r\nimport DashboardCharts from './DashboardCharts';\r\nimport { DashboardDateProvider, useDashboardDate } from '../../context/DashboardDateContext';\r\n\r\n// ----- Altura unificada para todas las tarjetas -----\r\nconst CARD_HEIGHT = 360;\r\n\r\n// Sólo usamos este token\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Hook para notificaciones (simple)\r\nconst useNotifier = () => {\r\n  const [message, setMessage] = useState(null);\r\n  const notify = useCallback((type, text) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage(null), 5000);\r\n  }, []);\r\n  return { notify, message };\r\n};\r\n\r\n// Spinner\r\nconst LoadingSpinner = ({ theme }) => (\r\n  <div className=\"flex justify-center items-center h-screen bg-gray-900\">\r\n    <div className={`animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 ${theme === 'dark' ? 'border-emerald-500' : 'border-emerald-600'}`}></div>\r\n  </div>\r\n);\r\n\r\n// Modal confirmación\r\nconst ConfirmationModal = ({ show, onClose, onConfirm, confirmText, setConfirmText, theme }) => (\r\n  <Transition show={show} as={Fragment}>\r\n    <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n      <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n      </Transition.Child>\r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\r\n          <Dialog.Panel className={classNames('w-full max-w-sm p-6 rounded-lg shadow-md text-center', theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')}>\r\n            <Dialog.Title className=\"text-lg font-medium mb-4 flex items-center justify-center gap-2 text-red-500\"><AlertTriangle className=\"w-6 h-6\" />Confirmar Limpieza de Actividad</Dialog.Title>\r\n            <p className=\"mb-4 text-sm\">Estás a punto de eliminar <span className=\"font-bold text-red-500\">TODAS</span> las actividades. Esta acción es irreversible. Para confirmar, escribe \"confirmar\":</p>\r\n            <input\r\n              type=\"text\"\r\n              value={confirmText}\r\n              onChange={(e) => setConfirmText(e.target.value)} \r\n              className={classNames('w-full p-2 rounded-md border text-center text-sm', theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900', 'focus:outline-none focus:ring-1 focus:ring-red-500')}\r\n              placeholder=\"escribe 'confirmar'\"\r\n            />\r\n            <div className=\"mt-6 flex justify-center gap-2\">\r\n              <button onClick={onClose} className={classNames('px-4 py-2 rounded-md text-sm font-medium', theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900')}>Cancelar</button>\r\n              <button onClick={onConfirm} className=\"px-4 py-2 rounded-md text-sm font-medium bg-red-600 hover:bg-red-700 text-white\">Limpiar Actividad</button>\r\n            </div>\r\n          </Dialog.Panel>\r\n        </Transition.Child>\r\n      </div>\r\n    </Dialog>\r\n  </Transition>\r\n);\r\n\r\n// Modal detalles\r\nconst DetailsModal = ({ show, onClose, details, theme }) => (\r\n  <Transition show={show} as={Fragment}>\r\n    <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n      <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n      </Transition.Child>\r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\r\n          <Dialog.Panel className={classNames('w-full max-w-md p-6 rounded-lg shadow-md', theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <Dialog.Title className=\"text-lg font-medium\">Detalle de Actividad</Dialog.Title>\r\n              <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-700 transition\">\r\n                <X className=\"w-5 h-5 text-gray-400\" />\r\n              </button>\r\n            </div>\r\n            <pre className=\"text-xs whitespace-pre-wrap p-4 bg-gray-700 rounded-lg text-gray-300 overflow-auto max-h-[70vh]\">\r\n              {JSON.stringify(details || {}, null, 2)}\r\n            </pre>\r\n          </Dialog.Panel>\r\n        </Transition.Child>\r\n      </div>\r\n    </Dialog>\r\n  </Transition>\r\n);\r\n\r\n// Tarjeta simple (ahora soporta vAlign y altura por prop)\r\nconst InfoCard = ({ theme, title, icon, color, data, labelColor = {}, vAlign = 'top', cardHeight = CARD_HEIGHT }) => {\r\n  const Icon = useMemo(() => {\r\n    switch (icon) {\r\n      case 'ShoppingCart': return ShoppingCart;\r\n      case 'Users': return Users;\r\n      case 'Activity': return Activity;\r\n      default: return null;\r\n    }\r\n  }, [icon]);\r\n\r\n  const containerLayout =\r\n    vAlign === 'center'\r\n      ? 'grid grid-rows-[auto,1fr]'\r\n      : vAlign === 'between'\r\n      ? 'flex flex-col justify-between'\r\n      : 'flex flex-col';\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `p-6 rounded-2xl shadow-xl border transition-all duration-300 ease-in-out ${containerLayout} flex-1`,\r\n        theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n      )}\r\n      style={{ height: cardHeight }}\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-2\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">{title}</h3>\r\n        {Icon && <Icon className={`${color} w-8 h-8`} />}\r\n      </div>\r\n\r\n      {/* Datos */}\r\n      <div\r\n        className={classNames(\r\n          'text-base text-gray-700 dark:text-gray-400',\r\n          vAlign === 'center' ? 'self-center w-full mt-1' : 'mt-3',\r\n          'space-y-2'\r\n        )}\r\n      >\r\n        {Object.entries(data).map(([label, value]) => (\r\n          <div key={label} className=\"flex justify-between\">\r\n            <span>{label}:</span>\r\n            <span className={classNames('font-bold', 'text-gray-900 dark:text-gray-100', labelColor[label])}>\r\n              {value}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Feed actividad (altura por prop + fixes de scroll)\r\nconst ActivityFeed = ({ theme, userActivity, onClearClick, onShowDetails, cardHeight = 360 }) => {\r\n  const listRef = useRef(null);\r\n  const [fadeTop, setFadeTop] = useState(false);\r\n  const [fadeBottom, setFadeBottom] = useState(false);\r\n\r\n  const updateFades = useCallback(() => {\r\n    const el = listRef.current;\r\n    if (!el) return;\r\n    setFadeTop(el.scrollTop > 0);\r\n    setFadeBottom(el.scrollTop + el.clientHeight < el.scrollHeight);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateFades();\r\n  }, [userActivity, updateFades]);\r\n\r\n  const rowHover = theme === 'dark' ? 'hover:bg-gray-700/40' : 'hover:bg-gray-100';\r\n  const borderRow = theme === 'dark' ? 'border-gray-700' : 'border-gray-200';\r\n  const fadeTopCls = theme === 'dark' ? 'bg-gradient-to-b from-gray-800 to-transparent' : 'bg-gradient-to-b from-white to-transparent';\r\n  const fadeBottomCls = theme === 'dark' ? 'bg-gradient-to-t from-gray-800 to-transparent' : 'bg-gradient-to-t from-white to-transparent';\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `p-6 rounded-2xl shadow-xl border flex flex-col`,\r\n        theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n      )}\r\n      style={{ height: cardHeight }}\r\n    >\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Actividad Reciente</h3>\r\n        <Activity className=\"text-orange-400 w-8 h-8\" />\r\n      </div>\r\n\r\n      {/* Contenedor scroll: un solo scroll horizontal para toda la tabla */}\r\n      <div\r\n        ref={listRef}\r\n        onScroll={updateFades}\r\n        className=\"relative text-sm min-h-40 max-h-56 overflow-y-auto overflow-x-auto custom-scrollbar pr-2 flex-1\"\r\n      >\r\n        {userActivity.length === 0 ? (\r\n          <p className=\"text-gray-400 text-center\">No hay actividad para la fecha.</p>\r\n        ) : (\r\n          // Tabla CSS: la primera columna toma el ancho del contenido más largo\r\n          <div className=\"min-w-max table w-full\">\r\n            {userActivity.map((act, idx) => (\r\n              <div key={idx} className=\"table-row\">\r\n                {/* Columna 1: acción + fecha (clickable) */}\r\n                <div className={`table-cell align-middle pr-3 py-2 border-b ${borderRow}`}>\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    onClick={() => onShowDetails(act)}\r\n                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && onShowDetails(act)}\r\n                    className={`inline-flex items-center gap-2 whitespace-nowrap cursor-pointer rounded-md px-2 py-1 transition-colors ${rowHover}`}\r\n                    title=\"Ver detalles\"\r\n                  >\r\n                    <span className=\"text-gray-400\">{act.action || '—'}</span>\r\n                    {act.action && <span className=\"text-gray-600\">•</span>}\r\n                    <span\r\n                      className=\"text-gray-500 text-xs\"\r\n                      title={act.timestamp ? new Date(act.timestamp).toLocaleString('es-CO') : 'N/A'}\r\n                    >\r\n                      {act.timestamp ? new Date(act.timestamp).toLocaleString('es-CO') : 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Columna 2: ícono info alineado a la derecha */}\r\n                <div className={`table-cell align-middle pl-2 pr-1 py-2 text-right border-b ${borderRow}`}>\r\n                  {act.details && (\r\n                    <button\r\n                      onClick={() => onShowDetails(act)}\r\n                      className=\"text-blue-400 hover:text-blue-300 p-1 rounded-full\"\r\n                      title=\"Ver detalles de la actividad\"\r\n                    >\r\n                      <Info className=\"w-4 h-4\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Degradados (top/bottom) */}\r\n        {fadeTop && (\r\n          <div className={classNames('pointer-events-none absolute top-0 left-0 right-0 h-4', fadeTopCls)} />\r\n        )}\r\n        {fadeBottom && (\r\n          <div className={classNames('pointer-events-none absolute bottom-0 left-0 right-0 h-4', fadeBottomCls)} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mt-4 text-center\">\r\n        <button\r\n          onClick={onClearClick}\r\n          className={classNames(\r\n            'px-4 py-2 rounded-md text-xs font-medium flex items-center justify-center mx-auto',\r\n            theme === 'dark' ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-red-500 hover:bg-red-600 text-white'\r\n          )}\r\n        >\r\n          <Trash2 className=\"w-4 h-4 mr-2\" /> Limpiar TODAS las Actividades\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// --- Totales Generales con altura por prop + scroll interno ---\r\n// --- Totales Generales con NETO real + desgloses correctos (origen y método) ---\r\nconst GeneralTotalsCard = ({\r\n  theme,\r\n  totals,\r\n  deliveryPersons,\r\n  lastUpdatedAt,\r\n  orders,\r\n  proteinDaily,\r\n  tableOrders,\r\n  breakfastOrders,\r\n  cardHeight = CARD_HEIGHT\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [showExpenses, setShowExpenses] = useState(false);\r\n  const [showIncome, setShowIncome] = useState(false);\r\n  const [showCashBreakdown, setShowCashBreakdown] = useState(false);\r\n  const [showDaviBreakdown, setShowDaviBreakdown] = useState(false);\r\n  const [showNequiBreakdown, setShowNequiBreakdown] = useState(false);\r\n\r\n  const { selectedDate, setSelectedDate, timeAgo } = useDashboardDate();\r\n\r\n  // ===== Helpers robustos =====\r\n  const mk = (s) => (s || '').toString().trim().toLowerCase();\r\n\r\n  // parsea \"$12.000\", \"12.000\", 12000, \"-$12.000\"\r\n  const toInt = (v) => {\r\n    if (typeof v === 'number' && Number.isFinite(v)) return Math.floor(v);\r\n    const str = String(v ?? '').replace(/[^0-9-]/g, '');\r\n    const n = parseInt(str, 10);\r\n    return Number.isFinite(n) ? n : 0;\r\n  };\r\n\r\n  const money = (n) => {\r\n    const v = toInt(n);\r\n    const abs = Math.abs(v).toLocaleString('es-CO');\r\n    return `${v < 0 ? '-' : ''}$${abs}`;\r\n  };\r\n\r\n  const normalizePaymentMethodKey = (method) => {\r\n    const raw = mk(typeof method === 'string'\r\n      ? method\r\n      : (method?.name || method?.label || method?.title || method?.method || method?.type));\r\n    if (raw.includes('efect') || raw.includes('cash')) return 'cash';\r\n    if (raw.includes('nequi')) return 'nequi';\r\n    if (raw.includes('davi')) return 'daviplata';\r\n    return 'other';\r\n  };\r\n\r\n  const normalizeOrderType = (val) => {\r\n    const raw = typeof val === 'string' ? val : (val?.name || val?.value || '');\r\n    const lc = mk(raw);\r\n    if (['table', 'mesa', 'para mesa', 'en mesa'].includes(lc)) return 'table';\r\n    if (['takeaway', 'para llevar', 'llevar', 'take away', 'take-away'].includes(lc)) return 'takeaway';\r\n    if (['delivery', 'domicilio', 'domicilios'].includes(lc)) return 'delivery';\r\n    return '';\r\n  };\r\n\r\n  // Pickers legacy\r\n  const pickLegacyMethod = (o) =>\r\n    o?.payment ??\r\n    o?.paymentMethod ??\r\n    o?.meals?.[0]?.payment?.name ??\r\n    o?.meals?.[0]?.paymentMethod ??\r\n    o?.breakfasts?.[0]?.payment?.name ??\r\n    o?.breakfasts?.[0]?.paymentMethod ?? '';\r\n\r\n  const mealsSum = (o) =>\r\n    Array.isArray(o?.meals)\r\n      ? o.meals.reduce((s, m) => s + toInt(m?.total ?? m?.price ?? m?.amount), 0)\r\n      : 0;\r\n\r\n  const breakfastsSum = (o) =>\r\n    Array.isArray(o?.breakfasts)\r\n      ? o.breakfasts.reduce((s, b) => s + toInt(b?.total ?? b?.price ?? b?.amount), 0)\r\n      : 0;\r\n\r\n  const deriveOrderTotal = (o) => {\r\n    const t = toInt(o?.total ?? o?.amount);\r\n    if (t > 0) return t;\r\n    const sum = mealsSum(o) + breakfastsSum(o);\r\n    return sum > 0 ? sum : 0;\r\n  };\r\n\r\n  // Usa split de pagos si existe; si no, método único + total derivado\r\n  const rowsFromOrder = (order) => {\r\n    if (Array.isArray(order?.payments) && order.payments.length) {\r\n      return order.payments.map((p) => ({\r\n        methodKey: normalizePaymentMethodKey(p.method),\r\n        amount: toInt(p.amount),\r\n      }));\r\n    }\r\n    return [{\r\n      methodKey: normalizePaymentMethodKey(pickLegacyMethod(order)),\r\n      amount: deriveOrderTotal(order),\r\n    }];\r\n  };\r\n\r\n  // ¿Es desayuno de domicilio?\r\n  const isDeliveryBreakfastOrder = (o) => {\r\n    if (normalizeOrderType(o?.orderType) === 'delivery') return true;\r\n    const col = (o?.__collection || o?.collectionName || '').toLowerCase();\r\n    if (col.includes('delivery') || col.includes('domicil')) return true;\r\n    if (o?.deliveryPerson) return true;\r\n    const hasAddr =\r\n      (Array.isArray(o?.breakfasts) && o.breakfasts.some(b => !!b?.address)) ||\r\n      (Array.isArray(o?.meals) && o.meals.some(m => !!m?.address));\r\n    if (hasAddr) return true;\r\n    return false;\r\n  };\r\n\r\n  // ===== (A) Por ORIGEN (desde totals) =====\r\n  const bc = totals?.byCategory || {};\r\n  const domiciliosTotal = toInt(bc.domiciliosAlmuerzo) + toInt(bc.domiciliosDesayuno);\r\n  const salonTotal = toInt(bc.mesasAlmuerzo) + toInt(bc.llevarAlmuerzo) + toInt(bc.mesasDesayuno) + toInt(bc.llevarDesayuno);\r\n\r\n  const grossIncomeDisplay =\r\n    typeof totals?.grossIncome === 'number'\r\n      ? toInt(totals.grossIncome)\r\n      : (domiciliosTotal + salonTotal);\r\n\r\n  const expensesDisplay = toInt(totals?.expenses);\r\n  const netDisplay = grossIncomeDisplay - expensesDisplay;\r\n\r\n  // ===== (B) Totales por MÉTODO (línea principal) =====\r\n  const methodTotals = useMemo(() => {\r\n    const cash = { salon: 25000, domicilio: 25000 };\r\n    const daviplata = { salon: 23000, domicilio: 25000 };\r\n    const nequi = { salon: 24000, domicilio: 25000 };\r\n    \r\n    return {\r\n      cash: cash.salon + cash.domicilio,\r\n      daviplata: daviplata.salon + daviplata.domicilio,\r\n      nequi: nequi.salon + nequi.domicilio,\r\n      byOrigin: {\r\n        salon: { cash: cash.salon, daviplata: daviplata.salon, nequi: nequi.salon },\r\n        domicilio: { cash: cash.domicilio, daviplata: daviplata.domicilio, nequi: nequi.domicilio }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ===== (C) Desglose por MÉTODO → ORIGEN (corregido) =====\r\n  const methodBreakdown = useMemo(() => {\r\n    const mkBucket = () => ({ cash: 0, daviplata: 0, nequi: 0, other: 0 });\r\n    const salon = mkBucket();\r\n    const domicilio = mkBucket();\r\n\r\n    const bump = (target, methodKey, amount) => {\r\n      const a = toInt(amount);\r\n      if (!a) return;\r\n      target[methodKey] = (target[methodKey] || 0) + a;\r\n    };\r\n\r\n    // ► Salón (almuerzo: mesas + llevar) — TODOS los tableOrders\r\n    (tableOrders || []).forEach((o) => {\r\n      rowsFromOrder(o).forEach(({ methodKey, amount }) => bump(salon, methodKey, amount));\r\n    });\r\n\r\n    // ► Desayunos: clasificar correctamente por domicilio/salón\r\n    (breakfastOrders || []).forEach((o) => {\r\n      const target = isDeliveryBreakfastOrder(o) ? domicilio : salon;\r\n      rowsFromOrder(o).forEach(({ methodKey, amount }) => bump(target, methodKey, amount));\r\n    });\r\n\r\n    // ► Almuerzos a domicilio (orders) — y por si vino algún salón colado con orderType\r\n    (orders || []).forEach((o) => {\r\n      const ot = normalizeOrderType(o?.orderType) || 'delivery';\r\n      const target = ot === 'delivery' ? domicilio : salon;\r\n      rowsFromOrder(o).forEach(({ methodKey, amount }) => bump(target, methodKey, amount));\r\n    });\r\n\r\n    return {\r\n      cash: { domicilio: domicilio.cash, salon: salon.cash },\r\n      daviplata: { domicilio: domicilio.daviplata, salon: salon.daviplata },\r\n      nequi: { domicilio: domicilio.nequi, salon: salon.nequi },\r\n    };\r\n  }, [orders, tableOrders, breakfastOrders]);\r\n\r\n  // ===== Ingresos por Domiciliario (sin cambios) =====\r\n  const computedDeliveryPersons = useMemo(() => {\r\n    const acc = {};\r\n    const bump = (person, bucket, amount) => {\r\n      if (!person) person = 'JUAN';\r\n      acc[person] = acc[person] || { desayuno: { total: 0 }, almuerzo: { total: 0 } };\r\n      acc[person][bucket].total += toInt(amount);\r\n    };\r\n    const all = [...(orders || []), ...(breakfastOrders || [])];\r\n    for (const o of all) {\r\n      const person = String(o?.deliveryPerson || 'JUAN').trim();\r\n      const isB = o?.type === 'breakfast' || Array.isArray(o?.breakfasts);\r\n      const bucket = isB ? 'desayuno' : 'almuerzo';\r\n      const amount = deriveOrderTotal(o);\r\n      if (toInt(amount) > 0) bump(person, bucket, amount);\r\n    }\r\n    return acc;\r\n  }, [orders, breakfastOrders]);\r\n\r\n  const deliveryPersonsData = useMemo(() => {\r\n    const hasProp = deliveryPersons && Object.keys(deliveryPersons || {}).length > 0;\r\n    return hasProp ? deliveryPersons : computedDeliveryPersons;\r\n  }, [deliveryPersons, computedDeliveryPersons]);\r\n\r\n  // ===== Conteos producción/ventas (igual) =====\r\n  const { totalLunchCount, totalBreakfastCount } = useMemo(() => {\r\n    const lunchOrders = (orders || []).filter((o) => !(o?.type === 'breakfast' || Array.isArray(o?.breakfasts)));\r\n    const breakfastOrdersList = breakfastOrders || [];\r\n    const tableOrdersList = tableOrders || [];\r\n\r\n    const lunchMesaCount = tableOrdersList.filter((t) =>\r\n      ['table', 'mesa', 'en mesa', 'para mesa'].includes(mk(t.orderType))\r\n    ).length;\r\n    const lunchTakeawayCount = tableOrdersList.filter(\r\n      (t) => !['table', 'mesa', 'en mesa', 'para mesa'].includes(mk(t.orderType))\r\n    ).length;\r\n\r\n    const breakfastDomiciliosCount = breakfastOrdersList.filter((b) => normalizeOrderType(b?.orderType) === 'delivery').length;\r\n    const breakfastMesaCount = breakfastOrdersList.filter((b) =>\r\n      ['table', 'mesa', 'en mesa', 'para mesa'].includes(mk(b.orderType))\r\n    ).length;\r\n    const breakfastTakeawayCount = breakfastOrdersList.filter(\r\n      (b) => !['delivery', 'table', 'mesa', 'en mesa', 'para mesa'].includes(normalizeOrderType(b?.orderType))\r\n    ).length;\r\n\r\n    return {\r\n      totalLunchCount: lunchOrders.length + lunchMesaCount + lunchTakeawayCount,\r\n      totalBreakfastCount: breakfastDomiciliosCount + breakfastMesaCount + breakfastTakeawayCount,\r\n    };\r\n  }, [orders, tableOrders, breakfastOrders]);\r\n\r\n  const Row = ({ left, right, strong, rightClass, onClick }) => (\r\n    <div className=\"flex justify-between\" onClick={onClick}>\r\n      <span className={classNames(strong ? 'font-semibold' : '', 'text-gray-400', onClick && 'cursor-pointer hover:underline')}>{left}</span>\r\n      <span className={classNames('font-bold', rightClass ?? 'text-gray-100')}>{right}</span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `p-0 rounded-2xl shadow-xl border transition-all duration-300 ease-in-out hover:shadow-2xl flex flex-col flex-1`,\r\n        theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n      )}\r\n      style={{ height: cardHeight }}\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-center px-6 pt-5 flex-shrink-0\">\r\n        <h3 className=\"text-xl font-semibold text-gray-100 whitespace-nowrap\">Totales Generales</h3>\r\n        <DollarSign className=\"text-emerald-400 w-8 h-8 ml-4\" aria-hidden=\"true\" />\r\n      </div>\r\n\r\n      {/* Body */}\r\n      <div className={classNames('mt-4 px-6 pb-3 relative min-h-0 h-[260px] custom-scrollbar', expanded ? 'overflow-y-auto' : 'overflow-hidden')}>\r\n        {/* Vista rápida */}\r\n        <div className=\"space-y-3 text-base mt-5 sm:mt-6\">\r\n          {/* Total ingresos */}\r\n          <div onClick={() => setShowIncome(v => !v)} className=\"cursor-pointer\">\r\n            <div className=\"flex justify-between items-center text-gray-400 hover:underline hover:text-gray-100 transition-colors\">\r\n              <span>Total ingresos</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"font-bold text-green-400\">{money(grossIncomeDisplay)}</span>\r\n                {showIncome ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n              </div>\r\n            </div>\r\n            <Transition show={showIncome}>\r\n              <div className=\"mt-2 pl-4 space-y-1 text-sm text-gray-400\">\r\n                <div className=\"flex justify-between\"><span>- De Domicilios:</span><span className=\"font-semibold text-emerald-300\">{money(domiciliosTotal)}</span></div>\r\n                <div className=\"flex justify-between\"><span>- De Salón:</span><span className=\"font-semibold text-emerald-300\">{money(salonTotal)}</span></div>\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n\r\n          {/* Gastos */}\r\n          <div onClick={() => setShowExpenses(v => !v)} className=\"cursor-pointer\">\r\n            <div className=\"flex justify-between items-center text-gray-400 hover:underline hover:text-gray-100 transition-colors\">\r\n              <span>Gastos</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"font-bold text-red-400\">{money(-expensesDisplay)}</span>\r\n                {showExpenses ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n              </div>\r\n            </div>\r\n            <Transition show={showExpenses}>\r\n              <div className=\"mt-2 pl-4 space-y-1 text-sm text-gray-400\">\r\n                {Object.entries(totals?.expensesByProvider?.byProvider || {}).map(([provider, amount]) => (\r\n                  <div key={provider} className=\"flex justify-between\">\r\n                    <span>- {provider}:</span>\r\n                    <span className=\"font-semibold text-red-300\">{money(-amount)}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n\r\n          {/* Total neto */}\r\n          <div className={classNames('border-t mt-2', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <Row strong left=\"Total neto\" right={money(netDisplay)} rightClass={netDisplay < 0 ? 'text-red-400 text-xl' : 'text-emerald-400 text-xl'} />\r\n        </div>\r\n\r\n        {/* Ver más/menos */}\r\n        <div className=\"mt-6 sm:mt-8 text-center\">\r\n          <button onClick={() => setExpanded(v => !v)} aria-expanded={expanded} className=\"text-blue-500 hover:text-blue-600 transition-colors text-sm font-semibold underline underline-offset-4\">\r\n            {expanded ? 'Ver menos' : 'Ver más'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Detalle expandido */}\r\n        <div className={classNames('pt-4 mt-4 text-sm', expanded ? '' : 'hidden')}>\r\n          {/* Desglose de ingresos por método */}\r\n          <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Desglose de ingresos</p>\r\n\r\n          {/* Efectivo (Caja) */}\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex justify-between items-center cursor-pointer\" onClick={() => setShowCashBreakdown(v => !v)}>\r\n              <span>Efectivo (Caja)</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"font-bold text-green-400\">{money(methodTotals.cash)}</span>\r\n                {showCashBreakdown ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n              </div>\r\n            </div>\r\n            <Transition show={showCashBreakdown}>\r\n              <div className=\"mt-1 pl-4 space-y-1 text-sm text-gray-400\">\r\n                <div className=\"flex justify-between\"><span>- De Domicilios:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.domicilio.cash)}</span></div>\r\n                <div className=\"flex justify-between\"><span>- De Salón:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.salon.cash)}</span></div>\r\n              </div>\r\n            </Transition>\r\n\r\n            {/* DaviPlata */}\r\n            <div className=\"flex justify-between items-center cursor-pointer mt-2\" onClick={() => setShowDaviBreakdown(v => !v)}>\r\n              <span>DaviPlata</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"font-bold text-red-400\">{money(methodTotals.daviplata)}</span>\r\n                {showDaviBreakdown ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n              </div>\r\n            </div>\r\n            <Transition show={showDaviBreakdown}>\r\n              <div className=\"mt-1 pl-4 space-y-1 text-sm text-gray-400\">\r\n                <div className=\"flex justify-between\"><span>- De Domicilios:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.domicilio.daviplata)}</span></div>\r\n                <div className=\"flex justify-between\"><span>- De Salón:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.salon.daviplata)}</span></div>\r\n              </div>\r\n            </Transition>\r\n\r\n            {/* Nequi */}\r\n            <div className=\"flex justify-between items-center cursor-pointer mt-2\" onClick={() => setShowNequiBreakdown(v => !v)}>\r\n              <span>Nequi</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"font-bold text-blue-400\">{money(methodTotals.nequi)}</span>\r\n                {showNequiBreakdown ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n              </div>\r\n            </div>\r\n            <Transition show={showNequiBreakdown}>\r\n              <div className=\"mt-1 pl-4 space-y-1 text-sm text-gray-400\">\r\n                <div className=\"flex justify-between\"><span>- De Domicilios:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.domicilio.nequi)}</span></div>\r\n                <div className=\"flex justify-between\"><span>- De Salón:</span><span className=\"font-semibold\">{money(methodTotals.byOrigin.salon.nequi)}</span></div>\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n\r\n          {/* Ingresos por Domiciliario (se mantiene) */}\r\n          <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Ingresos por Domiciliario</p>\r\n          <div className=\"space-y-3\">\r\n            {Object.entries(deliveryPersonsData || {}).map(([person, d]) => {\r\n              const desayuno = toInt(d?.desayuno?.total);\r\n              const almuerzo = toInt(d?.almuerzo?.total);\r\n              const total = desayuno + almuerzo;\r\n              return (\r\n                <div key={person} className={classNames('rounded-lg p-3 border', theme === 'dark' ? 'bg-gray-800/60 border-gray-700' : 'bg-gray-50 border-gray-200')}>\r\n                  <div className=\"flex justify-between text-sm mb-2\">\r\n                    <span className=\"font-medium\">{person}</span>\r\n                    <span className=\"font-bold\">{money(total)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm my-0.5\"><span>🛵 Desayuno</span><span className=\"font-semibold\">{money(desayuno)}</span></div>\r\n                  <div className=\"flex justify-between text-sm my-0.5\"><span>🛵 Almuerzo</span><span className=\"font-semibold\">{money(almuerzo)}</span></div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Tipo de Venta (se mantiene) */}\r\n          <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Tipo de Venta</p>\r\n          <div className=\"space-y-3 mt-2 text-sm\">\r\n            <div className=\"flex flex-col space-y-1\">\r\n              <h4 className=\"font-semibold text-gray-100\">Domicilios</h4>\r\n              <ul className=\"space-y-1 text-gray-400\">\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">🛵 Almuerzo</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.domiciliosAlmuerzo || 0)}</span></li>\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">🍳 Desayuno</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.domiciliosDesayuno || 0)}</span></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"flex flex-col space-y-1\">\r\n              <h4 className=\"font-semibold text-gray-100\">Salón</h4>\r\n              <ul className=\"space-y-1 text-gray-400\">\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">🪑 Almuerzo Mesa</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.mesasAlmuerzo || 0)}</span></li>\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">📦 Almuerzo llevar</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.llevarAlmuerzo || 0)}</span></li>\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">🪑 Desayuno Mesa</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.mesasDesayuno || 0)}</span></li>\r\n                <li className=\"flex justify-between items-center\"><span className=\"flex-1\">📦 Desayuno llevar</span><span className=\"font-bold text-gray-100 text-right\">{money(totals?.byCategory?.llevarDesayuno || 0)}</span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Producción y ventas (se mantiene) */}\r\n          <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <div className=\"space-y-1\">\r\n            <Row left=\"Proteínas preparadas (unid.)\" right={String(toInt(proteinDaily?.preparedUnits || 0))} rightClass=\"text-gray-100\" />\r\n            <Row left=\"Almuerzos vendidos (unid.)\" right={String(toInt((orders || []).length + (tableOrders || []).length))} rightClass=\"text-gray-100\" />\r\n            <Row left=\"Desayunos vendidos (unid.)\" right={String(toInt((breakfastOrders || []).length))} rightClass=\"text-gray-100\" />\r\n          </div>\r\n\r\n          {/* Sobrantes (se mantiene) */}\r\n          <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n          <p className={classNames('text-[13px]', theme === 'dark' ? 'text-gray-300' : 'text-gray-700')}>\r\n            • {toInt(proteinDaily?.leftovers?.res)} res • {toInt(proteinDaily?.leftovers?.lomo)} lomo • {toInt(proteinDaily?.leftovers?.pechuga)} pechuga • {toInt(proteinDaily?.leftovers?.pollo)} pollo • {toInt(proteinDaily?.leftovers?.recuperada)} recuperada\r\n          </p>\r\n        </div>\r\n\r\n        {!expanded && (\r\n          <div className={classNames('pointer-events-none absolute bottom-0 left-0 right-0 h-16', theme === 'dark' ? 'bg-gradient-to-t from-gray-800 to-transparent' : 'bg-gradient-to-t from-white to-transparent')} />\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <div className={classNames('px-6 py-2 text-[12px] flex items-center justify-between mt-auto flex-shrink-0 gap-x-2 gap-y-1 rounded-b-2xl', theme === 'dark' ? 'bg-gray-700 text-gray-400' : 'bg-gray-100 text-gray-600')}>\r\n        <Popover className=\"relative\">\r\n          {({ open }) => (\r\n            <>\r\n              <PopoverButton className={classNames('inline-flex items-center gap-1 text-[11px] transition-colors cursor-pointer', theme === 'dark' ? 'text-gray-400 hover:text-gray-200' : 'text-gray-700 hover:text-gray-900')}>\r\n                <Calendar className=\"w-3 h-3 text-green-400\" />\r\n                <span>Fecha: {selectedDate}</span>\r\n              </PopoverButton>\r\n              <Transition as={Fragment} enter=\"transition ease-out duration-150\" enterFrom=\"opacity-0 translate-y-1\" enterTo=\"opacity-100 translate-y-0\" leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100 translate-y-0\" leaveTo=\"opacity-0 translate-y-1\">\r\n                <PopoverPanel className={classNames('absolute z-50 mt-2 p-3 rounded-xl shadow-lg w-64 left-0 origin-top-left', 'max-w-[calc(100vw-2rem)]', theme === 'dark' ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200')}>\r\n                  <label className={classNames('block text-xs mb-1', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Selecciona una fecha</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={selectedDate}\r\n                    onChange={(e) => e.target.value && setSelectedDate(e.target.value)}\r\n                    className={classNames('w-full rounded-md px-3 py-2 text-sm border focus:outline-none focus:ring-1 focus:ring-emerald-500', theme === 'dark' ? 'bg-gray-900 border-gray-700 text-gray-100' : 'bg-white border-gray-300 text-gray-900')}\r\n                  />\r\n                  <p className=\"text-[11px] mt-2 text-gray-500\">Cambiar la fecha actualiza todo el dashboard para ese día.</p>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </>\r\n          )}\r\n        </Popover>\r\n        <span className=\"flex items-center gap-1 text-[11px]\"><Clock className=\"w-3 h-3\" /> Actualizado {timeAgo(lastUpdatedAt)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n// Orquestador\r\nconst DashboardInner = ({ theme }) => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const { notify } = useNotifier();\r\n\r\n  const { selectedDate, startOfDay, endOfDay } = useDashboardDate();\r\n  \r\n  const {\r\n    loadingData,\r\n    orders, users, totals, statusCounts, userActivity,\r\n    deliveryPersons, proteinDaily, lastUpdatedAt,\r\n    ingresosCategoriasData, gastosPorTiendaData, pedidosDiariosChartData, statusPieChartData,\r\n    tableOrders, breakfastOrders,\r\n    handleSaveDailyIngresos, handleDeleteDailyIngresos, handleSaveDailyOrders, handleDeleteDailyOrders\r\n  } = useDashboardData(db, userId, isAuthReady, notify, startOfDay, endOfDay, selectedDate);\r\n  \r\n  const [showConfirmClearActivity, setShowConfirmClearActivity] = useState(false);\r\n  const [confirmClearText, setConfirmClearText] = useState('');\r\n  const [showActivityDetailModal, setShowActivityDetailModal] = useState(false);\r\n  const [selectedActivityDetail, setSelectedActivityDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!auth) return;\r\n    const unsub = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n        setIsAuthReady(true);\r\n      } else {\r\n        try {\r\n          if (initialAuthToken) await signInWithCustomToken(auth, initialAuthToken);\r\n          else await signInAnonymously(auth);\r\n        } catch (error) {\r\n          console.error('Error al iniciar sesión:', error);\r\n          notify('error', `Error de autenticación: ${error.message}`);\r\n        } finally {\r\n          setIsAuthReady(true);\r\n        }\r\n      }\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  const handleClearAllActivity = async () => {\r\n    if (confirmClearText.toLowerCase() !== 'confirmar') {\r\n      notify('error', 'Por favor, escribe \"confirmar\" para proceder.');\r\n      return;\r\n    }\r\n    try {\r\n      const batch = writeBatch(db);\r\n      const activitySnapshot = await getDocs(collection(db, 'userActivity'));\r\n      let deletedCount = 0;\r\n      activitySnapshot.forEach((doc) => {\r\n        batch.delete(doc.ref);\r\n        deletedCount++;\r\n      });\r\n      if (deletedCount > 0) await batch.commit();\r\n      \r\n      setShowConfirmClearActivity(false);\r\n      setConfirmClearText('');\r\n      notify('success', deletedCount === 0 ? 'No había actividades para eliminar.' : `Todas las actividades (${deletedCount}) han sido eliminadas.`);\r\n    } catch (error) {\r\n      notify('error', `Error al eliminar actividades: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const chartTextColor = theme === 'dark' ? '#cbd5e1' : '#475569';\r\n  const loading = !isAuthReady || loadingData;\r\n\r\n  if (loading) return <LoadingSpinner theme={theme} />;\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 font-inter\">\r\n      <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 dark:text-white transition-colors duration-200\">Dashboard</h2>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n        <InfoCard \r\n          theme={theme}\r\n          title=\"Pedidos\" \r\n          icon=\"ShoppingCart\"\r\n          color=\"text-blue-400\"\r\n          vAlign=\"center\"\r\n          cardHeight={CARD_HEIGHT}\r\n          data={{\r\n            'Total': statusCounts.Pending + statusCounts.Delivered + statusCounts.Cancelled,\r\n            'Pendientes': statusCounts.Pending,\r\n            'Entregados': statusCounts.Delivered,\r\n            'Cancelados': statusCounts.Cancelled,\r\n          }}\r\n          labelColor={{'Pendientes': 'text-yellow-400', 'Entregados': 'text-green-400', 'Cancelados': 'text-red-400'}}\r\n        />\r\n\r\n        <GeneralTotalsCard \r\n          theme={theme}\r\n          totals={totals}\r\n          deliveryPersons={deliveryPersons}\r\n          lastUpdatedAt={lastUpdatedAt}\r\n          orders={orders}\r\n          proteinDaily={proteinDaily}\r\n          tableOrders={tableOrders}\r\n          breakfastOrders={breakfastOrders}\r\n          cardHeight={CARD_HEIGHT}\r\n        />\r\n\r\n        <InfoCard \r\n          theme={theme}\r\n          title=\"Usuarios\" \r\n          icon=\"Users\"\r\n          color=\"text-purple-400\"\r\n          cardHeight={CARD_HEIGHT}\r\n          data={{ 'Total': users.length }}\r\n        />\r\n\r\n        <ActivityFeed\r\n          theme={theme}\r\n          userActivity={userActivity}\r\n          onClearClick={() => setShowConfirmClearActivity(true)}\r\n          onShowDetails={(act) => { setSelectedActivityDetail(act); setShowActivityDetailModal(true); }}\r\n          cardHeight={CARD_HEIGHT}\r\n        />\r\n      </div>\r\n\r\n      <DashboardCharts\r\n        theme={theme}\r\n         cardHeight={CARD_HEIGHT} \r\n        chartTextColor={chartTextColor}\r\n        ingresosCategoriasData={ingresosCategoriasData}\r\n        gastosPorTiendaData={gastosPorTiendaData}\r\n        pedidosDiariosChartData={pedidosDiariosChartData}\r\n        statusPieChartData={statusPieChartData}\r\n        loading={loading}\r\n        handleSaveDailyIngresos={handleSaveDailyIngresos}\r\n        handleDeleteDailyIngresos={handleDeleteDailyIngresos}\r\n        handleSaveDailyOrders={handleSaveDailyOrders}\r\n        handleDeleteDailyOrders={handleDeleteDailyOrders}\r\n        proteinDaily={proteinDaily}\r\n      />\r\n\r\n      <ConfirmationModal \r\n        show={showConfirmClearActivity}\r\n        onClose={() => {setShowConfirmClearActivity(false); setConfirmClearText('');}}\r\n        onConfirm={handleClearAllActivity}\r\n        confirmText={confirmClearText}\r\n        setConfirmText={setConfirmClearText}\r\n        theme={theme}\r\n      />\r\n\r\n      <DetailsModal\r\n        show={showActivityDetailModal}\r\n        onClose={() => setShowActivityDetailModal(false)}\r\n        details={selectedActivityDetail?.details}\r\n        theme={theme}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Wrapper\r\nconst Dashboard = (props) => (\r\n  <DashboardDateProvider>\r\n    <DashboardInner {...props} />\r\n  </DashboardDateProvider>\r\n);\r\n\r\nexport default Dashboard;\r\n"],"names":["norm","s","toString","trim","toLowerCase","normalizePaymentMethodKey","methodLike","raw","name","label","title","method","type","payment","t","includes","pickMethodLabel","extractOrderPayments","order","_order$meals$0$paymen","_order$meals","_order$meals$","_order$meals2","_order$meals2$","_order$breakfasts$0$p","_order$breakfasts","_order$breakfasts$","_order$breakfasts2","_order$breakfasts2$","_order$paymentMethod","total","Math","floor","Number","Array","isArray","payments","length","map","p","amount","methodKey","rawLabel","legacySources","meals","paymentMethod","breakfasts","filter","Boolean","summarizePayments","paymentsRows","arguments","undefined","agg","reduce","a","r","key","asText","cash","push","toLocaleString","nequi","daviplata","other","join","defaultPaymentsForOrder","rows","_ref","sumPaymentsByMethod","orders","out","amt","isSalonOrder","_order$breakfasts5","_order$breakfasts5$","__collection","orderType","calcMethodTotalsAll","tableOrders","breakfastOrders","acc","nequiTotal","daviplataTotal","nequiPendiente","daviplatasPendiente","cashSalon","cashClientesSettled","cashClientesPendiente","totalLiquidado","totalPendiente","totalDomicilios","totalSalon","accumulate","list","o","isSalon","_o$paymentSettled","settled","paymentSettled","_o$paymentSettled2","_o$paymentSettled3","cashCaja","classNames","_len","classes","_key","ORDER_STATUS","ORDER_STATUS_DISPLAY","PIE_COLORS","INGRESOS_COLLECTION","PEDIDOS_DIARIOS_GUARDADOS_COLLECTION","getDateRange","rangeType","start","end","today","Date","setHours","startDate","endDate","setDate","getDate","getFullYear","getMonth","getDocDateISO","doc","ts","createdAt","timestamp","date","d","toDate","toISOString","split","_asStr","val","String","_ref2","_val$name","value","isBreakfastOrder","isBreakfast","meal","maybeBreakfastStrs","category","group","tag","concat","items","it","_it$category","normalizeServiceFromOrder","_o$meals","_o$meals$","_o$breakfasts","_o$breakfasts$","_o$address","candidates","orderTypeNormalized","serviceType","channel","tipoPedido","typeOfOrder","c","v","test","tableNumber","mesa","table","address","deliveryAddress","useDashboardData","db","userId","isAuthReady","p4","p5","p6","p7","p8","p9","p10","p11","_totals$expensesByPro","notify","setError","setSuccess","startOfDay","endOfDay","selectedDate","salesFilterRange","salesCustomStartDate","salesCustomEndDate","ordersFilterRange","ordersCustomStartDate","ordersCustomEndDate","selectedMonth","m","_notify","_notify2","loadingData","setLoadingData","useState","setOrders","setTableOrders","waiterOrders","setWaiterOrders","setBreakfastOrders","breakfastSalonOrders","setBreakfastSalonOrders","users","setUsers","totals","setTotals","cashPendiente","expenses","expensesByProvider","byProvider","counts","byCategory","domiciliosAlmuerzo","mesasAlmuerzo","llevarAlmuerzo","domiciliosDesayuno","mesasDesayuno","llevarDesayuno","grossIncome","net","saleTypeBreakdown","setSaleTypeBreakdown","domicilio_almuerzo","domicilio_desayuno","mesa_almuerzo","llevar_almuerzo","mesa_desayuno","llevar_desayuno","statusCounts","setStatusCounts","Pending","Delivered","Cancelled","userActivity","setUserActivity","ingresosData","setIngresosData","pedidosDiariosGuardadosData","setPedidosDiariosGuardadosData","dailySalesChartData","setDailySalesChartData","dailyOrdersChartData","setDailyOrdersChartData","statusPieChartData","setStatusPieChartData","initialLoadRefs","useRef","activity","ingresos","pedidosDiariosGuardados","salonOrders","useMemo","checkIfAllLoaded","current","useEffect","sum","esDesayuno","service","bSalon","ordersArr","llevar","isMesa","isLlevar","n","nMesa","b","nLlevar","round","sumBreakfastSalon","_b$address","_b$breakfasts","_b$breakfasts$","_b$breakfasts$$addres","ingresosSalon","ingresosDomiciliosLiquidados","gross","prev","max","mixed","kind","buildSaleTypeBreakdown","unsubscribes","ordersCollectionRef","collection","unsubscribeOrders","onSnapshot","snapshot","ordersData","docs","id","data","newTotals","newStatusCounts","forEach","_order$status","paymentSummary","orderStatus","status","pieChartData","color","error","_setError","message","tableOrdersCollectionRef","unsubscribeTableOrders","tableOrdersData","_setError2","waiterOrdersCollectionRef","unsubscribeWaiterOrders","_setError3","deliveryBreakfastOrdersRef","unsubscribeBreakfastOrders","breakfastOrdersData","_setError4","breakfastSalonOrdersRef","unsubscribeBreakfastSalonOrders","_setError5","usersCollectionRef","unsubscribeUsers","usersData","_setError6","userActivityCollectionRef","unsubscribeActivity","timestampDate","Timestamp","sort","getTime","_setError7","ingresosColRef","unsubscribeIngresos","_setError8","pedidosDiariosGuardadosColRef","unsubscribePedidosDiariosGuardados","pedidosData","_setError9","paymentsQuery","query","where","orderBy","unsubscribePayments","totalExpenses","provider","store","_setError0","unsubscribe","monthNames","salesStartDate","salesEndDate","todayISO","chartData","filteredDailySales","summary","summaryDateISO","_filteredDailySales$s","_filteredDailySales$s2","_filteredDailySales$s3","_filteredDailySales$s4","categories","_filteredDailySales$k","_filteredDailySales$k2","_filteredDailySales$k3","_filteredDailySales$k4","da","dd","ma","md","_o$createdAt2","dISO","_t$createdAt2","_b$createdAt2","_b$address3","_b$breakfasts3","_b$breakfasts3$","_b$breakfasts3$$addre","k","Object","keys","monthlySales","currentYear","month","monthKey","padStart","mKey","currentMonthKey","rt","_o$createdAt","_t$createdAt","_b$createdAt","_b$address2","_b$breakfasts2","_b$breakfasts2$","_b$breakfasts2$$addre","parseInt","ordersStartDate","ordersEndDate","filteredDailyOrders","summaryDate","Domicilios","domicilios","Mesas","mesas","currentDayRealtimeDomicilios","currentDayRealtimeMesas","_order$createdAt2","tableOrder","_tableOrder$createdAt2","bo","_bo$createdAt2","_filteredDailyOrders$","_filteredDailyOrders$2","_filteredDailyOrders$3","_filteredDailyOrders$4","monthlyOrders","currentMonthRealtimeDomicilios","currentMonthRealtimeMesas","_order$createdAt","_tableOrder$createdAt","_bo$createdAt","handleSaveDailyIngresos","useCallback","async","_o$createdAt3","_t$createdAt3","_b$createdAt3","_b$address4","_b$breakfasts4","_b$breakfasts4$","_b$breakfasts4$$addre","totalIncome","qY","snap","getDocs","payload","updatedAt","serverTimestamp","_setSuccess","_setSuccess2","empty","addDoc","updateDoc","_setError1","console","schedule","now","next","ms","setTimeout","y","yesterdayISO","inDayISO","targetISO","_b$address5","_b$breakfasts5","_b$breakfasts5$","_b$breakfasts5$$addre","payloadY","snapY","qToday","e","_setError10","saveDay","timer","clearTimeout","handleDeleteDailyIngresos","q","existingSummarySnapshot","_setSuccess4","_setSuccess3","docToDelete","deleteDoc","_setError11","handleSaveDailyOrders","currentDayDomicilios","currentDayMesas","_order$createdAt3","_tableOrder$createdAt3","_bo$createdAt3","_setSuccess5","_setSuccess6","docToUpdate","_setError12","handleDeleteDailyOrders","_setSuccess8","_setSuccess7","_setError13","ingresosCategoriasData","gastosPorTiendaData","entries","_ref3","pedidosDiariosChartData","SkeletonLoader","theme","isMobile","numBars","_jsx","className","children","from","_","i","style","width","height","random","copFormatter","Intl","NumberFormat","currency","minimumFractionDigits","CustomBarTooltip","active","chartTextColor","isOrderChart","entry","formatValue","format","_jsxs","motion","div","initial","opacity","animate","exit","backgroundColor","borderColor","backdropFilter","fontSize","index","CustomPieTooltip","percent","toFixed","DashboardCharts","React","_ref4","setSalesFilterRange","setSalesCustomStartDate","setSalesCustomEndDate","setOrdersFilterRange","setOrdersCustomStartDate","setOrdersCustomEndDate","handleSaveDailyExpenses","handleDeleteDailyExpenses","loading","setSelectedMonth","isMobileDevice","setIsMobileDevice","setPayments","expenseFilterRange","setExpenseFilterRange","expenseCustomStartDate","setExpenseCustomStartDate","expenseCustomEndDate","setExpenseCustomEndDate","selectedRecipient","setSelectedRecipient","handleResize","checkIsMobile","window","addEventListener","removeEventListener","dailyExpensesChartData","groupedByDate","dateKey","Total","values","totalOrders","aggregatedPaymentsByRecipient","grouped","storeName","totalAmount","_ref5","paymentsForSelectedRecipient","chartVariants","hidden","scale","visible","transition","duration","ease","chartMinWidth","chartHeight","dangerouslySetInnerHTML","__html","DollarSign","Popover","PopoverButton","MoreVertical","Transition","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","PopoverPanel","onClick","disabled","Save","Trash2","onChange","target","variants","button","x","ArrowLeft","ResponsiveContainer","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tick","fill","angle","textAnchor","interval","YAxis","tickFormatter","Tooltip","cursor","rx","content","Legend","wrapperStyle","paddingTop","paddingBottom","align","verticalAlign","iconType","Bar","radius","maxBarSize","animationDuration","_Fragment","idx","_payment$timestamp","dateStyle","timeStyle","Package","isAnimationActive","TrendingUp","PieChart","Pie","cx","cy","outerRadius","innerRadius","Cell","strokeWidth","Label","position","fontWeight","dy","layout","DashboardDateContext","createContext","ymdInBogota","DateTimeFormat","timeZone","year","day","timeAgo","diff","mins","hours","days","DashboardDateProvider","setSelectedDate","setDateFromInput","ymd","endOfDayBogota","Provider","useDashboardDate","useContext","CARD_HEIGHT","initialAuthToken","__initial_auth_token","LoadingSpinner","ConfirmationModal","show","onClose","onConfirm","confirmText","setConfirmText","Dialog","Child","Panel","Title","AlertTriangle","placeholder","DetailsModal","details","X","JSON","stringify","InfoCard","icon","labelColor","vAlign","cardHeight","Icon","ShoppingCart","Users","Activity","containerLayout","ActivityFeed","_ref6","onClearClick","onShowDetails","listRef","fadeTop","setFadeTop","fadeBottom","setFadeBottom","updateFades","el","scrollTop","clientHeight","scrollHeight","rowHover","borderRow","fadeTopCls","fadeBottomCls","ref","onScroll","act","role","tabIndex","onKeyDown","action","Info","GeneralTotalsCard","_ref7","_totals$byCategory","_totals$byCategory2","_totals$byCategory3","_totals$byCategory4","_totals$byCategory5","_totals$byCategory6","_proteinDaily$leftove","_proteinDaily$leftove2","_proteinDaily$leftove3","_proteinDaily$leftove4","_proteinDaily$leftove5","deliveryPersons","lastUpdatedAt","proteinDaily","expanded","setExpanded","showExpenses","setShowExpenses","showIncome","setShowIncome","showCashBreakdown","setShowCashBreakdown","showDaviBreakdown","setShowDaviBreakdown","showNequiBreakdown","setShowNequiBreakdown","mk","toInt","isFinite","str","replace","money","abs","normalizeOrderType","lc","pickLegacyMethod","_ref8","_ref9","_ref0","_ref1","_ref10","_o$payment","_o$meals$$payment","_o$meals2","_o$meals2$","_o$breakfasts$$paymen","_o$breakfasts2","_o$breakfasts2$","deriveOrderTotal","_o$total","_ref11","_m$total","price","mealsSum","_ref12","_b$total","breakfastsSum","rowsFromOrder","bc","domiciliosTotal","salonTotal","grossIncomeDisplay","expensesDisplay","netDisplay","methodTotals","byOrigin","salon","domicilio","computedDeliveryPersons","bump","_ref13","col","collectionName","deliveryPerson","some","isDeliveryBreakfastOrder","_ref14","_ref15","person","bucket","desayuno","almuerzo","all","deliveryPersonsData","totalLunchCount","totalBreakfastCount","lunchOrders","breakfastOrdersList","tableOrdersList","lunchMesaCount","lunchTakeawayCount","breakfastDomiciliosCount","breakfastMesaCount","breakfastTakeawayCount","Row","_ref16","strong","rightClass","ChevronUp","ChevronDown","_ref17","_ref18","_d$desayuno","_d$almuerzo","preparedUnits","leftovers","res","lomo","pechuga","pollo","recuperada","_ref19","open","Calendar","Clock","DashboardInner","_ref20","setUserId","setIsAuthReady","useNotifier","setMessage","text","showConfirmClearActivity","setShowConfirmClearActivity","confirmClearText","setConfirmClearText","showActivityDetailModal","setShowActivityDetailModal","selectedActivityDetail","setSelectedActivityDetail","auth","unsub","onAuthStateChanged","user","uid","signInWithCustomToken","signInAnonymously","batch","writeBatch","activitySnapshot","deletedCount","delete","commit","props"],"sourceRoot":""}