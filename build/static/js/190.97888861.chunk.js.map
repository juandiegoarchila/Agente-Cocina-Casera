{"version":3,"file":"static/js/190.97888861.chunk.js","mappings":"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","sources":["utils/classNames.js","components/Admin/OrderManagement.js","components/Admin/utilities/previewOrders.js","components/Admin/utilities/previewExcel.js","components/Admin/utilities/exportToExcel.js","components/Admin/utilities/exportToPDF.js","components/Admin/utilities/exportToCSV.js"],"sourcesContent":["// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, updateDoc, doc, deleteDoc, getDocs, query, where, writeBatch, addDoc } from 'firebase/firestore';\r\nimport { ArrowDownTrayIcon, XMarkIcon, ChevronLeftIcon, ChevronRightIcon, InformationCircleIcon, PencilIcon, TrashIcon, ArrowUpIcon, ArrowDownIcon, PlusIcon } from '@heroicons/react/24/outline';\r\nimport { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react';\r\nimport { classNames } from '../../utils/classNames.js';\r\nimport { exportToExcel } from './utilities/exportToExcel';\r\nimport { exportToPDF } from './utilities/exportToPDF';\r\nimport { exportToCSV } from './utilities/exportToCSV';\r\nimport { generatePreviewHtml } from './utilities/previewOrders.js';\r\nimport { generateExcelPreviewHtml } from './utilities/previewExcel.js';\r\n// Funciones de utilidad\r\nconst cleanText = (text) => {\r\n  if (text == null) return '';\r\n  if (typeof text === 'string') return text.replace(' NUEVO', '').trim();\r\n  if (typeof text === 'boolean') return text.toString();\r\n  if (typeof text === 'object' && text?.name) return text.name.replace(' NUEVO', '').trim();\r\n  return String(text).replace(' NUEVO', '').trim();\r\n};\r\n\r\nconst getNestedProperty = (obj, path) => {\r\n  if (!obj || !path) return '';\r\n  return path.split('.').reduce((acc, part) => (acc && acc[part] !== undefined ? acc[part] : ''), obj);\r\n};\r\n\r\nconst getAddressDisplay = (address) => {\r\n  if (!address?.address) return 'Sin dirección';\r\n  let display = address.address;\r\n  switch (address.addressType) {\r\n    case 'school': if (address.recipientName) display += ` (Recibe: ${cleanText(address.recipientName)})`; break;\r\n    case 'complex': if (address.unitDetails) display += ` (${cleanText(address.unitDetails)})`; break;\r\n    case 'shop': if (address.localName) display += ` (${cleanText(address.localName)})`; break;\r\n    default: break;\r\n  }\r\n  return display;\r\n};\r\n\r\nconst getMealDetailsDisplay = (meal) => {\r\n  const components = [];\r\n  const soupDisplay = meal.soupReplacement?.name || meal.soupReplacement ? `${cleanText(meal.soupReplacement?.name || meal.soupReplacement)} (por sopa)` : meal.soup?.name || meal.soup ? cleanText(meal.soup?.name || meal.soup) : 'Sin sopa';\r\n  components.push(`Sopa: ${soupDisplay}`);\r\n  let principleDisplay;\r\n  if (meal.principleReplacement?.name || meal.principleReplacement) {\r\n    principleDisplay = `${cleanText(meal.principleReplacement?.name || meal.principleReplacement)} (por principio)`;\r\n  } else if (Array.isArray(meal.principle) && meal.principle.length > 0) {\r\n    const principleNames = meal.principle.map(p => cleanText(p.name || p)).filter(Boolean);\r\n    principleDisplay = principleNames.length > 0 ? principleNames.join(', ') : 'Sin principio';\r\n  } else if (meal.principle?.name || meal.principle) {\r\n    principleDisplay = cleanText(meal.principle?.name || meal.principle);\r\n  } else {\r\n    principleDisplay = 'Sin principio';\r\n  }\r\n  components.push(`Principio: ${principleDisplay}`);\r\n  components.push(`Proteína: ${meal.protein?.name || meal.protein ? cleanText(meal.protein?.name || meal.protein) : 'Sin proteína'}`);\r\n  const drinkName = (meal.drink?.name || meal.drink) === 'Juego de mango' ? 'Jugo de mango' : (meal.drink?.name || meal.drink);\r\n  components.push(`Bebida: ${drinkName ? cleanText(drinkName) : 'Sin bebida'}`);\r\n  components.push(`Cubiertos: ${meal.cutlery?.name === 'Sí' || meal.cutlery === true || meal.cutlery === 'true' ? 'Sí' : 'No'}`);\r\n  const sides = meal.sides?.length > 0 ? meal.sides.map(s => cleanText(s.name || s)).filter(Boolean).join(', ') : 'Ninguno';\r\n  components.push(`Acompañamientos: ${sides}`);\r\n  const additions = meal.additions?.length > 0 ? meal.additions.map(a => `${cleanText(a.name || a)}${a.protein || a.replacement ? ` (${cleanText(a.protein || a.replacement)})` : ''} (${a.quantity || 1})`).join(', ') : 'Ninguna';\r\n  components.push(`Adiciones: ${additions}`);\r\n  components.push(`Notas: ${meal.notes ? cleanText(meal.notes) : 'Ninguna'}`);\r\n  components.push(`Hora de Entrega: ${meal.time?.name || meal.time ? cleanText(meal.time?.name || meal.time) : 'No especificada'}`);\r\n  components.push(`Dirección: ${getAddressDisplay(meal.address)}`);\r\n  let addressTypeDisplay = '';\r\n  switch (meal.address?.addressType) {\r\n    case 'house': addressTypeDisplay = 'Casa/Apto'; break;\r\n    case 'school': addressTypeDisplay = 'Colegio/Oficina'; break;\r\n    case 'complex': addressTypeDisplay = 'Conjunto'; break;\r\n    case 'shop': addressTypeDisplay = 'Tienda/Local'; break;\r\n    default: addressTypeDisplay = 'No especificado'; break;\r\n  }\r\n  components.push(`Tipo de Lugar: ${addressTypeDisplay}`);\r\n  components.push(`Teléfono: ${meal.address?.phoneNumber ? cleanText(meal.address.phoneNumber) : 'No especificado'}`);\r\n  if (meal.address?.addressType === 'shop' && meal.address?.localName) components.push(`Nombre del Local: ${cleanText(meal.address.localName)}`);\r\n  if (meal.address?.addressType === 'school' && meal.address?.recipientName) components.push(`Recibe: ${cleanText(meal.address.recipientName)}`);\r\n  if (meal.address?.addressType === 'complex' && meal.address?.unitDetails) components.push(`Unidad: ${cleanText(meal.address.unitDetails)}`);\r\n  components.push(`Pago: ${meal.payment?.name || meal.payment ? cleanText(meal.payment?.name || meal.payment) : 'Efectivo'}`);\r\n  return components.join('\\n');\r\n};\r\n\r\nconst areMealsIdentical = (meals) => {\r\n  if (!meals || meals.length <= 1) return { areIdentical: false, count: 1 };\r\n  const fieldsToCompare = [\r\n    'soup', 'soupReplacement', 'principle', 'principleReplacement', 'protein', 'drink', 'cutlery', 'notes', 'time', 'payment',\r\n    'address.address', 'address.addressType', 'address.phoneNumber', 'address.localName', 'address.recipientName', 'address.unitDetails', 'sides', 'additions'\r\n  ];\r\n  const getMealSignature = (meal) => {\r\n    return fieldsToCompare.map(field => {\r\n      const value = getNestedProperty(meal, field);\r\n      if (field === 'sides' && Array.isArray(value)) return value.map(s => cleanText(s.name || s)).sort().join(',');\r\n      if (field === 'additions' && Array.isArray(value)) return value.map(a => `${cleanText(a.name || a)}${a.protein || a.replacement ? `:${cleanText(a.protein || a.replacement)}` : ''}:${a.quantity || 1}`).sort().join(';');\r\n      if (field === 'principle' && Array.isArray(value)) return value.map(p => cleanText(p.name || p)).sort().join(',');\r\n      return cleanText(value);\r\n    }).join('|');\r\n  };\r\n  const firstSignature = getMealSignature(meals[0]);\r\n  const areIdentical = meals.every(meal => getMealSignature(meal) === firstSignature);\r\n  return { areIdentical, count: meals.length };\r\n};\r\n\r\nconst OrderManagement = ({ setError, setSuccess, theme }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [totals, setTotals] = useState({ cash: 0, daviplata: 0, nequi: 0 });\r\n  const [editForm, setEditForm] = useState({ meals: [], total: 0, status: '', payment: '', deliveryPerson: '' });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showConfirmDeleteAll, setShowConfirmDeleteAll] = useState(false);\r\n  const [confirmText, setConfirmText] = useState('');\r\n  const [showMealDetails, setShowMealDetails] = useState(null);\r\n  const [editingDeliveryId, setEditingDeliveryId] = useState(null);\r\n  const [deliveryPersons, setDeliveryPersons] = useState({});\r\n  const [sortBy, setSortBy] = useState('createdAt.seconds');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [proteins, setProteins] = useState([]);\r\n  const [newProtein, setNewProtein] = useState({ name: '', quantity: '' });\r\n  const [showProteinModal, setShowProteinModal] = useState(false);\r\n\r\n  const fetchOrders = useCallback(() => {\r\n    setIsLoading(true);\r\n    const ordersColRef = collection(db, 'orders');\r\n    const unsubscribe = onSnapshot(ordersColRef, (snapshot) => {\r\n      const ordersData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setOrders(ordersData);\r\n      const newTotals = { cash: 0, daviplata: 0, nequi: 0 };\r\n      const newDeliveryPersons = {};\r\n      ordersData.forEach(order => {\r\n        const paymentSummary = order.paymentSummary || {};\r\n        newTotals.cash += paymentSummary['Efectivo'] || 0;\r\n        newTotals.daviplata += paymentSummary['Daviplata'] || 0;\r\n        newTotals.nequi += paymentSummary['Nequi'] || 0;\r\n        if (order.deliveryPerson) {\r\n          const personName = cleanText(order.deliveryPerson);\r\n          if (!newDeliveryPersons[personName]) newDeliveryPersons[personName] = { cash: 0, daviplata: 0, nequi: 0, total: 0 };\r\n          const paymentType = cleanText(order.payment || order.meals?.[0]?.payment?.name || order.meals?.[0]?.payment || 'Efectivo');\r\n          const amount = order.total || 0;\r\n          if (paymentType === 'Efectivo') newDeliveryPersons[personName].cash += amount;\r\n          else if (paymentType === 'Daviplata') newDeliveryPersons[personName].daviplata += amount;\r\n          else if (paymentType === 'Nequi') newDeliveryPersons[personName].nequi += amount;\r\n          newDeliveryPersons[personName].total += amount;\r\n        }\r\n      });\r\n      setTotals(newTotals);\r\n      setDeliveryPersons(newDeliveryPersons);\r\n      setIsLoading(false);\r\n    }, (error) => {\r\n      setError(`Error al cargar pedidos: ${error.message}`);\r\n      setIsLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [setError]);\r\n\r\n  const fetchProteins = useCallback(() => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const proteinsColRef = query(collection(db, 'dailyProteins'), where('date', '==', today));\r\n    const unsubscribe = onSnapshot(proteinsColRef, (snapshot) => {\r\n      const proteinsData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setProteins(proteinsData);\r\n    }, (error) => {\r\n      setError(`Error al cargar proteínas: ${error.message}`);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [setError]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribeOrders = fetchOrders();\r\n    const unsubscribeProteins = fetchProteins();\r\n    return () => {\r\n      unsubscribeOrders();\r\n      unsubscribeProteins();\r\n    };\r\n  }, [fetchOrders, fetchProteins]);\r\n\r\n  const handleAddProtein = async () => {\r\n    if (!newProtein.name || !newProtein.quantity || isNaN(newProtein.quantity) || Number(newProtein.quantity) <= 0) {\r\n      setError('Por favor, ingrese un nombre de proteína válido y una cantidad mayor a 0.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      await addDoc(collection(db, 'dailyProteins'), {\r\n        name: newProtein.name.trim(),\r\n        quantity: Number(newProtein.quantity),\r\n        date: new Date().toISOString().split('T')[0],\r\n        createdAt: new Date(),\r\n      });\r\n      setNewProtein({ name: '', quantity: '' });\r\n      setShowProteinModal(false);\r\n      setSuccess('Proteína agregada correctamente.');\r\n    } catch (error) {\r\n      setError(`Error al agregar proteína: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = useCallback((order) => {\r\n    setEditingOrder(order);\r\n    setEditForm({\r\n      meals: order.meals?.map(meal => ({\r\n        ...meal,\r\n        address: meal.address || {},\r\n        payment: meal.payment ? cleanText(meal.payment?.name || meal.payment) : 'Efectivo',\r\n        additions: meal.additions || [],\r\n        principle: Array.isArray(meal.principle) ? meal.principle : meal.principle ? [{ name: meal.principle.name || meal.principle }] : [],\r\n        cutlery: meal.cutlery || null,\r\n        sides: meal.sides || [],\r\n      })) || [],\r\n      total: order.total || 0,\r\n      status: order.status || 'Pendiente',\r\n      payment: order.payment ? cleanText(order.payment) : 'Efectivo',\r\n      deliveryPerson: order.deliveryPerson || '',\r\n    });\r\n  }, []);\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (!editingOrder) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const updatedMealsForDB = editForm.meals.map(meal => ({\r\n        ...meal,\r\n        soup: meal.soup && typeof meal.soup === 'string' ? { name: meal.soup } : meal.soup,\r\n        soupReplacement: meal.soupReplacement && typeof meal.soupReplacement === 'string' ? { name: meal.soupReplacement } : meal.soupReplacement,\r\n        principle: Array.isArray(meal.principle) ? meal.principle.map(p => typeof p === 'string' ? { name: p } : p) : meal.principle && typeof meal.principle === 'string' ? [{ name: meal.principle }] : meal.principle,\r\n        principleReplacement: meal.principleReplacement && typeof meal.principleReplacement === 'string' ? { name: meal.principleReplacement } : meal.principleReplacement,\r\n        protein: meal.protein && typeof meal.protein === 'string' ? { name: meal.protein } : meal.protein,\r\n        drink: meal.drink && typeof meal.drink === 'string' ? { name: meal.drink } : meal.drink,\r\n        cutlery: meal.cutlery && typeof meal.cutlery === 'string' ? { name: meal.cutlery } : meal.cutlery,\r\n        time: meal.time && typeof meal.time === 'string' ? { name: meal.time } : meal.time,\r\n        payment: meal.payment && typeof meal.payment === 'string' ? { name: meal.payment } : meal.payment,\r\n        sides: Array.isArray(meal.sides) ? meal.sides.map(s => typeof s === 'string' ? { name: s } : s) : [],\r\n        additions: Array.isArray(meal.additions) ? meal.additions.map(a => ({ name: a.name || '', protein: a.protein || '', replacement: a.replacement || '', quantity: a.quantity || 1 })) : [],\r\n      }));\r\n      await updateDoc(doc(db, 'orders', editingOrder.id), { ...editForm, meals: updatedMealsForDB, updatedAt: new Date() });\r\n      setEditingOrder(null);\r\n      setSuccess('Pedido actualizado correctamente.');\r\n    } catch (error) {\r\n      setError(`Error al guardar: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteOrder = async (orderId) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await deleteDoc(doc(db, 'orders', orderId));\r\n      setSuccess('Pedido eliminado correctamente.');\r\n    } catch (error) {\r\n      setError(`Error al eliminar: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAllOrders = async () => {\r\n    if (confirmText.toLowerCase() !== 'confirmar') {\r\n      setError('Por favor, escribe \"confirmar\" para proceder.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const ordersRef = collection(db, 'orders');\r\n      const q = query(ordersRef);\r\n      const querySnapshot = await getDocs(q);\r\n      const batch = writeBatch(db);\r\n      querySnapshot.docs.forEach((doc) => batch.delete(doc.ref));\r\n      await batch.commit();\r\n      setSuccess('Todos los pedidos han sido eliminados.');\r\n      setShowConfirmDeleteAll(false);\r\n      setConfirmText('');\r\n    } catch (error) {\r\n      setError(`Error al eliminar todos los pedidos: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await updateDoc(doc(db, 'orders', orderId), { status: newStatus, updatedAt: new Date() });\r\n      setSuccess('Estado actualizado correctamente.');\r\n    } catch (error) {\r\n      setError(`Error al actualizar estado: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeliveryChange = async (orderId, value) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await updateDoc(doc(db, 'orders', orderId), { deliveryPerson: cleanText(value) || null, updatedAt: new Date() });\r\n      setSuccess('Domiciliario asignado correctamente.');\r\n    } catch (error) {\r\n      setError(`Error al asignar domiciliario: ${error.message}`);\r\n    } finally {\r\n      setEditingDeliveryId(null);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMealFormFieldChange = (mealIndex, field, value) => {\r\n    setEditForm(prevForm => {\r\n      const updatedMeals = [...prevForm.meals];\r\n      let currentMeal = { ...updatedMeals[mealIndex] };\r\n      if (field.startsWith('address.')) {\r\n        const addressField = field.split('.')[1];\r\n        currentMeal.address = { ...currentMeal.address, [addressField]: value };\r\n      } else if (field === 'additions') {\r\n        currentMeal.additions = value.split(';').map(item => {\r\n          const [name, protein = '', replacement = '', quantity = '1'] = item.split(',').map(s => s.trim());\r\n          return { name, protein, replacement, quantity: parseInt(quantity) || 1 };\r\n        }).filter(item => item.name);\r\n      } else if (field === 'principle') {\r\n        currentMeal.principle = value ? value.split(',').map(name => ({ name: name.trim() })).filter(p => p.name) : [];\r\n      } else if (field === 'sides') {\r\n        currentMeal.sides = value.split(',').map(name => ({ name: name.trim() })).filter(s => s.name);\r\n      } else if (field === 'cutlery') {\r\n        currentMeal.cutlery = { name: value };\r\n      } else {\r\n        currentMeal[field] = ['soup', 'soupReplacement', 'protein', 'drink', 'time', 'payment', 'principleReplacement'].includes(field) ? { name: value } : value;\r\n      }\r\n      updatedMeals[mealIndex] = currentMeal;\r\n      return { ...prevForm, meals: updatedMeals };\r\n    });\r\n  };\r\n\r\n  const sortedAndFilteredOrders = useMemo(() => {\r\n    const indexedOrders = orders.map((order, index) => ({ ...order, originalIndex: index }));\r\n    let filtered = indexedOrders.filter(order => {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      const idMatch = order.id?.toLowerCase().includes(searchLower) || false;\r\n      const mealMatch = order.meals?.some(meal => {\r\n        const mealValues = [\r\n          meal.soup?.name || meal.soup || '',\r\n          meal.soupReplacement?.name || meal.soupReplacement || '',\r\n          Array.isArray(meal.principle) ? meal.principle.map(p => p.name || p).join(', ') : meal.principle?.name || meal.principle || '',\r\n          meal.principleReplacement?.name || meal.principleReplacement || '',\r\n          meal.protein?.name || meal.protein || '',\r\n          meal.drink?.name || meal.drink || '',\r\n          meal.notes || '',\r\n          meal.time?.name || meal.time || '',\r\n          meal.payment?.name || meal.payment || '',\r\n          meal.address?.address || '',\r\n          meal.address?.phoneNumber || '',\r\n          meal.address?.localName || '',\r\n          meal.address?.recipientName || '',\r\n          meal.address?.unitDetails || '',\r\n          meal.sides?.map(s => s.name || s).join(', ') || '',\r\n          meal.additions?.map(a => `${a.name || ''}${a.protein || a.replacement ? ` (${a.protein || a.replacement})` : ''} (${a.quantity || 1})`).join(', ') || ''\r\n        ].map(val => cleanText(val).toLowerCase());\r\n        return mealValues.some(val => val.includes(searchLower));\r\n      });\r\n      return idMatch || mealMatch;\r\n    });\r\n\r\n    return filtered.sort((a, b) => {\r\n      const aValue = getNestedProperty(a, sortBy) || '';\r\n      const bValue = getNestedProperty(b, sortBy) || '';\r\n      if (sortBy === 'total') {\r\n        return sortOrder === 'asc' ? (aValue || 0) - (bValue || 0) : (bValue || 0) - (aValue || 0);\r\n      }\r\n      return sortOrder === 'asc'\r\n        ? String(aValue).localeCompare(String(bValue))\r\n        : String(bValue).localeCompare(String(aValue));\r\n    });\r\n  }, [orders, searchTerm, sortBy, sortOrder]);\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredOrders.length / itemsPerPage);\r\n  const paginatedOrders = sortedAndFilteredOrders.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const totalProteinUnits = proteins.reduce((sum, protein) => sum + protein.quantity, 0);\r\n\r\n  const handleOpenPreview = () => {\r\n    const htmlContent = generatePreviewHtml(orders, totals, deliveryPersons);\r\n    const newWindow = window.open('', '_blank');\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\nconst handleOpenExcelPreview = () => {\r\n  const htmlContent = generateExcelPreviewHtml(orders, totals, deliveryPersons, totalProteinUnits, proteins);\r\n  const newWindow = window.open('', '_blank');\r\n  newWindow.document.write(htmlContent);\r\n  newWindow.document.close();\r\n};\r\n\r\n  const handleSort = (field) => {\r\n    if (sortBy === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortBy !== field) return null;\r\n    return sortOrder === 'asc' ? <ArrowUpIcon className=\"w-4 h-4 inline ml-1\" /> : <ArrowDownIcon className=\"w-4 h-4 inline ml-1\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n      <style>\r\n        {`.headlessui-menu-items { z-index: 50 !important; }`}\r\n      </style>\r\n      <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6\">Gestión de Pedidos</h2>\r\n\r\n      {/* Resumen de Totales */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6 text-sm text-gray-700 dark:text-gray-300\">\r\n        <div className={classNames(\"p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold\">Total Efectivo</p>\r\n          <p className=\"text-lg font-bold\">${totals.cash.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold\">Total Daviplata</p>\r\n          <p className=\"text-lg font-bold\">${totals.daviplata.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold\">Total Nequi</p>\r\n          <p className=\"text-lg font-bold\">${totals.nequi.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold\">Total General</p>\r\n          <p className=\"text-lg font-bold\">${(totals.cash + totals.daviplata + totals.nequi).toLocaleString('es-CO')}</p>\r\n        </div>\r\n      </div>\r\n\r\n{/* Controles: Búsqueda, Proteínas, Exportación */}\r\n<div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center mb-6 gap-4\">\r\n  <div className=\"flex flex-col sm:flex-row gap-4 w-full sm:w-auto\">\r\n    <input\r\n      type=\"text\"\r\n      value={searchTerm}\r\n      onChange={e => setSearchTerm(e.target.value)}\r\n      placeholder=\"Buscar pedidos...\"\r\n      className={classNames(\r\n        \"p-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-blue-500 w-full sm:w-96 shadow-sm text-base transition-all duration-200\",\r\n        theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n      )}\r\n    />\r\n\r\n    <div className=\"relative z-60 flex items-center gap-4\">\r\n      <button\r\n        onClick={() => setShowProteinModal(true)}\r\n        className={classNames(\r\n          \"flex items-center p-3 rounded-lg shadow-sm text-sm font-medium transition-all duration-200\",\r\n          theme === 'dark' ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-100 text-gray-900 hover:bg-gray-200'\r\n        )}\r\n      >\r\n        <PlusIcon className=\"w-5 h-5 mr-2\" />\r\n        Proteínas del Día\r\n      </button>\r\n\r\n      <span className={classNames(\r\n        \"flex items-center p-3 rounded-lg shadow-sm text-sm font-medium transition-all duration-200\",\r\n        theme === 'dark' ? 'bg-gray-700 text-gray-200 hover:bg-gray-600' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n      )}>\r\n        Fecha: {new Date().toLocaleDateString('es-CO', { day: 'numeric', month: 'long', year: 'numeric' })}\r\n      </span>\r\n\r\n      <div className=\"relative\">\r\n        <Menu>\r\n          <MenuButton className={classNames(\r\n            \"flex items-center p-2 transition-all duration-200\",\r\n            theme === 'dark' ? 'text-gray-300 hover:text-gray-200' : 'text-gray-700 hover:text-gray-900'\r\n          )}>\r\n            <span className=\"sr-only\">Abrir menú de opciones</span>\r\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zm0 6a2 2 0 110-4 2 2 0 010 4zm0 6a2 2 0 110-4 2 2 0 010 4z\" />\r\n            </svg>\r\n          </MenuButton>\r\n\r\n          <MenuItems className=\"absolute top-full right-0 mt-2 w-48 origin-top-right rounded-md bg-white dark:bg-gray-800 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none z-50\">\r\n            <MenuItem>\r\n              {({ active }) => (\r\n<button\r\n  onClick={() => exportToExcel(orders, totals, deliveryPersons, totalProteinUnits, proteins)}\r\n  className={classNames(\r\n    \"group flex rounded-t-md items-center w-full px-2 py-2 text-sm\",\r\n    active\r\n      ? (theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-900')\r\n      : (theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')\r\n  )}\r\n>\r\n  Exportar a Excel\r\n</button>\r\n              )}\r\n            </MenuItem>\r\n            <MenuItem>\r\n              {({ active }) => (\r\n                <button\r\n                  onClick={() => exportToPDF(orders, totals, deliveryPersons)}\r\n                  className={classNames(\r\n                    \"group flex items-center w-full px-2 py-2 text-sm\",\r\n                    active\r\n                      ? (theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-900')\r\n                      : (theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')\r\n                  )}\r\n                >\r\n                  Exportar a PDF\r\n                </button>\r\n              )}\r\n            </MenuItem>\r\n            <MenuItem>\r\n              {({ active }) => (\r\n                <button\r\n                  onClick={handleOpenPreview}\r\n                  className={classNames(\r\n                    \"group flex items-center w-full px-2 py-2 text-sm\",\r\n                    active\r\n                      ? (theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-900')\r\n                      : (theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')\r\n                  )}\r\n                >\r\n                  Previsualizar (HTML)\r\n                </button>\r\n              )}\r\n            </MenuItem>\r\n            <MenuItem>\r\n              {({ active }) => (\r\n                <button\r\n                  onClick={handleOpenExcelPreview}\r\n                  className={classNames(\r\n                    \"group flex items-center w-full px-2 py-2 text-sm\",\r\n                    active\r\n                      ? (theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-900')\r\n                      : (theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')\r\n                  )}\r\n                >\r\n                  Previsualizar Excel\r\n                </button>\r\n              )}\r\n            </MenuItem>\r\n            <MenuItem>\r\n              {({ active }) => (\r\n                <button\r\n                  onClick={() => exportToCSV(orders, totals, deliveryPersons, setSuccess)}\r\n                  className={classNames(\r\n                    \"group flex items-center w-full px-2 py-2 text-sm\",\r\n                    active\r\n                      ? (theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-900')\r\n                      : (theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')\r\n                  )}\r\n                >\r\n                  Exportar a CSV\r\n                </button>\r\n              )}\r\n            </MenuItem>\r\n            <MenuItem>\r\n              {({ active }) => (\r\n                <button\r\n                  onClick={() => setShowConfirmDeleteAll(true)}\r\n                  className={classNames(\r\n                    \"group flex rounded-b-md items-center w-full px-2 py-2 text-sm\",\r\n                    active\r\n                      ? (theme === 'dark' ? 'bg-gray-700 text-red-400' : 'bg-gray-100 text-red-600')\r\n                      : (theme === 'dark' ? 'bg-gray-800 text-red-400' : 'bg-white text-red-600')\r\n                  )}\r\n                >\r\n                  Borrar Todos\r\n                </button>\r\n              )}\r\n            </MenuItem>\r\n          </MenuItems>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n      {/* Modal de Proteínas */}\r\n      {showProteinModal && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4 animate-fadeIn\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-labelledby=\"protein-modal-title\"\r\n        >\r\n          <div className={classNames(\r\n            \"p-6 sm:p-8 rounded-2xl shadow-2xl w-full max-w-md max-h-[85vh] overflow-y-auto transition-all duration-300 transform scale-95 animate-scaleIn\",\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n          )}>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 id=\"protein-modal-title\" className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">Proteínas del Día</h2>\r\n              <button\r\n                onClick={() => { setShowProteinModal(false); setNewProtein({ name: '', quantity: '' }); }}\r\n                className=\"text-gray-400 hover:text-gray-200 transition-colors duration-150 p-1 rounded-full\"\r\n                aria-label=\"Cerrar modal de proteínas\"\r\n              >\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <label className=\"block\">\r\n                  <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Nombre de Proteína:</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newProtein.name}\r\n                    onChange={e => setNewProtein({ ...newProtein, name: e.target.value })}\r\n                    placeholder=\"Ej: Pollo\"\r\n                    className={classNames(\r\n                      \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                      theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-gray-50 text-gray-900',\r\n                      \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    )}\r\n                  />\r\n                </label>\r\n                <label className=\"block\">\r\n                  <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Unidades:</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={newProtein.quantity}\r\n                    onChange={e => setNewProtein({ ...newProtein, quantity: e.target.value })}\r\n                    placeholder=\"Ej: 10\"\r\n                    min=\"1\"\r\n                    className={classNames(\r\n                      \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                      theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-gray-50 text-gray-900',\r\n                      \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    )}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <button\r\n                onClick={handleAddProtein}\r\n                className={classNames(\r\n                  \"w-full bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\",\r\n                  isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n                )}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? 'Agregando...' : 'Agregar Proteína'}\r\n              </button>\r\n<div className=\"mt-4\">\r\n  <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Lista de Proteínas</h3>\r\n  {proteins.length === 0 ? (\r\n    <p className=\"text-gray-500 dark:text-gray-400\">No hay proteínas registradas para hoy.</p>\r\n  ) : (\r\n    <ul className=\"space-y-2\">\r\n      {proteins.map(protein => (\r\n        <li key={protein.id} className={classNames(\r\n          \"p-2 rounded-lg\",\r\n          theme === 'dark' ? 'bg-gray-700' : 'bg-gray-50'\r\n        )}>\r\n          {protein.name}: {protein.quantity} unidades\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )}\r\n  <p className=\"mt-4 text-gray-700 dark:text-gray-300 font-semibold\">\r\n    Total de unidades: {totalProteinUnits}\r\n  </p>\r\n</div>\r\n            </div>\r\n            <button\r\n              onClick={() => { setShowProteinModal(false); setNewProtein({ name: '', quantity: '' }); }}\r\n              className=\"mt-4 w-full bg-gray-600 hover:bg-gray-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\"\r\n            >\r\n              Cerrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tabla de Pedidos */}\r\n      <div className={classNames(\r\n        \"p-4 rounded-2xl shadow-xl max-h-[70vh] overflow-y-auto custom-scrollbar transition-all duration-300\",\r\n        theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n      )}>\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center h-40\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-4 border-blue-500\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full text-left border-collapse text-sm\">\r\n                <thead>\r\n                  <tr className={classNames(\r\n                    \"font-semibold sticky top-0 z-10 shadow-sm\",\r\n                    theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-700'\r\n                  )}>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('orderNumber')}>\r\n                      Nº {getSortIcon('orderNumber')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b\">Detalles</th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('meals.0.address.address')}>\r\n                      Dirección {getSortIcon('meals.0.address.address')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('meals.0.address.phoneNumber')}>\r\n                      Teléfono {getSortIcon('meals.0.address.phoneNumber')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('meals.0.time.name')}>\r\n                      Hora {getSortIcon('meals.0.time.name')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('payment')}>\r\n                      Pago {getSortIcon('payment')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('total')}>\r\n                      Total {getSortIcon('total')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('deliveryPerson')}>\r\n                      Domiciliario {getSortIcon('deliveryPerson')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b cursor-pointer\" onClick={() => handleSort('status')}>\r\n                      Estado {getSortIcon('status')}\r\n                    </th>\r\n                    <th className=\"p-3 border-b\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {paginatedOrders.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"10\" className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\r\n                        No se encontraron pedidos. Intenta ajustar tu búsqueda o filtros.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    paginatedOrders.map((order, index) => {\r\n                      const displayNumber = sortOrder === 'asc'\r\n                        ? (currentPage - 1) * itemsPerPage + index + 1\r\n                        : sortedAndFilteredOrders.length - ((currentPage - 1) * itemsPerPage + index);\r\n                      const addressDisplay = getAddressDisplay(order.meals?.[0]?.address);\r\n                      const paymentDisplay = cleanText(order.payment || order.meals?.[0]?.payment?.name || order.meals?.[0]?.payment || 'Sin pago');\r\n                      const statusClass = order.status === 'Pendiente' ? 'bg-yellow-500 text-black' : order.status === 'Entregado' ? 'bg-green-500 text-white' : order.status === 'Cancelado' ? 'bg-red-500 text-white' : '';\r\n\r\n                      return (\r\n                        <tr\r\n                          key={order.id}\r\n                          className={classNames(\r\n                            \"border-b transition-colors duration-150\",\r\n                            theme === 'dark' ? 'border-gray-700 hover:bg-gray-700' : 'border-gray-200 hover:bg-gray-50',\r\n                            index % 2 === 0 ? (theme === 'dark' ? 'bg-gray-750' : 'bg-gray-50') : ''\r\n                          )}\r\n                        >\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300 font-semibold\">{displayNumber}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">\r\n                            <div className=\"flex items-center h-full\">\r\n                              <button\r\n                                onClick={() => setShowMealDetails(order)}\r\n                                className=\"text-blue-500 hover:text-blue-400 transition-colors duration-150 p-1 rounded-md\"\r\n                                title=\"Ver detalles de la bandeja\"\r\n                                aria-label={`Ver detalles del pedido ${order.id}`}\r\n                              >\r\n                                <InformationCircleIcon className=\"w-5 h-5\" />\r\n                              </button>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300 max-w-[200px] truncate\" title={addressDisplay}>{addressDisplay}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">{cleanText(order.meals?.[0]?.address?.phoneNumber)}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">{cleanText(order.meals?.[0]?.time?.name || order.meals?.[0]?.time)}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">{paymentDisplay}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300 font-medium\">${order.total?.toLocaleString('es-CO') || '0'}</td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">\r\n                            {editingDeliveryId === order.id ? (\r\n                              <input\r\n                                type=\"text\"\r\n                                value={editForm.deliveryPerson || ''}\r\n                                onChange={(e) => setEditForm({ ...editForm, deliveryPerson: e.target.value })}\r\n                                onBlur={(e) => handleDeliveryChange(order.id, e.target.value)}\r\n                                onKeyPress={(e) => e.key === 'Enter' && handleDeliveryChange(order.id, e.target.value)}\r\n                                className={classNames(\r\n                                  \"w-full p-2 rounded-lg border text-sm\",\r\n                                  theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-gray-200 text-gray-900',\r\n                                  \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                )}\r\n                                autoFocus\r\n                                aria-label={`Editar domiciliario para pedido ${order.id}`}\r\n                              />\r\n                            ) : (\r\n                              <span\r\n                                onClick={() => { setEditingDeliveryId(order.id); setEditForm(prev => ({ ...prev, deliveryPerson: order.deliveryPerson || '' })); }}\r\n                                className=\"cursor-pointer hover:underline\"\r\n                                title=\"Click para editar\"\r\n                              >\r\n                                {order.deliveryPerson || 'Sin asignar'}\r\n                              </span>\r\n                            )}\r\n                          </td>\r\n                          <td className=\"p-3 text-gray-900 dark:text-gray-300\">\r\n                            <select\r\n                              value={order.status || 'Pendiente'}\r\n                              onChange={(e) => handleStatusChange(order.id, e.target.value)}\r\n                              className={classNames(\r\n                                \"p-2 rounded-lg text-xs font-medium border focus:outline-none focus:ring-2 focus:ring-blue-500\",\r\n                                statusClass,\r\n                                theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n                              )}\r\n                              aria-label={`Cambiar estado del pedido ${order.id}`}\r\n                            >\r\n                              <option value=\"Pendiente\">Pendiente</option>\r\n                              <option value=\"En Preparación\">En Preparación</option>\r\n                              <option value=\"En Camino\">En Camino</option>\r\n                              <option value=\"Entregado\">Entregado</option>\r\n                              <option value=\"Cancelado\">Cancelado</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"p-3 flex space-x-2 items-center\">\r\n                            <button\r\n                              onClick={() => handleEditOrder(order)}\r\n                              className=\"text-blue-500 hover:text-blue-400 transition-colors duration-150 p-1 rounded-md\"\r\n                              title=\"Editar pedido\"\r\n                              aria-label={`Editar pedido ${order.id}`}\r\n                            >\r\n                              <PencilIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                            <button\r\n                              onClick={() => handleDeleteOrder(order.id)}\r\n                              className=\"text-red-500 hover:text-red-400 transition-colors duration-150 p-1 rounded-md\"\r\n                              title=\"Eliminar pedido\"\r\n                              aria-label={`Eliminar pedido ${order.id}`}\r\n                            >\r\n                              <TrashIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Controles de Paginación */}\r\n            <div className=\"flex flex-col sm:flex-row justify-between items-center mt-6 gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">Pedidos por página:</span>\r\n<select\r\n  value={itemsPerPage}\r\n  onChange={e => { setItemsPerPage(Number(e.target.value)); setCurrentPage(1); }}\r\n  className={classNames(\r\n    \"p-2 rounded-lg border text-sm\",\r\n    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n  )}\r\n  aria-label=\"Seleccionar número de pedidos por página\"\r\n>\r\n  <option value={10}>10</option>\r\n  <option value={20}>20</option>\r\n  <option value={30}>30</option>\r\n  <option value={50}>50</option>\r\n</select>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <button\r\n                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className={classNames(\r\n                    \"p-2 rounded-lg transition-all duration-200\",\r\n                    currentPage === 1 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                  )}\r\n                  aria-label=\"Página anterior\"\r\n                >\r\n                  <ChevronLeftIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  Página {currentPage} de {totalPages}\r\n                </span>\r\n                <button\r\n                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                  disabled={currentPage === totalPages}\r\n                  className={classNames(\r\n                    \"p-2 rounded-lg transition-all duration-200\",\r\n                    currentPage === totalPages ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                  )}\r\n                  aria-label=\"Página siguiente\"\r\n                >\r\n                  <ChevronRightIcon className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Resumen por Domiciliarios */}\r\n      <div className=\"mt-8\">\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Resumen por Domiciliarios</h3>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n          {Object.keys(deliveryPersons).length === 0 ? (\r\n            <p className=\"col-span-full text-center text-gray-500 dark:text-gray-400 p-4\">No hay datos de domiciliarios disponibles.</p>\r\n          ) : (\r\n            Object.entries(deliveryPersons).map(([name, totals]) => (\r\n              <div key={name} className={classNames(\r\n                \"p-5 rounded-lg shadow-md\",\r\n                theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-700'\r\n              )}>\r\n                <p className=\"font-semibold text-lg mb-2\">{name}</p>\r\n                <p className=\"text-base\">Efectivo: <span className=\"font-medium\">${totals.cash.toLocaleString('es-CO')}</span></p>\r\n                <p className=\"text-base\">Daviplata: <span className=\"font-medium\">${totals.daviplata.toLocaleString('es-CO')}</span></p>\r\n                <p className=\"text-base\">Nequi: <span className=\"font-medium\">${totals.nequi.toLocaleString('es-CO')}</span></p>\r\n                <p className=\"text-base font-bold mt-2\">Total: <span className=\"text-blue-500\">${totals.total.toLocaleString('es-CO')}</span></p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de Detalles del Pedido */}\r\n      {showMealDetails && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4 animate-fadeIn\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-labelledby=\"meal-details-title\"\r\n        >\r\n          <div className={classNames(\r\n            \"p-6 sm:p-8 rounded-2xl shadow-2xl w-full max-w-md max-h-[85vh] overflow-y-auto transition-all duration-300 transform scale-95 animate-scaleIn\",\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n          )}>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 id=\"meal-details-title\" className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">Detalles del Pedido #{showMealDetails.id}</h2>\r\n              <button\r\n                onClick={() => setShowMealDetails(null)}\r\n                className=\"text-gray-400 hover:text-gray-200 transition-colors duration-150 p-1 rounded-full\"\r\n                aria-label=\"Cerrar detalles del pedido\"\r\n              >\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Estado:</h3>\r\n                <span className={classNames(\r\n                  \"px-3 py-1 rounded-full text-sm font-medium\",\r\n                  showMealDetails.status === 'Pendiente' ? 'bg-yellow-500 text-black' : showMealDetails.status === 'Entregado' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\r\n                )}>\r\n                  {showMealDetails.status || 'Pendiente'}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Fecha de Creación:</h3>\r\n                <p className=\"text-gray-900 dark:text-gray-100\">\r\n                  {showMealDetails.createdAt ? new Date(showMealDetails.createdAt.seconds * 1000).toLocaleDateString('es-CO', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) : 'N/A'}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Total del Pedido:</h3>\r\n                <p className=\"text-gray-900 dark:text-gray-100 font-bold text-lg\">${showMealDetails.total?.toLocaleString('es-CO') || '0'}</p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Domiciliario Asignado:</h3>\r\n                <p className=\"text-gray-900 dark:text-gray-100\">{showMealDetails.deliveryPerson || 'Sin asignar'}</p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2\">Resumen de Almuerzos:</h3>\r\n                {(() => {\r\n                  const { areIdentical, count } = areMealsIdentical(showMealDetails.meals);\r\n                  if (areIdentical && count > 1) {\r\n                    return (\r\n                      <div className={classNames(\r\n                        \"p-4 rounded-lg mb-4\",\r\n                        theme === 'dark' ? 'bg-gray-700' : 'bg-gray-50'\r\n                      )}>\r\n                        <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-2\">{count} almuerzos idénticos</h4>\r\n                        <pre className=\"text-sm text-gray-700 dark:text-gray-300 whitespace-pre-wrap font-sans break-words\">{getMealDetailsDisplay(showMealDetails.meals[0])}</pre>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return showMealDetails.meals?.map((meal, index) => (\r\n                    <div key={index} className={classNames(\r\n                      \"p-4 rounded-lg mb-4\",\r\n                      theme === 'dark' ? 'bg-gray-700' : 'bg-gray-50'\r\n                    )}>\r\n                      <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-2\">Almuerzo #{index + 1}</h4>\r\n                      <pre className=\"text-sm text-gray-700 dark:text-gray-300 whitespace-pre-wrap font-sans break-words\">{getMealDetailsDisplay(meal)}</pre>\r\n                    </div>\r\n                  ));\r\n                })()}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-3 mt-6\">\r\n              <button\r\n                onClick={() => { handleEditOrder(showMealDetails); setShowMealDetails(null); }}\r\n                className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\"\r\n                aria-label={`Editar pedido ${showMealDetails.id}`}\r\n              >\r\n                Editar Pedido\r\n              </button>\r\n              <button\r\n                onClick={() => setShowMealDetails(null)}\r\n                className=\"flex-1 bg-gray-600 hover:bg-gray-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\"\r\n              >\r\n                Cerrar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Edición de Pedido */}\r\n      {editingOrder && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4 animate-fadeIn\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-labelledby=\"edit-order-title\"\r\n        >\r\n          <div className={classNames(\r\n            \"p-6 sm:p-8 rounded-2xl shadow-2xl w-full max-w-lg max-h-[85vh] overflow-y-auto transition-all duration-300 transform scale-95 animate-scaleIn\",\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n          )}>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 id=\"edit-order-title\" className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">Editar Pedido #{editingOrder.id}</h2>\r\n              <button\r\n                onClick={() => setEditingOrder(null)}\r\n                className=\"text-gray-400 hover:text-gray-200 transition-colors duration-150 p-1 rounded-full\"\r\n                aria-label=\"Cerrar edición de pedido\"\r\n              >\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n              {editForm.meals.map((meal, index) => (\r\n                <div key={index} className={classNames(\r\n                  \"p-4 rounded-lg\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-gray-50'\r\n                )}>\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Almuerzo #{index + 1}</h3>\r\n                  <div className=\"grid grid-cols-1 gap-4\">\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Sopa:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.soup?.name || meal.soup || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'soup', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Sopa de Reemplazo:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.soupReplacement?.name || meal.soupReplacement || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'soupReplacement', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Principio:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={Array.isArray(meal.principle) ? meal.principle.map(p => p.name || p).join(', ') : meal.principle?.name || meal.principle || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'principle', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Principio de Reemplazo:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.principleReplacement?.name || meal.principleReplacement || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'principleReplacement', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Proteína:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.protein?.name || meal.protein || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'protein', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Bebida:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.drink?.name || meal.drink || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'drink', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Cubiertos:</span>\r\n                      <select\r\n                        value={meal.cutlery?.name || meal.cutlery || 'No'}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'cutlery', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      >\r\n                        <option value=\"Sí\">Sí</option>\r\n                        <option value=\"No\">No</option>\r\n                      </select>\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Acompañamientos:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.sides.map(s => s.name || s).join(', ')}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'sides', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Adiciones (nombre,proteína/reemplazo,cantidad;...):</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.additions.map(a => `${a.name}${a.protein || a.replacement ? `,${a.protein || a.replacement}` : ''},${a.quantity || 1}`).join(';')}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'additions', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Notas:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.notes || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'notes', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Hora de Entrega:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.time?.name || meal.time || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'time', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Dirección:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.address?.address || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'address.address', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Tipo de Dirección:</span>\r\n                      <select\r\n                        value={meal.address?.addressType || 'house'}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'address.addressType', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      >\r\n                        <option value=\"house\">Casa/Apto</option>\r\n                        <option value=\"school\">Colegio/Oficina</option>\r\n                        <option value=\"complex\">Conjunto</option>\r\n                        <option value=\"shop\">Tienda/Local</option>\r\n                      </select>\r\n                    </label>\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Teléfono:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.address?.phoneNumber || ''}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'address.phoneNumber', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                    {meal.address?.addressType === 'shop' && (\r\n                      <label className=\"block\">\r\n                        <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Nombre del Local:</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.address?.localName || ''}\r\n                          onChange={(e) => handleMealFormFieldChange(index, 'address.localName', e.target.value)}\r\n                          className={classNames(\r\n                            \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                            theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                            \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                          )}\r\n                        />\r\n                      </label>\r\n                    )}\r\n                    {meal.address?.addressType === 'school' && (\r\n                      <label className=\"block\">\r\n                        <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Recibe:</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.address?.recipientName || ''}\r\n                          onChange={(e) => handleMealFormFieldChange(index, 'address.recipientName', e.target.value)}\r\n                          className={classNames(\r\n                            \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                            theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                            \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                          )}\r\n                        />\r\n                      </label>\r\n                    )}\r\n                    {meal.address?.addressType === 'complex' && (\r\n                      <label className=\"block\">\r\n                        <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Unidad:</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.address?.unitDetails || ''}\r\n                          onChange={(e) => handleMealFormFieldChange(index, 'address.unitDetails', e.target.value)}\r\n                          className={classNames(\r\n                            \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                            theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                            \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                          )}\r\n                        />\r\n                      </label>\r\n                    )}\r\n                    <label className=\"block\">\r\n                      <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Método de Pago:</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={meal.payment?.name || meal.payment || 'Efectivo'}\r\n                        onChange={(e) => handleMealFormFieldChange(index, 'payment', e.target.value)}\r\n                        className={classNames(\r\n                          \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        )}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <label className=\"block\">\r\n                <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Total del Pedido:</span>\r\n                <input\r\n                  type=\"number\"\r\n                  value={editForm.total}\r\n                  onChange={(e) => setEditForm({ ...editForm, total: Number(e.target.value) })}\r\n                  className={classNames(\r\n                    \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                    \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  )}\r\n                />\r\n              </label>\r\n              <label className=\"block\">\r\n                <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Estado:</span>\r\n                <select\r\n                  value={editForm.status}\r\n                  onChange={(e) => setEditForm({ ...editForm, status: e.target.value })}\r\n                  className={classNames(\r\n                    \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                    \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  )}\r\n                >\r\n                  <option value=\"Pendiente\">Pendiente</option>\r\n                  <option value=\"En Preparación\">En Preparación</option>\r\n                  <option value=\"En Camino\">En Camino</option>\r\n                  <option value=\"Entregado\">Entregado</option>\r\n                  <option value=\"Cancelado\">Cancelado</option>\r\n                </select>\r\n              </label>\r\n              <label className=\"block\">\r\n                <span className=\"text-gray-700 dark:text-gray-300 text-sm\">Domiciliario:</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.deliveryPerson}\r\n                  onChange={(e) => setEditForm({ ...editForm, deliveryPerson: e.target.value })}\r\n                  className={classNames(\r\n                    \"mt-1 w-full p-2 border rounded-lg text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                    \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  )}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"flex gap-3 mt-6\">\r\n              <button\r\n                onClick={handleSaveEdit}\r\n                className={classNames(\r\n                  \"flex-1 bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\",\r\n                  isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n                )}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? 'Guardando...' : 'Guardar Cambios'}\r\n              </button>\r\n              <button\r\n                onClick={() => setEditingOrder(null)}\r\n                className=\"flex-1 bg-gray-600 hover:bg-gray-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Confirmación para Borrar Todos */}\r\n      {showConfirmDeleteAll && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4 animate-fadeIn\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-labelledby=\"delete-all-title\"\r\n        >\r\n          <div className={classNames(\r\n            \"p-6 sm:p-8 rounded-2xl shadow-2xl w-full max-w-md transition-all duration-300 transform scale-95 animate-scaleIn\",\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n          )}>\r\n            <h2 id=\"delete-all-title\" className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Confirmar Eliminación</h2>\r\n            <p className=\"text-gray-700 dark:text-gray-300 mb-6\">¿Estás seguro de que deseas eliminar todos los pedidos? Escribe \"confirmar\" para proceder.</p>\r\n            <input\r\n              type=\"text\"\r\n              value={confirmText}\r\n              onChange={(e) => setConfirmText(e.target.value)}\r\n              placeholder=\"Escribe 'confirmar'\"\r\n              className={classNames(\r\n                \"w-full p-2 border rounded-lg text-sm mb-4\",\r\n                theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900',\r\n                \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              )}\r\n            />\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={handleDeleteAllOrders}\r\n                className={classNames(\r\n                  \"flex-1 bg-red-600 hover:bg-red-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\",\r\n                  isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n                )}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? 'Eliminando...' : 'Eliminar Todos'}\r\n              </button>\r\n              <button\r\n                onClick={() => { setShowConfirmDeleteAll(false); setConfirmText(''); }}\r\n                className=\"flex-1 bg-gray-600 hover:bg-gray-700 text-white p-3 rounded-lg shadow-md transition-all duration-200 text-sm font-medium\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderManagement;","export const generatePreviewHtml = (orders, totals, deliveryPersons) => {\r\n  let mealCounter = 0;\r\n  const pedidosBody = orders.flatMap((order) => {\r\n    if (!order || !Array.isArray(order.meals) || order.meals.length === 0) return [];\r\n    return order.meals.filter(meal => meal).map((meal) => {\r\n      mealCounter += 1;\r\n      return [\r\n        mealCounter,\r\n        meal?.address?.address || '',\r\n        meal?.address?.phoneNumber || '',\r\n        `$${order.total?.toLocaleString('es-CO') || '0'}`,\r\n        order?.deliveryPerson || ''\r\n      ];\r\n    });\r\n  });\r\n\r\n  if (pedidosBody.length === 0) pedidosBody.push(Array(5).fill('-'));\r\n\r\n  const deliveryBody = Object.entries(deliveryPersons).map(([name, data]) => [\r\n    name || '',\r\n    `$${data.cash?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.daviplata?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.nequi?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.total?.toLocaleString('es-CO') || '0'}`\r\n  ]);\r\n\r\n  const now = new Date();\r\n  const dateStr = now.toLocaleDateString('es-CO');\r\n  const timeStr = now.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Previsualización de Pedidos</title>\r\n        <style>\r\n          body { margin: 0; padding: 20px; font-family: Arial, sans-serif; }\r\n          h1 { text-align: center; font-size: 24px; }\r\n          p.date { text-align: center; font-size: 12px; }\r\n          table { width: 100%; border-collapse: collapse; margin-top: 20px; }\r\n          th, td { padding: 8px; border: 1px solid black; }\r\n          th { background-color: #0066cc; color: white; font-weight: bold; }\r\n          td { text-align: left; }\r\n          td:nth-child(4) { text-align: right; }\r\n          tr:nth-child(even) { background-color: #f5f5f5; }\r\n          .totals-table { width: 50%; }\r\n          .delivery-table th:nth-child(n+2), .delivery-table td:nth-child(n+2) { text-align: right; }\r\n          .button-container { margin-top: 20px; text-align: center; }\r\n          .button { padding: 10px 20px; background-color: #0066cc; color: white; border: none; border-radius: 5px; cursor: pointer; margin: 5px; }\r\n          .button.print { background-color: #28a745; }\r\n          @media print {\r\n              .button-container { display: none; }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <h1>Gestión de Pedidos</h1>\r\n        <p class=\"date\">Fecha: ${dateStr} ${timeStr}</p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>N</th>\r\n              <th>Dirección</th>\r\n              <th>Teléfono</th>\r\n              <th>Total</th>\r\n              <th>Domiciliario</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${pedidosBody.map(row => `\r\n              <tr>\r\n                <td>${row[0]}</td>\r\n                <td>${row[1]}</td>\r\n                <td>${row[2]}</td>\r\n                <td>${row[3]}</td>\r\n                <td>${row[4]}</td>\r\n              </tr>\r\n            `).join('')}\r\n          </tbody>\r\n        </table>\r\n        <h2 style=\"margin-top: 20px; font-size: 18px;\">Resumen de Totales</h2>\r\n        <table class=\"totals-table\">\r\n          <tbody>\r\n            <tr><td style=\"padding: 8px;\">Total Efectivo</td><td style=\"padding: 8px; text-align: right;\">${pedidosBody.length > 0 ? `$${totals.cash?.toLocaleString('es-CO') || '0'}` : '$0'}</td></tr>\r\n            <tr><td style=\"padding: 8px;\">Total Daviplata</td><td style=\"padding: 8px; text-align: right;\">${pedidosBody.length > 0 ? `$${totals.daviplata?.toLocaleString('es-CO') || '0'}` : '$0'}</td></tr>\r\n            <tr><td style=\"padding: 8px;\">Total Nequi</td><td style=\"padding: 8px; text-align: right;\">${pedidosBody.length > 0 ? `$${totals.nequi?.toLocaleString('es-CO') || '0'}` : '$0'}</td></tr>\r\n            <tr><td style=\"padding: 8px;\">Total General</td><td style=\"padding: 8px; text-align: right;\">${pedidosBody.length > 0 ? `$${(totals.cash + totals.daviplata + totals.nequi || 0).toLocaleString('es-CO')}` : '$0'}</td></tr>\r\n          </tbody>\r\n        </table>\r\n        <h2 style=\"margin-top: 20px; font-size: 18px;\">Resumen por Domiciliarios</h2>\r\n        <table class=\"delivery-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Domiciliario</th>\r\n              <th>Efectivo</th>\r\n              <th>Daviplata</th>\r\n              <th>Nequi</th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${deliveryBody.map(row => `\r\n              <tr>\r\n                <td>${row[0]}</td>\r\n                <td>${row[1]}</td>\r\n                <td>${row[2]}</td>\r\n                <td>${row[3]}</td>\r\n                <td>${row[4]}</td>\r\n              </tr>\r\n            `).join('')}\r\n          </tbody>\r\n        </table>\r\n        <div class=\"button-container\">\r\n          <button class=\"button print\" onclick=\"window.print()\">Imprimir</button>\r\n          <button class=\"button\" onclick=\"window.close()\">Cerrar Previsualización</button>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `;\r\n};","export const generateExcelPreviewHtml = (orders, totals, deliveryPersons, totalProteinUnits = 0, proteins = []) => {\r\n  let mealCounter = 0;\r\n  const pedidosBody = orders.map((order) => {\r\n    mealCounter += 1;\r\n    const meal = order.meals?.[0] || {};\r\n    const payment = order.payment?.name || order.payment || meal?.payment?.name || meal?.payment || 'Efectivo';\r\n\r\n    return [\r\n      mealCounter,\r\n      meal?.address?.address || '',\r\n      meal?.address?.phoneNumber || '',\r\n      `$${order.total?.toLocaleString('es-CO') || '0'}`,\r\n      payment,\r\n      order?.deliveryPerson || ''\r\n    ];\r\n  });\r\n\r\n  if (pedidosBody.length === 0) pedidosBody.push(Array(6).fill('-'));\r\n\r\n  const deliveryBody = Object.entries(deliveryPersons).map(([name, data]) => [\r\n    name || '',\r\n    `$${data.cash?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.daviplata?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.nequi?.toLocaleString('es-CO') || '0'}`,\r\n    `$${data.total?.toLocaleString('es-CO') || '0'}`\r\n  ]);\r\n\r\n  const proteinsBody = proteins.length === 0\r\n    ? [['-', '-']]\r\n    : proteins.map((protein, index) => {\r\n        const isPenultimate = index === proteins.length - 2;\r\n        const isLast = index === proteins.length - 1;\r\n        return [\r\n          protein.name || 'Sin nombre',\r\n          protein.quantity?.toLocaleString('es-CO') || '0',\r\n          isPenultimate ? 'TOTAL PROTEÍNAS:' : isLast ? 'Fecha actual:' : '',\r\n          isPenultimate ? totalProteinUnits.toLocaleString('es-CO') : isLast ? new Date().toLocaleDateString('es-CO', { day: '2-digit', month: '2-digit', year: 'numeric' }) : ''\r\n        ];\r\n      });\r\n\r\n  // Se calculan los totales de forma precisa\r\n  const calculatedTotals = {\r\n    cash: totals.cash || 0,\r\n    daviplata: totals.daviplata || 0,\r\n    nequi: totals.nequi || 0\r\n  };\r\n  const totalGeneral = calculatedTotals.cash + calculatedTotals.daviplata + calculatedTotals.nequi;\r\n\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Previsualización de Excel</title>\r\n        <style>\r\n          body { margin: 0; padding: 20px; font-family: Arial, sans-serif; }\r\n          h1 { text-align: center; font-size: 24px; }\r\n          table { width: 100%; border-collapse: collapse; }\r\n          th, td { padding: 8px; border: 1px solid black; }\r\n          th { background-color: #0066cc; color: white; font-weight: bold; text-align: center; font-size: 16px; }\r\n          td { text-align: left; vertical-align: middle; }\r\n          td:nth-child(4), td:nth-child(6) { text-align: right; }\r\n          tr:nth-child(even) { background-color: #f5f5f5; }\r\n          .totals-table { width: 50%; margin-left: auto; margin-right: auto; }\r\n\r\n          .proteins-container { width: auto; margin: 0 auto; max-width: 700px; }\r\n          .proteins-table {\r\n            border-collapse: collapse;\r\n            font-size: 14px;\r\n            width: 100%;\r\n            max-width: 700px;\r\n          }\r\n          .proteins-table th, .proteins-table td {\r\n            padding: 6px 12px;\r\n            border: 1px solid black;\r\n            white-space: nowrap;\r\n          }\r\n          .proteins-table th:nth-child(1), .proteins-table td:nth-child(1) { width: 160px; text-align: left; }\r\n          .proteins-table th:nth-child(2), .proteins-table td:nth-child(2) { width: 80px; text-align: right; }\r\n          .proteins-table th:nth-child(3), .proteins-table td:nth-child(3) { width: 220px; text-align: left; }\r\n\r\n          .delivery-table th { background-color: #0066cc; color: white; font-weight: bold; text-align: center; font-size: 16px; }\r\n          .delivery-table .green-header th { background-color: #28a745; }\r\n          .delivery-table td:nth-child(n+2) { text-align: right; }\r\n\r\n          .spacer { height: 16px; }\r\n          .button-container { margin-top: 20px; text-align: center; }\r\n          .button { padding: 10px 20px; background-color: #0066cc; color: white; border: none; border-radius: 5px; cursor: pointer; margin: 5px; }\r\n          .button.print { background-color: #28a745; }\r\n          @media print { .button-container { display: none; } }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <h1>Gestión de Pedidos</h1>\r\n        <div class=\"spacer\"></div>\r\n\r\n        <div class=\"proteins-container\">\r\n          <table class=\"proteins-table\" aria-label=\"Resumen de proteínas\">\r\n            <thead>\r\n              <tr>\r\n                <th style=\"background-color: #0066cc; color: white; border: 1px solid black;\">Proteína</th>\r\n                <th style=\"background-color: #0066cc; color: white; border: 1px solid black;\">Unidades</th>\r\n                <th style=\"background-color: #0066cc; color: white; border: 1px solid black;\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              ${proteinsBody.map((row, index) => {\r\n                const thirdColumn = row[2] ? `\r\n                  <td style=\"padding: 0;\">\r\n                    <div style=\"display: flex; width: 100%; height: 100%;\">\r\n                      <div style=\"flex: 1; padding: 6px 12px; font-weight: bold; display: flex; align-items: center;\">${row[2]}</div>\r\n                      <div style=\"width: 1px; background-color: black;\"></div>\r\n                      <div style=\"flex: 1; padding: 6px 12px; display: flex; justify-content: flex-end; align-items: center; font-weight: ${row[2] === 'TOTAL PROTEÍNAS:' ? 'bold' : 'normal'};\">${row[3]}</div>\r\n                    </div>\r\n                  </td>\r\n                ` : '<td style=\"border: none; background-color: white;\"></td>';\r\n\r\n                return `\r\n                  <tr>\r\n                    <td title=\"${row[0]}\">${row[0]}</td>\r\n                    <td style=\"text-align: right;\">${row[1]}</td>\r\n                    ${thirdColumn}\r\n                  </tr>\r\n                `;\r\n              }).join('')}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"spacer\"></div><div class=\"spacer\"></div>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>N</th>\r\n              <th>Dirección</th>\r\n              <th>Teléfono</th>\r\n              <th>Total</th>\r\n              <th>Método de Pago</th>\r\n              <th>Domiciliario</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${pedidosBody.map(row => `\r\n              <tr>\r\n                <td>${row[0]}</td>\r\n                <td>${row[1]}</td>\r\n                <td>${row[2]}</td>\r\n                <td>${row[3]}</td>\r\n                <td>${row[4]}</td>\r\n                <td>${row[5]}</td>\r\n              </tr>\r\n            `).join('')}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"spacer\"></div><div class=\"spacer\"></div>\r\n\r\n        <table class=\"totals-table\">\r\n          <thead>\r\n            <tr><th colspan=\"2\">Resumen de Totales</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr><td>Total Efectivo</td><td style=\"text-align: right;\">$${calculatedTotals.cash.toLocaleString('es-CO')}</td></tr>\r\n            <tr><td>Total Daviplata</td><td style=\"text-align: right;\">$${calculatedTotals.daviplata.toLocaleString('es-CO')}</td></tr>\r\n            <tr><td>Total Nequi</td><td style=\"text-align: right;\">$${calculatedTotals.nequi.toLocaleString('es-CO')}</td></tr>\r\n            <tr><td>Total General</td><td style=\"text-align: right;\">$${totalGeneral.toLocaleString('es-CO')}</td></tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"spacer\"></div><div class=\"spacer\"></div>\r\n\r\n        <table class=\"delivery-table\">\r\n          <thead>\r\n            <tr><th colspan=\"5\">Resumen por Domiciliarios</th></tr>\r\n            <tr class=\"green-header\">\r\n              <th>Domiciliario</th>\r\n              <th>Efectivo</th>\r\n              <th>Daviplata</th>\r\n              <th>Nequi</th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${deliveryBody.map(row => `\r\n              <tr>\r\n                <td>${row[0]}</td>\r\n                <td>${row[1]}</td>\r\n                <td>${row[2]}</td>\r\n                <td>${row[3]}</td>\r\n                <td>${row[4]}</td>\r\n              </tr>\r\n            `).join('')}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"button-container\">\r\n          <button class=\"button print\" onclick=\"window.print()\">Imprimir</button>\r\n          <button class=\"button\" onclick=\"window.close()\">Cerrar Previsualización</button>\r\n          <button class=\"button\" onclick=\"window.opener.postMessage('downloadExcel', '*')\">Descargar Excel</button>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `;\r\n};","import ExcelJS from 'exceljs';\r\n\r\nexport const exportToExcel = async (orders, totals, deliveryPersons, totalProteinUnits, proteins) => {\r\n  try {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet('Gestión de Pedidos');\r\n\r\n    const cleanText = (text) => {\r\n      if (text == null) return '';\r\n      if (typeof text === 'string') return text.replace(' NUEVO', '').trim();\r\n      if (typeof text === 'boolean') return text.toString();\r\n      if (typeof text === 'object' && text?.name) return text.name.replace(' NUEVO', '').trim();\r\n      return String(text).replace(' NUEVO', '').trim();\r\n    };\r\n\r\n    const applyThinBorder = (cell) => {\r\n      cell.border = {\r\n        top: { style: 'thin', color: { argb: 'FF000000' } },\r\n        left: { style: 'thin', color: { argb: 'FF000000' } },\r\n        bottom: { style: 'thin', color: { argb: 'FF000000' } },\r\n        right: { style: 'thin', color: { argb: 'FF000000' } },\r\n      };\r\n    };\r\n\r\n    // 🟡 1. Resumen de Proteínas\r\n    worksheet.addRow(['', 'PROTEÍNAS DEL DÍA']);\r\n    const proteinHeaderRow = worksheet.lastRow.number;\r\n    worksheet.mergeCells(proteinHeaderRow, 2, proteinHeaderRow, 3);\r\n    const proteinHeader = worksheet.getCell(`B${proteinHeaderRow}`);\r\n    proteinHeader.font = { bold: true, color: { argb: 'FFFFFFFF' } };\r\n    proteinHeader.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF0066CC' } };\r\n    proteinHeader.alignment = { horizontal: 'center' };\r\n\r\n    worksheet.getRow(proteinHeaderRow + 1).values = ['', 'Proteína', 'Unidades', '', ''];\r\n    const proteinTableHeader = worksheet.getRow(proteinHeaderRow + 1);\r\n    proteinTableHeader.eachCell((cell, colNumber) => {\r\n      if (colNumber === 2 || colNumber === 3) {\r\n        cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF28A745' } };\r\n        cell.font = { color: { argb: 'FFFFFFFF' }, bold: true };\r\n        cell.alignment = { horizontal: 'center' };\r\n        applyThinBorder(cell);\r\n      }\r\n      if (colNumber === 4 || colNumber === 5) {\r\n        cell.value = '';\r\n      }\r\n    });\r\n\r\n    const proteinData = proteins.length === 0\r\n      ? [{ name: '-', quantity: '-', extra: '', extraValue: '' }]\r\n      : [\r\n          ...proteins.slice(0, -2),\r\n          {\r\n            name: proteins[proteins.length - 2].name,\r\n            quantity: proteins[proteins.length - 2].quantity,\r\n            extra: 'TOTAL PROTEÍNAS:',\r\n            extraValue: totalProteinUnits.toLocaleString('es-CO'),\r\n          },\r\n          {\r\n            name: proteins[proteins.length - 1].name,\r\n            quantity: proteins[proteins.length - 1].quantity,\r\n            extra: 'Fecha actual:',\r\n            extraValue: `${String(new Date().getDate()).padStart(2, '0')}/${String(new Date().getMonth() + 1).padStart(2, '0')}/${new Date().getFullYear()}`,\r\n          },\r\n        ];\r\n\r\n    proteinData.forEach((protein, index) => {\r\n      const row = worksheet.addRow(['', protein.name, protein.quantity, protein.extra, protein.extraValue]);\r\n      row.eachCell((cell, colNumber) => {\r\n        if (colNumber >= 2) {\r\n          if (index >= proteinData.length - 2 || colNumber === 2 || colNumber === 3) {\r\n            applyThinBorder(cell);\r\n          }\r\n          if (colNumber === 3) {\r\n            cell.numFmt = '#,##0';\r\n            cell.alignment = { horizontal: 'right' };\r\n          }\r\n          if (colNumber === 4) cell.alignment = { horizontal: 'left' };\r\n          if (colNumber === 5) cell.alignment = { horizontal: 'right' };\r\n        }\r\n      });\r\n    });\r\n\r\n    worksheet.addRow({});\r\n    worksheet.addRow({});\r\n\r\n    // 🟢 2. Pedidos\r\n    let mealCounter = 0;\r\n    const pedidos = orders.map((order) => {\r\n      mealCounter += 1;\r\n      const meal = order.meals?.[0] || {};\r\n      return {\r\n        N: mealCounter,\r\n        Dirección: cleanText(meal.address?.address),\r\n        Teléfono: cleanText(meal.address?.phoneNumber),\r\n        Total: order.total || 0,\r\n        MétodoDePago: cleanText(order.payment || meal.payment?.name || meal.payment || 'Efectivo'),\r\n        Domiciliario: cleanText(order.deliveryPerson),\r\n      };\r\n    });\r\n\r\n    if (pedidos.length === 0) {\r\n      pedidos.push({ N: '-', Dirección: '-', Teléfono: '-', Total: '-', MétodoDePago: '-', Domiciliario: '-' });\r\n    }\r\n\r\n    worksheet.columns = [\r\n      { key: 'N', width: 10 },\r\n      { key: 'Dirección', width: 30 },\r\n      { key: 'Teléfono', width: 15 },\r\n      { key: 'Total', width: 15 },\r\n      { key: 'MétodoDePago', width: 15 },\r\n      { key: 'Domiciliario', width: 25 },\r\n    ];\r\n\r\n    const pedidosHeaderRow = proteinData.length + 4;\r\n    const headerRow = worksheet.getRow(pedidosHeaderRow);\r\n    headerRow.values = ['N', 'Dirección', 'Teléfono', 'Total', 'Método de Pago', 'Domiciliario'];\r\n    headerRow.eachCell(cell => {\r\n      cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF0066CC' } };\r\n      cell.font = { color: { argb: 'FFFFFFFF' }, bold: true };\r\n      cell.alignment = { horizontal: 'center' };\r\n      applyThinBorder(cell);\r\n    });\r\n\r\n    pedidos.forEach(pedido => {\r\n      const row = worksheet.addRow(pedido);\r\n      row.eachCell(cell => applyThinBorder(cell));\r\n    });\r\n\r\n    worksheet.addRow({});\r\n    worksheet.addRow({});\r\n\r\n    // 🟠 3. Resumen de Totales\r\n    worksheet.addRow([]);\r\n    const resumenRow = worksheet.lastRow.number;\r\n    worksheet.getCell(`C${resumenRow}`).value = 'Resumen de Totales';\r\n    worksheet.mergeCells(`C${resumenRow}:D${resumenRow}`);\r\n    const resumenCell = worksheet.getCell(`C${resumenRow}`);\r\n    resumenCell.font = { bold: true, color: { argb: 'FFFFFFFF' } };\r\n    resumenCell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF0066CC' } };\r\n    resumenCell.alignment = { horizontal: 'center' };\r\n    applyThinBorder(resumenCell);\r\n    applyThinBorder(worksheet.getCell(`D${resumenRow}`));\r\n\r\n    const resumenData = [\r\n      ['Total Efectivo', totals.cash || 0],\r\n      ['Total Daviplata', totals.daviplata || 0],\r\n      ['Total Nequi', totals.nequi || 0],\r\n      ['Total General', (totals.cash + totals.daviplata + totals.nequi) || 0],\r\n    ];\r\n\r\n    resumenData.forEach(([label, value]) => {\r\n      const row = worksheet.addRow(['', '', label, value]);\r\n      row.getCell(3).alignment = { horizontal: 'left' };\r\n      row.getCell(4).alignment = { horizontal: 'right' };\r\n      row.getCell(4).numFmt = '$#,##0';\r\n      row.getCell(4).font = { bold: true };\r\n      applyThinBorder(row.getCell(3));\r\n      applyThinBorder(row.getCell(4));\r\n    });\r\n\r\n    worksheet.addRow({});\r\n    worksheet.addRow({});\r\n\r\n    // 🔵 4. Resumen por Domiciliarios\r\n    worksheet.addRow(['', 'Resumen por Domiciliarios']);\r\n    const resumenDomiciliariosRow = worksheet.lastRow.number;\r\n    worksheet.mergeCells(resumenDomiciliariosRow, 2, resumenDomiciliariosRow, 6);\r\n    const deliveryHeader = worksheet.getCell(`B${resumenDomiciliariosRow}`);\r\n    deliveryHeader.font = { bold: true, color: { argb: 'FFFFFFFF' } };\r\n    deliveryHeader.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF0066CC' } };\r\n    deliveryHeader.alignment = { horizontal: 'center' };\r\n    for (let i = 2; i <= 6; i++) applyThinBorder(worksheet.getCell(resumenDomiciliariosRow, i));\r\n\r\n    worksheet.addRow(['', 'Domiciliario', 'Efectivo', 'Daviplata', 'Nequi', 'Total']);\r\n    const domHeader = worksheet.lastRow;\r\n    domHeader.eachCell((cell, colNumber) => {\r\n      if (colNumber >= 2) {\r\n        cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FF28A745' } };\r\n        cell.font = { color: { argb: 'FFFFFFFF' }, bold: true };\r\n        cell.alignment = { horizontal: 'center' };\r\n        applyThinBorder(cell);\r\n      }\r\n    });\r\n\r\n    Object.entries(deliveryPersons).forEach(([name, data]) => {\r\n      const row = worksheet.addRow([\r\n        '',\r\n        cleanText(name),\r\n        data.cash || 0,\r\n        data.daviplata || 0,\r\n        data.nequi || 0,\r\n        data.total || 0,\r\n      ]);\r\n      row.eachCell((cell, colNumber) => {\r\n        if (colNumber >= 2) {\r\n          if (colNumber >= 3) {\r\n            cell.numFmt = '$#,##0';\r\n            cell.alignment = { horizontal: 'right' };\r\n          }\r\n          applyThinBorder(cell);\r\n        }\r\n      });\r\n    });\r\n\r\n    const buffer = await workbook.xlsx.writeBuffer();\r\n    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = `pedidos_${new Date().toISOString().slice(0, 10)}.xlsx`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  } catch (error) {\r\n    console.error('Error al exportar Excel:', error);\r\n    alert('Error al generar el archivo Excel: ' + error.message);\r\n  }\r\n};","import jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\n\r\nexport const exportToPDF = async (orders, totals = {}, deliveryPersons = {}) => {\r\n  try {\r\n    const doc = new jsPDF();\r\n\r\n    const logoUrl = '/logo.png'; // Asegúrate de que esta ruta sea accesible\r\n    try {\r\n      doc.addImage(logoUrl, 'PNG', 160, 10, 30, 20);\r\n    } catch (imgError) {\r\n      console.warn('No se pudo cargar el logo para el PDF:', imgError);\r\n    }\r\n\r\n    doc.setFontSize(16);\r\n    doc.text('Gestión de Pedidos', 14, 20);\r\n    doc.setFontSize(12);\r\n    const now = new Date();\r\n    const dateStr = now.toLocaleDateString('es-CO');\r\n    const timeStr = now.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n    doc.text(`Fecha: ${dateStr} ${timeStr}`, 14, 30);\r\n\r\nlet mealCounter = 0;\r\nconst pedidosBody = orders.map((order) => {\r\n  mealCounter += 1;\r\n  const meal = order.meals?.[0] || {};\r\n  const paymentMethod = order.payment?.name || order.payment || meal.payment?.name || meal.payment || 'Efectivo';\r\n\r\n  return [\r\n    mealCounter,\r\n    meal.address?.address || '',\r\n    meal.address?.phoneNumber || '',\r\n    `$${order.total?.toLocaleString('es-CO') || '0'}`,\r\n    paymentMethod,\r\n    order?.deliveryPerson || ''\r\n  ];\r\n});\r\n\r\nif (pedidosBody.length === 0) pedidosBody.push(Array(6).fill('-'));\r\n\r\n\r\n    if (pedidosBody.length === 0) pedidosBody.push(Array(5).fill('-'));\r\n\r\n    autoTable(doc, {\r\n      startY: 40,\r\n      head: [['N', 'Dirección', 'Teléfono', 'Total', 'Domiciliario']],\r\n      body: pedidosBody,\r\n      styles: { fontSize: 8, cellPadding: 2, overflow: 'linebreak' },\r\n      headStyles: { fillColor: [0, 102, 204], textColor: 255, fontStyle: 'bold', lineWidth: 0.2, lineColor: [0, 0, 0] },\r\n      alternateRowStyles: { fillColor: [245, 245, 245] },\r\n      columnStyles: {\r\n        1: { cellWidth: 'wrap' },\r\n        3: { halign: 'right' }\r\n      },\r\n      tableLineColor: [0, 0, 0],\r\n      tableLineWidth: 0.2,\r\n      didDrawPage: (data) => {\r\n        doc.setFontSize(10);\r\n        doc.text(`Página ${data.pageNumber}`, 180, 287);\r\n      }\r\n    });\r\n\r\n    const finalY = doc.lastAutoTable.finalY + 10;\r\n    doc.setFontSize(14);\r\n    doc.text('Resumen de Totales', 14, finalY);\r\n\r\n    autoTable(doc, {\r\n      startY: finalY + 5,\r\n      head: [['Concepto', 'Monto']],\r\n      body: [\r\n        ['Total Efectivo', `$${totals.cash?.toLocaleString('es-CO') || '0'}`],\r\n        ['Total Daviplata', `$${totals.daviplata?.toLocaleString('es-CO') || '0'}`],\r\n        ['Total Nequi', `$${totals.nequi?.toLocaleString('es-CO') || '0'}`],\r\n        ['Total General', `$${(totals.cash + totals.daviplata + totals.nequi || 0).toLocaleString('es-CO')}`]\r\n      ],\r\n      styles: { fontSize: 10, cellPadding: 2, overflow: 'linebreak' },\r\n      headStyles: { fillColor: [0, 102, 204], textColor: 255, fontStyle: 'bold', lineWidth: 0.2, lineColor: [0, 0, 0] },\r\n      columnStyles: { 1: { halign: 'right' } },\r\n      tableLineColor: [0, 0, 0],\r\n      tableLineWidth: 0.2\r\n    });\r\n\r\n    const deliveryY = doc.lastAutoTable.finalY + 10;\r\n    doc.setFontSize(14);\r\n    doc.text('Resumen por Domiciliarios', 14, deliveryY);\r\n\r\n    const deliveryBody = Object.entries(deliveryPersons).map(([name, data]) => [\r\n      name || '',\r\n      `$${data.cash?.toLocaleString('es-CO') || '0'}`,\r\n      `$${data.daviplata?.toLocaleString('es-CO') || '0'}`,\r\n      `$${data.nequi?.toLocaleString('es-CO') || '0'}`,\r\n      `$${data.total?.toLocaleString('es-CO') || '0'}`\r\n    ]);\r\n\r\n    autoTable(doc, {\r\n      startY: deliveryY + 5,\r\n      head: [['Domiciliario', 'Efectivo', 'Daviplata', 'Nequi', 'Total']],\r\n      body: deliveryBody.length > 0 ? deliveryBody : [['-', '-', '-', '-', '-']],\r\n      styles: { fontSize: 8, cellPadding: 2, overflow: 'linebreak' },\r\n      headStyles: { fillColor: [0, 102, 204], textColor: 255, fontStyle: 'bold', lineWidth: 0.2, lineColor: [0, 0, 0] },\r\n      columnStyles: {\r\n        1: { halign: 'right' },\r\n        2: { halign: 'right' },\r\n        3: { halign: 'right' },\r\n        4: { halign: 'right' }\r\n      },\r\n      tableLineColor: [0, 0, 0],\r\n      tableLineWidth: 0.2\r\n    });\r\n\r\n    doc.save(`pedidos_${new Date().toISOString().split('T')[0]}.pdf`);\r\n  } catch (error) {\r\n    console.error('Error al generar el PDF:', error);\r\n    alert('Error al generar el PDF: ' + error.message);\r\n  }\r\n};","export const exportToCSV = (orders, totals, deliveryPersons, setSuccess) => {\r\n  const headers = [\r\n    'ID Pedido', 'Nº Bandeja', 'Sopa', 'Principio', 'Proteína', 'Bebida', 'Cubiertos', 'Acompañamientos', 'Adiciones', 'Notas',\r\n    'Hora de Entrega', 'Dirección', 'Tipo de Lugar', 'Nombre del Local', 'Nombre del Destinatario', 'Detalles de Unidad',\r\n    'Teléfono', 'Pago (Bandeja)', 'Total (COP)', 'Pago (General)', 'Domiciliario', 'Estado', 'Fecha de Creación', 'Última Actualización'\r\n  ];\r\n\r\n  const orderRows = orders.flatMap(order => \r\n    order.meals.map((meal, index) => [\r\n      order.id, index + 1, meal.soup?.name || meal.soup || 'Sin sopa',\r\n      Array.isArray(meal.principle) ? meal.principle.map(p => p.name || p).join(', ') : meal.principle?.name || meal.principle || 'Sin principio',\r\n      meal.protein?.name || meal.protein || 'Sin proteína', meal.drink?.name || meal.drink || 'Sin bebida',\r\n      meal.cutlery?.name || meal.cutlery || 'No', meal.sides?.map(s => s.name || s).join(', ') || 'Ninguno',\r\n      meal.additions?.map(a => `${a.name || ''}${a.protein || a.replacement ? ` (${a.protein || a.replacement})` : ''} (${a.quantity || 1})`).join(', ') || 'Ninguna',\r\n      meal.notes || 'Ninguna', meal.time?.name || meal.time || 'No especificada', meal.address?.address || 'Sin dirección',\r\n      meal.address?.addressType || 'No especificado', meal.address?.localName || '', meal.address?.recipientName || '',\r\n      meal.address?.unitDetails || '', meal.address?.phoneNumber || 'No especificado',\r\n      meal.payment?.name || meal.payment || 'Efectivo', `$${order.total?.toLocaleString('es-CO') || '0'}`,\r\n      order.payment || 'Efectivo', order.deliveryPerson || 'Sin asignar', order.status || 'Pendiente',\r\n      order.createdAt ? new Date(order.createdAt.seconds * 1000).toLocaleString('es-CO') : 'N/A',\r\n      order.updatedAt ? new Date(order.updatedAt.seconds * 1000).toLocaleString('es-CO') : 'N/A',\r\n    ].map(cell => `\"${String(cell || '').replace(/\"/g, '\"\"')}\"`))\r\n  );\r\n\r\n  const totalsRows = [\r\n    ['Total Efectivo', `$${totals.cash.toLocaleString('es-CO')}`],\r\n    ['Total Daviplata', `$${totals.daviplata.toLocaleString('es-CO')}`],\r\n    ['Total Nequi', `$${totals.nequi.toLocaleString('es-CO')}`],\r\n    ['Total General', `$${(totals.cash + totals.daviplata + totals.nequi).toLocaleString('es-CO')}`],\r\n  ].map(row => row.map(cell => `\"${String(cell || '').replace(/\"/g, '\"\"')}\"`));\r\n\r\n  const deliveryRows = Object.entries(deliveryPersons).map(([name, data]) => [\r\n    name, `$${data.cash.toLocaleString('es-CO')}`, `$${data.daviplata.toLocaleString('es-CO')}`, \r\n    `$${data.nequi.toLocaleString('es-CO')}`, `$${data.total.toLocaleString('es-CO')}`\r\n  ].map(cell => `\"${String(cell || '').replace(/\"/g, '\"\"')}\"`));\r\n\r\n  const csvContent = [\r\n    headers.join(','),\r\n    ...orderRows,\r\n    '',\r\n    '\"Resumen de Totales\"',\r\n    '\"Concepto\",\"Monto (COP)\"',\r\n    ...totalsRows,\r\n    '\"Resumen por Domiciliarios\"',\r\n    '\"Domiciliario\",\"Efectivo (COP)\",\"Daviplata (COP)\",\"Nequi (COP)\",\"Total (COP)\"',\r\n    ...deliveryRows,\r\n  ].join('\\n');\r\n\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const url = window.URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `pedidos_${new Date().toISOString().split('T')[0]}.csv`;\r\n  a.click();\r\n  window.URL.revokeObjectURL(url);\r\n  setSuccess('Pedidos exportados a CSV.');\r\n};"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","cleanText","text","replace","trim","toString","name","String","getNestedProperty","obj","path","split","reduce","acc","part","undefined","getAddressDisplay","address","display","addressType","recipientName","unitDetails","localName","getMealDetailsDisplay","meal","_meal$soupReplacement","_meal$soupReplacement2","_meal$soup","_meal$soup2","_meal$principleReplac","_meal$principle","_meal$protein","_meal$protein2","_meal$drink","_meal$drink2","_meal$cutlery","_meal$sides","_meal$additions","_meal$time","_meal$time2","_meal$address","_meal$address2","_meal$address3","_meal$address4","_meal$address5","_meal$address6","_meal$address7","_meal$address8","_meal$payment","_meal$payment2","components","soupDisplay","soupReplacement","soup","principleDisplay","_meal$principleReplac2","push","principleReplacement","isArray","principle","principleNames","map","p","_meal$principle2","protein","drinkName","drink","cutlery","sides","s","additions","a","replacement","quantity","notes","time","addressTypeDisplay","phoneNumber","payment","_ref","_showMealDetails$tota","setError","setSuccess","theme","orders","setOrders","useState","editingOrder","setEditingOrder","searchTerm","setSearchTerm","totals","setTotals","cash","daviplata","nequi","editForm","setEditForm","meals","total","status","deliveryPerson","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","isLoading","setIsLoading","showConfirmDeleteAll","setShowConfirmDeleteAll","confirmText","setConfirmText","showMealDetails","setShowMealDetails","editingDeliveryId","setEditingDeliveryId","deliveryPersons","setDeliveryPersons","sortBy","setSortBy","sortOrder","setSortOrder","proteins","setProteins","newProtein","setNewProtein","showProteinModal","setShowProteinModal","fetchOrders","useCallback","ordersColRef","collection","db","unsubscribe","onSnapshot","snapshot","ordersData","docs","doc","id","data","newTotals","newDeliveryPersons","forEach","order","paymentSummary","_order$meals","_order$meals$","_order$meals$$payment","_order$meals2","_order$meals2$","personName","paymentType","amount","error","message","fetchProteins","today","Date","toISOString","proteinsColRef","query","where","proteinsData","useEffect","unsubscribeOrders","unsubscribeProteins","handleEditOrder","_order$meals3","_meal$payment3","handleDeliveryChange","async","orderId","value","updateDoc","updatedAt","handleMealFormFieldChange","mealIndex","field","prevForm","updatedMeals","currentMeal","startsWith","addressField","item","parseInt","includes","sortedAndFilteredOrders","useMemo","index","originalIndex","_order$id","_order$meals4","searchLower","toLowerCase","idMatch","mealMatch","some","_meal$soup3","_meal$soupReplacement3","_meal$principle3","_meal$principleReplac3","_meal$protein3","_meal$drink3","_meal$time3","_meal$payment4","_meal$address9","_meal$address0","_meal$address1","_meal$address10","_meal$address11","_meal$sides2","_meal$additions2","val","sort","b","aValue","bValue","localeCompare","totalPages","Math","ceil","paginatedOrders","slice","totalProteinUnits","sum","handleOpenPreview","htmlContent","generatePreviewHtml","_totals$cash","_totals$daviplata","_totals$nequi","mealCounter","pedidosBody","flatMap","_order$total","toLocaleString","fill","deliveryBody","Object","entries","_data$cash","_data$daviplata","_data$nequi","_data$total","now","toLocaleDateString","toLocaleTimeString","hour","minute","hour12","row","newWindow","window","open","document","write","close","handleOpenExcelPreview","_order$payment","proteinsBody","_protein$quantity","isPenultimate","isLast","day","month","year","calculatedTotals","totalGeneral","thirdColumn","generateExcelPreviewHtml","handleSort","getSortIcon","_jsx","ArrowUpIcon","className","ArrowDownIcon","_jsxs","children","type","onChange","e","target","placeholder","onClick","PlusIcon","Menu","MenuButton","viewBox","d","MenuItems","MenuItem","_ref2","active","workbook","ExcelJS","worksheet","addWorksheet","applyThinBorder","cell","border","top","style","color","argb","left","bottom","right","addRow","proteinHeaderRow","lastRow","number","mergeCells","proteinHeader","getCell","font","bold","pattern","fgColor","alignment","horizontal","getRow","values","eachCell","colNumber","proteinData","extra","extraValue","getDate","padStart","getMonth","getFullYear","numFmt","pedidos","N","Dirección","Teléfono","Total","MétodoDePago","Domiciliario","columns","key","width","pedidosHeaderRow","headerRow","pedido","resumenRow","resumenCell","label","resumenDomiciliariosRow","deliveryHeader","i","buffer","xlsx","writeBuffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","console","alert","exportToExcel","_ref3","jsPDF","logoUrl","addImage","imgError","warn","setFontSize","dateStr","timeStr","paymentMethod","autoTable","startY","head","styles","fontSize","cellPadding","overflow","headStyles","fillColor","textColor","fontStyle","lineWidth","lineColor","alternateRowStyles","columnStyles","cellWidth","halign","tableLineColor","tableLineWidth","didDrawPage","pageNumber","finalY","lastAutoTable","deliveryY","save","exportToPDF","_ref4","_ref5","_ref6","exportToCSV","orderRows","createdAt","seconds","totalsRows","deliveryRows","csvContent","url","revokeObjectURL","_ref7","role","XMarkIcon","min","isNaN","Number","addDoc","date","disabled","_Fragment","colSpan","_order$meals5","_order$meals5$","_order$meals6","_order$meals6$","_order$meals6$$paymen","_order$meals7","_order$meals7$","_order$meals8","_order$meals8$","_order$meals8$$addres","_order$meals9","_order$meals9$","_order$meals9$$time","_order$meals0","_order$meals0$","displayNumber","addressDisplay","paymentDisplay","statusClass","title","InformationCircleIcon","onBlur","onKeyPress","autoFocus","prev","newStatus","handleStatusChange","PencilIcon","deleteDoc","handleDeleteOrder","TrashIcon","max","ChevronLeftIcon","ChevronRightIcon","keys","_ref8","_showMealDetails$meal","areIdentical","count","fieldsToCompare","getMealSignature","firstSignature","every","areMealsIdentical","_meal$soup4","_meal$soupReplacement4","_meal$principle4","_meal$principleReplac4","_meal$protein4","_meal$drink4","_meal$cutlery2","_meal$time4","_meal$address12","_meal$address13","_meal$address14","_meal$address15","_meal$address16","_meal$address17","_meal$address18","_meal$address19","_meal$address20","_meal$payment5","updatedMealsForDB","ordersRef","q","querySnapshot","getDocs","batch","writeBatch","delete","ref","commit"],"sourceRoot":""}