{"version":3,"file":"static/js/26.3d7c5f6f.chunk.js","mappings":"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","sources":["components/Waiter/WaiterDashboard.js"],"sourcesContent":["//src/components/Waiter/WaiterDashboard.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport MealList from '../MealList';\r\nimport BreakfastList from '../BreakfastList';\r\nimport OrderSummary from '../OrderSummary';\r\nimport BreakfastOrderSummary from '../BreakfastOrderSummary';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport SuccessMessage from '../SuccessMessage';\r\nimport OptionSelector from '../OptionSelector';\r\nimport { initializeMealData, handleMealChange, addMeal, duplicateMeal, removeMeal } from '../../utils/MealLogic';\r\nimport { calculateTotal, calculateMealPrice } from '../../utils/MealCalculations';\r\nimport { initializeBreakfastData, handleBreakfastChange, addBreakfast, duplicateBreakfast, removeBreakfast, calculateBreakfastPrice, calculateTotalBreakfastPrice } from '../../utils/BreakfastLogic';\r\n\r\nconst WaiterDashboard = () => {\r\n  const { user, role, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [meals, setMeals] = useState([initializeMealData({}, true)]);\r\n  const [breakfasts, setBreakfasts] = useState([initializeBreakfastData({ isWaitress: true })]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [incompleteMealIndex, setIncompleteMealIndex] = useState(null);\r\n  const [incompleteSlideIndex, setIncompleteSlideIndex] = useState(null);\r\n  const [incompleteBreakfastIndex, setIncompleteBreakfastIndex] = useState(null);\r\n  const [incompleteBreakfastSlideIndex, setIncompleteBreakfastSlideIndex] = useState(null);\r\n  const [soups, setSoups] = useState([]);\r\n  const [soupReplacements, setSoupReplacements] = useState([]);\r\n  const [principles, setPrinciples] = useState([]);\r\n  const [proteins, setProteins] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [additions, setAdditions] = useState([]);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [breakfastEggs, setBreakfastEggs] = useState([]);\r\n  const [breakfastBroths, setBreakfastBroths] = useState([]);\r\n  const [breakfastRiceBread, setBreakfastRiceBread] = useState([]);\r\n  const [breakfastDrinks, setBreakfastDrinks] = useState([]);\r\n  const [breakfastAdditions, setBreakfastAdditions] = useState([]);\r\n  const [breakfastTypes, setBreakfastTypes] = useState([]);\r\n  const [breakfastProteins, setBreakfastProteins] = useState([]);\r\n  const [breakfastTimes, setBreakfastTimes] = useState([]);\r\n  const [isOrderingDisabled, setIsOrderingDisabled] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('create');\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [showMenu, setShowMenu] = useState(null);\r\n  const [menuType, setMenuType] = useState('closed');\r\n  const [schedules, setSchedules] = useState({\r\n    breakfastStart: 420, // 07:00\r\n    breakfastEnd: 631,   // 10:31\r\n    lunchStart: 632,     // 10:32\r\n    lunchEnd: 950,       // 15:50\r\n  });\r\n  const [timeRemaining, setTimeRemaining] = useState('');\r\n\r\n  // Helper: normaliza el nombre del método de pago (acepta string u objeto {name/label/value})\r\n  const getMethodName = (opt) => {\r\n    if (!opt) return '';\r\n    if (typeof opt === 'string') return opt;\r\n    return (opt.name || opt.label || opt.value || '').toString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) {\r\n      setErrorMessage('Por favor, inicia sesión para continuar.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n    if (role !== 3) {\r\n      setErrorMessage('Acceso denegado. Solo las meseras pueden acceder a esta página.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n  }, [user, loading, role, navigate]);\r\n\r\n  useEffect(() => {\r\n    const collections = [\r\n      'soups', 'soupReplacements', 'principles', 'proteins', 'drinks', 'sides', 'additions', 'paymentMethods',\r\n      'breakfastEggs', 'breakfastBroths', 'breakfastRiceBread', 'breakfastDrinks', 'breakfastAdditions',\r\n      'breakfastTypes', 'breakfastProteins', 'breakfastTimes'\r\n    ];\r\n    const setters = [\r\n      setSoups, setSoupReplacements, setPrinciples, setProteins, setDrinks, setSides, setAdditions, setPaymentMethods,\r\n      setBreakfastEggs, setBreakfastBroths, setBreakfastRiceBread, setBreakfastDrinks, setBreakfastAdditions,\r\n      setBreakfastTypes, setBreakfastProteins, setBreakfastTimes\r\n    ];\r\n    const unsubscribers = collections.map((col, index) => onSnapshot(collection(db, col), (snapshot) => {\r\n      const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setters[index](data);\r\n      if (process.env.NODE_ENV === 'development') console.log(`Updated ${col}:`, data);\r\n      if (data.length === 0) {\r\n        setErrorMessage(\r\n          process.env.NODE_ENV !== 'production'\r\n            ? `La colección ${col} está vacía. Agrega datos desde /admin.`\r\n            : 'Algunas opciones no están disponibles. Intenta de nuevo más tarde.'\r\n        );\r\n      }\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error(`Error al escuchar ${col}:`, error);\r\n      setErrorMessage(\r\n        process.env.NODE_ENV === 'production'\r\n          ? 'No se pudieron cargar las opciones. Intenta de nuevo más tarde.'\r\n          : `Error al cargar datos de ${col}. Revisa la consola para más detalles.`\r\n      );\r\n    }));\r\n\r\n    const settingsUnsubscribe = onSnapshot(doc(db, 'settings', 'global'), (docSnapshot) => {\r\n      setIsOrderingDisabled(docSnapshot.exists() ? docSnapshot.data().isOrderingDisabled || false : false);\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al escuchar settings/global:', error);\r\n      setErrorMessage('Error al cargar configuración. Intenta de nuevo más tarde.');\r\n    });\r\n\r\n    const schedulesUnsubscribe = onSnapshot(doc(db, 'settings', 'schedules'), (docSnapshot) => {\r\n      if (docSnapshot.exists()) {\r\n        const data = docSnapshot.data();\r\n        setSchedules({\r\n          breakfastStart: data.breakfastStart || 420,\r\n          breakfastEnd: data.breakfastEnd || 631,\r\n          lunchStart: data.lunchStart || 632,\r\n          lunchEnd: data.lunchEnd || 950,\r\n        });\r\n      }\r\n    });\r\n\r\n    const breakfastOrdersUnsubscribe = onSnapshot(collection(db, 'breakfastOrders'), (snapshot) => {\r\n      const breakfastOrders = snapshot.docs\r\n        .map(doc => ({ id: doc.id, ...doc.data(), type: 'breakfast' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'breakfast'), ...breakfastOrders]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated breakfast orders:', breakfastOrders);\r\n    });\r\n\r\n    const ordersUnsubscribe = onSnapshot(collection(db, 'tableOrders'), (snapshot) => {\r\n      const orderData = snapshot.docs\r\n        .map(doc => ({ id: doc.id, ...doc.data(), type: 'lunch' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'lunch'), ...orderData]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated waiter orders:', orderData);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribers.forEach(unsubscribe => unsubscribe());\r\n      settingsUnsubscribe();\r\n      schedulesUnsubscribe();\r\n      breakfastOrdersUnsubscribe();\r\n      ordersUnsubscribe();\r\n    };\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const updateMenuTypeAndTime = () => {\r\n      const now = new Date();\r\n      const totalMinutes = now.getHours() * 60 + now.getMinutes();\r\n      let menu = 'closed';\r\n      let timeString = '';\r\n\r\n      const formatTime = (minutes) => {\r\n        const hours = Math.floor(minutes / 60);\r\n        const mins = minutes % 60;\r\n        const period = hours >= 12 ? 'PM' : 'AM';\r\n        const adjustedHours = hours % 12 || 12;\r\n        return `${adjustedHours}:${mins.toString().padStart(2, '0')} ${period}`;\r\n      };\r\n\r\n      if (totalMinutes >= schedules.breakfastStart && totalMinutes <= schedules.breakfastEnd) {\r\n        menu = 'breakfast';\r\n        timeString = formatTime(schedules.breakfastEnd);\r\n      } else if (totalMinutes >= schedules.lunchStart && totalMinutes <= schedules.lunchEnd) {\r\n        menu = 'lunch';\r\n        timeString = formatTime(schedules.lunchEnd);\r\n      }\r\n\r\n      setMenuType(menu);\r\n      setTimeRemaining(timeString);\r\n    };\r\n\r\n    updateMenuTypeAndTime();\r\n    const interval = setInterval(updateMenuTypeAndTime, 60000); // Update every minute\r\n    return () => clearInterval(interval);\r\n  }, [schedules]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      const timer = setTimeout(() => setErrorMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => setSuccessMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleSendOrder = async () => {\r\n    let incompleteMealIndex = null;\r\n    let incompleteSlideIndex = null;\r\n    let firstMissingField = '';\r\n    for (let i = 0; i < meals.length; i++) {\r\n      const meal = meals[i];\r\n      const isCompleteRice = Array.isArray(meal?.principle) && meal.principle.some(p => ['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(p.name));\r\n      const missing = [];\r\n      const slideMap = {\r\n        'Sopa o reemplazo de sopa': 0,\r\n        'Principio': 1,\r\n        'Proteína': 2,\r\n        'Bebida': 3,\r\n        'Acompañamientos': 4,\r\n        'Mesa': 5,\r\n        'Método de pago': 6,\r\n        'Tipo de pedido': 7,\r\n      };\r\n\r\n      if (!meal?.soup && !meal?.soupReplacement) missing.push('Sopa o reemplazo de sopa');\r\n      if (!meal?.principle && !meal?.principleReplacement) missing.push('Principio');\r\n      if (!isCompleteRice && !meal?.protein) missing.push('Proteína');\r\n      if (!meal?.drink) missing.push('Bebida');\r\n      if (!isCompleteRice && (!meal?.sides || meal.sides.length === 0)) missing.push('Acompañamientos');\r\n      if (!meal?.tableNumber) missing.push('Mesa');\r\n      if (!meal?.paymentMethod) missing.push('Método de pago');\r\n      if (!meal?.orderType) missing.push('Tipo de pedido');\r\n\r\n      if (missing.length > 0) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Meal ${i + 1} is incomplete. Missing fields:`, missing);\r\n          console.log(`Meal ${i + 1} data:`, meal);\r\n        }\r\n        incompleteMealIndex = i;\r\n        firstMissingField = missing[0];\r\n        incompleteSlideIndex = slideMap[firstMissingField] || 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (incompleteMealIndex !== null) {\r\n      setIncompleteMealIndex(incompleteMealIndex);\r\n      setIncompleteSlideIndex(incompleteSlideIndex);\r\n      setErrorMessage(`Por favor, completa el campo \"${firstMissingField}\" para el Almuerzo #${incompleteMealIndex + 1}.`);\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`meal-item-${incompleteMealIndex}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n          element.dispatchEvent(new CustomEvent('updateSlide', { detail: { slideIndex: incompleteSlideIndex } }));\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n    try {\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        meals: meals.map(meal => ({\r\n          soup: meal.soup ? { name: meal.soup.name } : null,\r\n          soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n          principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n          protein: meal.protein ? { name: meal.protein.name } : null,\r\n          drink: meal.drink ? { name: meal.drink.name } : null,\r\n          sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n          additions: meal.additions?.map(addition => ({\r\n            id: addition.id,\r\n            name: addition.name,\r\n            protein: addition.protein || '',\r\n            replacement: addition.replacement || '',\r\n            quantity: addition.quantity || 1,\r\n            price: addition.price || 0,\r\n          })) || [],\r\n          tableNumber: meal.tableNumber || '',\r\n          paymentMethod: meal.paymentMethod ? { name: meal.paymentMethod.name } : null,\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n        })),\r\n        total: calculateTotal(meals, 3),\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      console.log('[WaiterDashboard] Saving order with meals:', order.meals);\r\n      await addDoc(collection(db, 'tableOrders'), order);\r\n      setSuccessMessage('¡Orden de mesa guardada con éxito!');\r\n      setMeals([initializeMealData({}, true)]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de mesa:', error);\r\n      setErrorMessage('Error al guardar la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendBreakfastOrder = async () => {\r\n    let incompleteIndex = null;\r\n    let incompleteSlide = null;\r\n    let firstMissingField = '';\r\n\r\n    breakfasts.forEach((breakfast, index) => {\r\n      const typeData = Array.isArray(breakfastTypes) ? breakfastTypes.find(bt => bt.name === breakfast.type?.name) : null;\r\n      const steps = typeData ? typeData.steps || [] : ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'];\r\n      const missing = [];\r\n\r\n      if (!breakfast.type?.name) missing.push('type');\r\n      steps.forEach(step => {\r\n        if (step === 'tableNumber') {\r\n          if (!breakfast.tableNumber) missing.push('tableNumber');\r\n        } else if (step === 'paymentMethod') {\r\n          if (!breakfast.paymentMethod && !breakfast.payment) missing.push('paymentMethod');\r\n        } else if (step === 'orderType') {\r\n          if (!breakfast.orderType) missing.push('orderType');\r\n        } else if (!breakfast[step]) {\r\n          missing.push(step);\r\n        }\r\n      });\r\n\r\n      if (missing.length > 0 && incompleteIndex === null) {\r\n        incompleteIndex = index;\r\n        firstMissingField = missing[0];\r\n        const slideMap = {\r\n          type: 0,\r\n          broth: 1,\r\n          eggs: 2,\r\n          riceBread: 3,\r\n          drink: 4,\r\n          protein: 5,\r\n          tableNumber: 6,\r\n          paymentMethod: 7,\r\n          orderType: 8,\r\n        };\r\n        incompleteSlide = slideMap[firstMissingField] || 0;\r\n      }\r\n    });\r\n\r\n    if (incompleteIndex !== null) {\r\n      setIncompleteBreakfastIndex(incompleteIndex);\r\n      setIncompleteBreakfastSlideIndex(incompleteSlide);\r\n      setErrorMessage(\r\n        `Por favor, completa el campo \"${firstMissingField}\" para el Desayuno #${incompleteIndex + 1}.`\r\n      );\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`breakfast-item-${breakfasts[incompleteIndex].id}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Construir desglose de pagos por método para totales\r\n      const paymentsByMethodBreakfast = {};\r\n      breakfasts.forEach((b) => {\r\n        const method = getMethodName(b.paymentMethod || b.payment);\r\n        if (!method) return;\r\n        const amount = Number(calculateBreakfastPrice(b, 3) || 0);\r\n        paymentsByMethodBreakfast[method] = (paymentsByMethodBreakfast[method] || 0) + amount;\r\n      });\r\n      const paymentsBreakfast = Object.entries(paymentsByMethodBreakfast).map(([method, amount]) => ({\r\n        method,\r\n        amount: Math.floor(amount),\r\n      }));\r\n\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        breakfasts: breakfasts.map(breakfast => ({\r\n          type: breakfast.type ? { name: breakfast.type.name } : null,\r\n          broth: breakfast.broth ? { name: breakfast.broth.name } : null,\r\n          eggs: breakfast.eggs ? { name: breakfast.eggs.name } : null,\r\n          riceBread: breakfast.riceBread ? { name: breakfast.riceBread.name } : null,\r\n          drink: breakfast.drink ? { name: breakfast.drink.name } : null,\r\n          protein: breakfast.protein ? { name: breakfast.protein.name } : null,\r\n          additions: breakfast.additions?.map(addition => ({\r\n            name: addition.name,\r\n            quantity: addition.quantity || 1,\r\n          })) || [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          // Normaliza y guarda ambos por compatibilidad\r\n          paymentMethod: (breakfast.paymentMethod || breakfast.payment)\r\n            ? { name: getMethodName(breakfast.paymentMethod || breakfast.payment) }\r\n            : null,\r\n          payment: (breakfast.payment || breakfast.paymentMethod)\r\n            ? { name: getMethodName(breakfast.payment || breakfast.paymentMethod) }\r\n            : null,\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n        total: calculateTotalBreakfastPrice(breakfasts, 3, breakfastTypes),\r\n        payments: paymentsBreakfast,\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      if (process.env.NODE_ENV === 'development') console.log('[WaiterDashboard] Saving breakfast order:', order);\r\n      await addDoc(collection(db, 'breakfastOrders'), order);\r\n      setSuccessMessage('¡Orden de desayuno guardada con éxito!');\r\n      setBreakfasts([initializeBreakfastData({ isWaitress: true })]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de desayuno:', error);\r\n      setErrorMessage('Error al guardar la orden de desayuno. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus, orderType) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Attempting to update status for orderId:', orderId, 'to', newStatus, 'with role:', role, 'type:', orderType);\r\n      const collectionName = orderType === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, orderId);\r\n      await updateDoc(orderRef, {\r\n        status: newStatus,\r\n        updatedAt: new Date(),\r\n      });\r\n      setErrorMessage(null);\r\n      setSuccessMessage(`Estado de la orden ${orderId.slice(0, 8)} actualizado a ${newStatus}`);\r\n      setShowMenu(null);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`Estado de la orden ${orderId} actualizado a ${newStatus}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado:', error);\r\n      setErrorMessage(`Error al actualizar el estado: ${error.message}. Verifica tu rol y permisos.`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    if (order.type === 'lunch') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        meals: order.meals.map(meal => ({\r\n          soup: meal.soup || null,\r\n          soupReplacement: meal.soupReplacement ? {\r\n            ...meal.soupReplacement,\r\n            replacement: meal.soupReplacement.replacement || ''\r\n          } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({\r\n            ...p,\r\n            replacement: p.replacement || ''\r\n          })) : [],\r\n          principleReplacement: meal.principleReplacement || null,\r\n          protein: meal.protein || null,\r\n          drink: meal.drink || null,\r\n          sides: meal.sides || [],\r\n          additions: Array.isArray(meal.additions) ? meal.additions : [],\r\n          paymentMethod: meal.paymentMethod || null,\r\n          tableNumber: meal.tableNumber || '',\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n          showReplacementsState: {\r\n            soup: meal.soupReplacement?.name === 'Remplazo por Sopa' && !!meal.soupReplacement?.replacement,\r\n            principle: meal.principle?.some(opt => opt.name === 'Remplazo por Principio' && !!opt.replacement) || false,\r\n          },\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing lunch order:', initializedOrder);\r\n        console.log('[WaiterDashboard] Meals count:', initializedOrder.meals.length);\r\n        console.log('[WaiterDashboard] Soup replacement:', initializedOrder.meals[0]?.soupReplacement);\r\n        console.log('[WaiterDashboard] Principle replacement:', initializedOrder.meals[0]?.principle);\r\n        console.log('[WaiterDashboard] Additions for first meal:', initializedOrder.meals[0]?.additions);\r\n      }\r\n    } else if (order.type === 'breakfast') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        breakfasts: order.breakfasts.map(breakfast => ({\r\n          type: breakfast.type || null,\r\n          broth: breakfast.broth || null,\r\n          eggs: breakfast.eggs || null,\r\n          riceBread: breakfast.riceBread || null,\r\n          drink: breakfast.drink || null,\r\n          protein: breakfast.protein || null,\r\n          additions: Array.isArray(breakfast.additions) ? breakfast.additions : [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          paymentMethod: breakfast.paymentMethod || breakfast.payment || null,\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing breakfast order:', initializedOrder);\r\n        console.log('[WaiterDashboard] Breakfasts count:', initializedOrder.breakfasts.length);\r\n        console.log('[WaiterDashboard] Additions for first breakfast:', initializedOrder.breakfasts[0]?.additions);\r\n      }\r\n    }\r\n    setShowMenu(null);\r\n  };\r\n\r\n  const handleFormChange = (index, field, value) => {\r\n    if (editingOrder.type === 'lunch') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newMeals = [...editingOrder.meals];\r\n        if (field === 'principle' || field === 'sides') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : [] };\r\n        } else if (field === 'soup' || field === 'soupReplacement' || field === 'principleReplacement' || field === 'protein' || field === 'drink' || field === 'paymentMethod') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : null };\r\n          if (field === 'soupReplacement' && value?.name === 'Remplazo por Sopa') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: true };\r\n          } else if (field === 'soupReplacement' || field === 'soup') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: false };\r\n            if (field === 'soup') {\r\n              newMeals[index].soupReplacement = null;\r\n            }\r\n          }\r\n          if (field === 'principle' && value?.some(opt => opt.name === 'Remplazo por Principio')) {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: true };\r\n          } else if (field === 'principle') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: false };\r\n          }\r\n        } else if (field === 'additions') {\r\n          newMeals[index] = { ...newMeals[index], additions: value };\r\n        } else {\r\n          newMeals[index] = { ...newMeals[index], [field]: value };\r\n        }\r\n        const updatedTotal = calculateTotal(newMeals, 3);\r\n        setEditingOrder(prev => ({ ...prev, meals: newMeals, total: updatedTotal }));\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newBreakfasts = [...editingOrder.breakfasts];\r\n        if (field === 'additions') {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], additions: value };\r\n        } else {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], [field]: value ? value : null };\r\n        }\r\n        const updatedTotal = calculateTotalBreakfastPrice(newBreakfasts, 3, breakfastTypes);\r\n        setEditingOrder(prev => ({ ...prev, breakfasts: newBreakfasts, total: updatedTotal }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (editingOrder.type === 'lunch') {\r\n      for (const [index, meal] of editingOrder.meals.entries()) {\r\n        const unconfiguredAdditions = meal.additions?.filter(\r\n          add => add.requiresReplacement && (\r\n            (add.name === 'Proteína adicional' && !add.protein) ||\r\n            (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n          )\r\n        ) || [];\r\n        if (unconfiguredAdditions.length > 0) {\r\n          setErrorMessage(`Por favor, selecciona una opción para \"${unconfiguredAdditions[0].name}\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.tableNumber && meal.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited lunch order:', editingOrder);\r\n        const orderRef = doc(db, 'tableOrders', editingOrder.id);\r\n        await updateDoc(orderRef, {\r\n          meals: editingOrder.meals.map(meal => ({\r\n            soup: meal.soup ? { name: meal.soup.name } : null,\r\n            soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n            principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n            principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n            protein: meal.protein ? { name: meal.protein.name } : null,\r\n            drink: meal.drink ? { name: meal.drink.name } : null,\r\n            sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n            additions: meal.additions ? meal.additions.map(a => ({\r\n              id: a.id,\r\n              name: a.name,\r\n              protein: a.protein || '',\r\n              replacement: a.replacement || '',\r\n              quantity: a.quantity || 1,\r\n              price: a.price || 0,\r\n            })) : [],\r\n            tableNumber: meal.tableNumber || '',\r\n            paymentMethod: meal.paymentMethod ? { name: meal.paymentMethod.name } : null,\r\n            orderType: meal.orderType || '',\r\n            notes: meal.notes || '',\r\n          })),\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotal(editingOrder.meals, 3),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Orden ${editingOrder.id} actualizada con éxito`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      for (const [index, breakfast] of editingOrder.breakfasts.entries()) {\r\n        const typeData = breakfastTypes.find(bt => bt.name === breakfast.type?.name) || { steps: ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'] };\r\n        const steps = typeData.steps || [];\r\n        const missing = [];\r\n        if (!breakfast.type?.name) missing.push('type');\r\n        steps.forEach(step => {\r\n          if (step === 'tableNumber' && !breakfast.tableNumber) missing.push('tableNumber');\r\n          else if (step === 'paymentMethod' && !breakfast.paymentMethod && !breakfast.payment) missing.push('paymentMethod');\r\n          else if (step === 'orderType' && !breakfast.orderType) missing.push('orderType');\r\n          else if (!breakfast[step]) missing.push(step);\r\n        });\r\n        if (missing.length > 0) {\r\n          setErrorMessage(`Por favor, completa el campo \"${missing[0]}\" para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.tableNumber && breakfast.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited breakfast order:', editingOrder);\r\n        const orderRef = doc(db, 'breakfastOrders', editingOrder.id);\r\n        await updateDoc(orderRef, {\r\n          breakfasts: editingOrder.breakfasts.map(breakfast => ({\r\n            type: breakfast.type ? { name: breakfast.type.name } : null,\r\n            broth: breakfast.broth ? { name: breakfast.broth.name } : null,\r\n            eggs: breakfast.eggs ? { name: breakfast.eggs.name } : null,\r\n            riceBread: breakfast.riceBread ? { name: breakfast.riceBread.name } : null,\r\n            drink: breakfast.drink ? { name: breakfast.drink.name } : null,\r\n            protein: breakfast.protein ? { name: breakfast.protein.name } : null,\r\n            additions: breakfast.additions?.map(addition => ({\r\n              name: addition.name,\r\n              quantity: addition.quantity || 1,\r\n            })) || [],\r\n            tableNumber: breakfast.tableNumber || '',\r\n            paymentMethod: (breakfast.paymentMethod || breakfast.payment)\r\n              ? { name: getMethodName(breakfast.paymentMethod || breakfast.payment) }\r\n              : null,\r\n            orderType: breakfast.orderType || '',\r\n            notes: breakfast.notes || '',\r\n          })),\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Orden ${editingOrder.id} actualizada con éxito`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatValue = (value) => {\r\n    if (!value) return 'N/A';\r\n    if (typeof value === 'string') return value;\r\n    if (value.name) return value.name;\r\n    return 'N/A';\r\n  };\r\n\r\n  const formatArray = (arr) => {\r\n    if (!arr || !Array.isArray(arr)) return formatValue(arr);\r\n    if (arr.length === 0) return 'N/A';\r\n    return arr.map(item => formatValue(item)).filter(v => v !== 'N/A').join(', ');\r\n  };\r\n\r\n  const statusColors = {\r\n    'Pendiente': 'bg-gray-100 text-gray-800',\r\n    'Preparando': 'bg-blue-100 text-blue-800',\r\n    'Completada': 'bg-green-100 text-green-800',\r\n    'Cancelada': 'bg-red-100 text-red-800',\r\n  };\r\n\r\n  const normalizedAdditions = useMemo(() => additions.map(add => ({\r\n    ...add,\r\n    price: add.name === 'Mojarra' ? 8000 : add.price,\r\n    requiresReplacement: add.requiresReplacement || ['Proteína adicional', 'Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name),\r\n  })).filter(add =>\r\n    add.name !== 'Arroz con pollo' &&\r\n    add.name !== 'Arroz paisa' &&\r\n    add.name !== 'Arroz tres carnes'\r\n  ), [additions]);\r\n\r\n  const getReplacementsForAdditions = (meal) => {\r\n    const selectedAdditions = meal?.additions || [];\r\n    const unconfiguredAdditions = selectedAdditions.filter(\r\n      (add) => add.requiresReplacement && (add.name === 'Proteína adicional' ? !add.protein : !add.replacement)\r\n    );\r\n    if (unconfiguredAdditions.length === 0) return [];\r\n\r\n    const firstUnconfigured = unconfiguredAdditions[0];\r\n    if (firstUnconfigured.name === 'Sopa adicional') return soups.filter(soup => soup.name !== 'Solo bandeja' && soup.name !== 'Remplazo por Sopa');\r\n    if (firstUnconfigured.name === 'Principio adicional') return principles.filter(principle =>\r\n      principle.name !== 'Remplazo por Principio' &&\r\n      !['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(principle.name)\r\n    );\r\n    if (firstUnconfigured.name === 'Proteína adicional') return proteins.filter((p) => p.name !== 'Mojarra');\r\n    if (firstUnconfigured.name === 'Bebida adicional') return drinks.filter((d) => d.name !== 'Sin bebida');\r\n    return [];\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-200 flex flex-col\">\r\n      <header className=\"bg-gray-800 text-white p-4\">\r\n        <h1 className=\"text-lg font-bold\">Gestión de Órdenes de Mesas</h1>\r\n      </header>\r\n      <main className=\"p-4 flex-grow w-full max-w-4xl mx-auto\">\r\n        <div className=\"flex border-b border-gray-300 mb-4\">\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'create' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('create')}\r\n          >\r\n            Crear Orden\r\n          </button>\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'view' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('view')}\r\n          >\r\n            Ver Órdenes\r\n          </button>\r\n        </div>\r\n        {activeTab === 'create' ? (\r\n          isOrderingDisabled || menuType === 'closed' ? (\r\n            <div className=\"flex flex-col items-center justify-center text-center bg-red-50 text-red-700 p-4 rounded-lg shadow-md\">\r\n              <h2 className=\"text-xl font-bold\">🚫 Restaurante cerrado</h2>\r\n              <p className=\"text-sm\">Los pedidos estarán disponibles nuevamente mañana.</p>\r\n            </div>\r\n          ) : menuType === 'breakfast' ? (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Desayuno disponible hasta {timeRemaining}\r\n              </p>\r\n              <BreakfastList\r\n                breakfasts={breakfasts}\r\n                setBreakfasts={setBreakfasts}\r\n                eggs={breakfastEggs}\r\n                broths={breakfastBroths}\r\n                riceBread={breakfastRiceBread}\r\n                drinks={breakfastDrinks}\r\n                additions={breakfastAdditions}\r\n                breakfastTypes={breakfastTypes}\r\n                breakfastProteins={breakfastProteins}\r\n                times={breakfastTimes}\r\n                paymentMethods={paymentMethods}\r\n                onBreakfastChange={(id, field, value) => handleBreakfastChange(setBreakfasts, id, field, value)}\r\n                onRemoveBreakfast={(id) => removeBreakfast(setBreakfasts, setSuccessMessage, id, breakfasts)}\r\n                onAddBreakfast={() => addBreakfast(setBreakfasts, setSuccessMessage, breakfasts, initializeBreakfastData({ isWaitress: true }))}\r\n                onDuplicateBreakfast={(breakfast) => duplicateBreakfast(setBreakfasts, setSuccessMessage, breakfast, breakfasts)}\r\n                incompleteBreakfastIndex={incompleteBreakfastIndex}\r\n                incompleteSlideIndex={incompleteBreakfastSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n                userRole={role}\r\n                savedAddress={{}}\r\n                isTableOrder={true}\r\n              />\r\n              <BreakfastOrderSummary\r\n                items={breakfasts}\r\n                onSendOrder={handleSendBreakfastOrder}\r\n                user={{ role: 3 }}\r\n                breakfastTypes={breakfastTypes}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Almuerzo disponible hasta {timeRemaining}\r\n              </p>\r\n              <MealList\r\n                meals={meals}\r\n                soups={soups}\r\n                soupReplacements={soupReplacements}\r\n                principles={principles}\r\n                proteins={proteins}\r\n                drinks={drinks}\r\n                sides={sides}\r\n                additions={additions}\r\n                paymentMethods={paymentMethods}\r\n                times={[]}\r\n                isTableOrder={true}\r\n                userRole={role}\r\n                onMealChange={(id, field, value) => handleMealChange(setMeals, id, field, value)}\r\n                onRemoveMeal={(id) => removeMeal(setMeals, setSuccessMessage, id, meals)}\r\n                onAddMeal={() => addMeal(setMeals, setSuccessMessage, meals, initializeMealData({}, true))}\r\n                onDuplicateMeal={(meal) => duplicateMeal(setMeals, setSuccessMessage, meal, meals)}\r\n                incompleteMealIndex={incompleteMealIndex}\r\n                incompleteSlideIndex={incompleteSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n              />\r\n              <OrderSummary\r\n                meals={meals}\r\n                onSendOrder={handleSendOrder}\r\n                calculateTotal={() => calculateTotal(meals, 3)}\r\n                isTableOrder={true}\r\n                isWaiterView={false}\r\n                userRole={3}\r\n              />\r\n            </>\r\n          )\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {orders.length === 0 ? (\r\n              <p className=\"text-center text-gray-700\">No has registrado órdenes de mesas.</p>\r\n            ) : (\r\n              orders.map(order => (\r\n                <div key={order.id} className={`p-4 rounded-lg shadow-md ${statusColors[order.status] || 'bg-white'}`}>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-sm font-semibold text-gray-800\">\r\n                      {order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo'} - Mesa {formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber)} - #{order.id.slice(-4)}\r\n                    </h2>\r\n                    <div className=\"relative\">\r\n                      <button\r\n                        onClick={() => setShowMenu(showMenu === order.id ? null : order.id)}\r\n                        className=\"text-gray-600 hover:text-gray-800 focus:outline-none\"\r\n                      >\r\n                        ⋮\r\n                      </button>\r\n                      {showMenu === order.id && (\r\n                        <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Pendiente', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Pendiente'}\r\n                          >\r\n                            Pendiente\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Preparando', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Preparando'}\r\n                          >\r\n                            Preparando\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Completada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Completada'}\r\n                          >\r\n                            Completada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Cancelada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Cancelada'}\r\n                          >\r\n                            Cancelada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleEditOrder(order)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                          >\r\n                            Editar\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {order.type === 'breakfast' ? (\r\n                    <BreakfastOrderSummary\r\n                      items={order.breakfasts}\r\n                      user={{ role: 3 }}\r\n                      breakfastTypes={breakfastTypes}\r\n                      statusClass={statusColors[order.status] || ''} // Añadir clase de estado\r\n                    />\r\n                  ) : (\r\n                    <OrderSummary\r\n                      meals={order.meals}\r\n                      isTableOrder={true}\r\n                      calculateTotal={() => order.total}\r\n                      isWaiterView={true}\r\n                      statusClass={statusColors[order.status] || ''}\r\n                      userRole={3}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n        {editingOrder && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-4 rounded-lg shadow-lg max-w-md w-full mx-4 overflow-y-auto\" style={{ maxHeight: '80vh' }}>\r\n              <h2 className=\"text-lg font-bold mb-4\">Editar Orden #{editingOrder.id.slice(-4)}</h2>\r\n              {editingOrder.type === 'lunch' ? (\r\n                editingOrder.meals.map((meal, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Almuerzo #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Sopa o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Sopa\"\r\n                          emoji=\"🥣\"\r\n                          options={soups}\r\n                          selected={meal.soup || meal.soupReplacement}\r\n                          showReplacements={meal.showReplacementsState?.soup || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={meal.soupReplacement?.replacement ? { name: meal.soupReplacement.replacement } : null}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Sopa selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, value?.name === 'Remplazo por Sopa' ? 'soupReplacement' : 'soup', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Sopa replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              soupReplacement: {\r\n                                ...newMeals[index].soupReplacement,\r\n                                name: 'Remplazo por Sopa',\r\n                                replacement: replacement?.name || ''\r\n                              }\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Principio o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Principio\"\r\n                          emoji=\"🍚\"\r\n                          options={principles}\r\n                          selected={meal.principle || meal.principleReplacement}\r\n                          showReplacements={meal.showReplacementsState?.principle || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={\r\n                            meal.principle?.find(opt => opt.name === 'Remplazo por Principio')?.replacement\r\n                              ? { name: meal.principle.find(opt => opt.name === 'Remplazo por Principio').replacement }\r\n                              : null\r\n                          }\r\n                          multiple={true}\r\n                          showConfirmButton={true}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Principio selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, 'principle', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Principio replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              principle: newMeals[index].principle?.map(opt => ({\r\n                                ...opt,\r\n                                replacement: opt.name === 'Remplazo por Principio' ? replacement?.name || '' : opt.replacement\r\n                              }))\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                          onConfirm={({ selection }) => handleFormChange(index, 'principle', selection)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={proteins}\r\n                          selected={meal.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={drinks}\r\n                          selected={meal.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Acompañamientos</label>\r\n                        <OptionSelector\r\n                          title=\"Acompañamiento\"\r\n                          emoji=\"🥗\"\r\n                          options={sides}\r\n                          selected={meal.sides}\r\n                          multiple={true}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'sides', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={meal.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={meal.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={meal.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Almuerzo #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por almuerzo)\"\r\n                          emoji=\"➕\"\r\n                          options={normalizedAdditions}\r\n                          selected={meal?.additions || []}\r\n                          multiple={true}\r\n                          showReplacements={meal?.additions?.some(\r\n                            add => add.requiresReplacement && (\r\n                              (add.name === 'Proteína adicional' && !add.protein) ||\r\n                              (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n                            )\r\n                          )}\r\n                          replacements={getReplacementsForAdditions(meal)}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for meal ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              ...add,\r\n                              quantity: add.quantity || 1,\r\n                              price: add.price || 0,\r\n                              protein: add.name === 'Proteína adicional' ? (add.protein || '') : add.protein || '',\r\n                              replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) ? (add.replacement || '') : add.replacement || '',\r\n                            })));\r\n                          }}\r\n                          onImmediateReplacementSelect={({ id: additionId, replacement }) => {\r\n                            console.log(`[WaiterDashboard] Replacement selected for meal ${index + 1}, addition ${additionId}:`, replacement);\r\n                            const updatedAdditions = (meal?.additions || []).map((add) => {\r\n                              if (add.id === additionId) {\r\n                                return {\r\n                                  ...add,\r\n                                  protein: add.name === 'Proteína adicional' ? replacement?.name || add.protein : add.protein,\r\n                                  replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name)\r\n                                    ? replacement?.name || add.replacement\r\n                                    : add.replacement,\r\n                                };\r\n                              }\r\n                              return add;\r\n                            });\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for meal ${index + 1}:`, addition);\r\n                            const existingAddition = meal?.additions?.find(a => a.id === addition.id);\r\n                            const updatedAdditions = existingAddition\r\n                              ? meal.additions.map(a => a.id === addition.id ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(meal.additions || []), { ...addition, quantity: 1, price: addition.price || 0 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions\r\n                              .map(add => add.id === additionId ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions.map(add =>\r\n                              add.id === additionId ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {meal?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este almuerzo: $\r\n                            {meal.additions.reduce((sum, item) => sum + (item?.price || 0) * (item?.quantity || 1), 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                editingOrder.breakfasts.map((breakfast, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Desayuno #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Desayuno</label>\r\n                        <OptionSelector\r\n                          title=\"Tipo\"\r\n                          emoji=\"🥞\"\r\n                          options={breakfastTypes}\r\n                          selected={breakfast.type}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'type', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Caldo</label>\r\n                        <OptionSelector\r\n                          title=\"Caldo\"\r\n                          emoji=\"🥣\"\r\n                          options={breakfastBroths}\r\n                          selected={breakfast.broth}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'broth', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Huevos</label>\r\n                        <OptionSelector\r\n                          title=\"Huevos\"\r\n                          emoji=\"🥚\"\r\n                          options={breakfastEggs}\r\n                          selected={breakfast.eggs}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'eggs', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Arroz/Pan</label>\r\n                        <OptionSelector\r\n                          title=\"Arroz/Pan\"\r\n                          emoji=\"🍞\"\r\n                          options={breakfastRiceBread}\r\n                          selected={breakfast.riceBread}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'riceBread', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={breakfastDrinks}\r\n                          selected={breakfast.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={breakfastProteins}\r\n                          selected={breakfast.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={breakfast.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={breakfast.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={breakfast.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={breakfast.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Desayuno #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por desayuno)\"\r\n                          emoji=\"➕\"\r\n                          options={breakfastAdditions}\r\n                          selected={breakfast?.additions || []}\r\n                          multiple={true}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for breakfast ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              name: add.name,\r\n                              quantity: add.quantity || 1,\r\n                            })));\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for breakfast ${index + 1}:`, addition);\r\n                            const existingAddition = breakfast?.additions?.find(a => a.name === addition.name);\r\n                            const updatedAdditions = existingAddition\r\n                              ? breakfast.additions.map(a => a.name === addition.name ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(breakfast.additions || []), { name: addition.name, quantity: 1 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions\r\n                              .map(add => add.name === additionName ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions.map(add =>\r\n                              add.name === additionName ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {breakfast?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este desayuno: $\r\n                            {breakfast.additions.reduce((sum, item) => {\r\n                              const addition = breakfastAdditions.find(a => a.name === item.name);\r\n                              return sum + (addition?.price || 0) * (item?.quantity || 1);\r\n                            }, 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <div>\r\n                <label className=\"text-xs block mb-1 font-medium\">Total (editable)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={editingOrder.total !== undefined ? editingOrder.total : (editingOrder.type === 'lunch' ? calculateTotal(editingOrder.meals, 3) : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes))}\r\n                  onChange={(e) => handleFormChange(-1, 'total', e.target.value)}\r\n                  placeholder=\"Total\"\r\n                  className=\"w-full p-2 border rounded text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2 mt-4 sticky bottom-4 bg-white py-2\">\r\n                <button\r\n                  onClick={handleSaveEdit}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\r\n                >\r\n                  Guardar\r\n                </button>\r\n                <button\r\n                  onClick={() => setEditingOrder(null)}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      <div className=\"fixed top-16 right-4 z-[10002] space-y-2 w-80 max-w-xs\">\r\n        {isLoading && <LoadingIndicator />}\r\n        {errorMessage && (\r\n          <ErrorMessage message={errorMessage} onClose={() => setErrorMessage(null)} />\r\n        )}\r\n        {successMessage && (\r\n          <SuccessMessage message={successMessage} onClose={() => setSuccessMessage(null)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaiterDashboard;\r\n"],"names":["WaiterDashboard","user","role","loading","useAuth","navigate","useNavigate","meals","setMeals","useState","initializeMealData","breakfasts","setBreakfasts","initializeBreakfastData","isWaitress","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","incompleteMealIndex","setIncompleteMealIndex","incompleteSlideIndex","setIncompleteSlideIndex","incompleteBreakfastIndex","setIncompleteBreakfastIndex","incompleteBreakfastSlideIndex","setIncompleteBreakfastSlideIndex","soups","setSoups","soupReplacements","setSoupReplacements","principles","setPrinciples","proteins","setProteins","drinks","setDrinks","sides","setSides","additions","setAdditions","paymentMethods","setPaymentMethods","breakfastEggs","setBreakfastEggs","breakfastBroths","setBreakfastBroths","breakfastRiceBread","setBreakfastRiceBread","breakfastDrinks","setBreakfastDrinks","breakfastAdditions","setBreakfastAdditions","breakfastTypes","setBreakfastTypes","breakfastProteins","setBreakfastProteins","breakfastTimes","setBreakfastTimes","isOrderingDisabled","setIsOrderingDisabled","orders","setOrders","activeTab","setActiveTab","editingOrder","setEditingOrder","showMenu","setShowMenu","menuType","setMenuType","schedules","setSchedules","breakfastStart","breakfastEnd","lunchStart","lunchEnd","timeRemaining","setTimeRemaining","getMethodName","opt","name","label","value","toString","useEffect","setTimeout","setters","unsubscribers","map","col","index","onSnapshot","collection","db","snapshot","data","docs","doc","id","length","error","settingsUnsubscribe","docSnapshot","exists","schedulesUnsubscribe","breakfastOrdersUnsubscribe","breakfastOrders","type","filter","order","userId","uid","sort","a","b","Date","createdAt","prev","ordersUnsubscribe","orderData","forEach","unsubscribe","updateMenuTypeAndTime","now","totalMinutes","getHours","getMinutes","menu","timeString","formatTime","minutes","hours","Math","floor","period","padStart","interval","setInterval","clearInterval","timer","clearTimeout","handleStatusChange","async","orderId","newStatus","orderType","console","log","collectionName","orderRef","updateDoc","status","updatedAt","slice","message","handleFormChange","field","total","parseFloat","newMeals","showReplacementsState","soup","soupReplacement","some","principle","updatedTotal","calculateTotal","newBreakfasts","calculateTotalBreakfastPrice","formatValue","statusColors","normalizedAdditions","useMemo","add","price","requiresReplacement","includes","getReplacementsForAdditions","meal","unconfiguredAdditions","protein","replacement","firstUnconfigured","p","d","_jsx","className","children","_jsxs","onClick","_Fragment","BreakfastList","eggs","broths","riceBread","times","onBreakfastChange","handleBreakfastChange","onRemoveBreakfast","removeBreakfast","onAddBreakfast","addBreakfast","onDuplicateBreakfast","breakfast","duplicateBreakfast","userRole","savedAddress","isTableOrder","BreakfastOrderSummary","items","onSendOrder","incompleteIndex","incompleteSlide","firstMissingField","_breakfast$type2","typeData","Array","isArray","find","bt","_breakfast$type","steps","missing","push","step","tableNumber","paymentMethod","payment","broth","drink","element","document","getElementById","scrollIntoView","behavior","block","classList","remove","paymentsByMethodBreakfast","method","amount","Number","calculateBreakfastPrice","paymentsBreakfast","Object","entries","_ref","userEmail","email","_breakfast$additions","addition","quantity","notes","payments","process","addDoc","MealList","onMealChange","handleMealChange","onRemoveMeal","removeMeal","onAddMeal","addMeal","onDuplicateMeal","duplicateMeal","OrderSummary","i","isCompleteRice","slideMap","principleReplacement","dispatchEvent","CustomEvent","detail","slideIndex","_meal$additions","s","isWaiterView","_order$meals","_order$meals$","_order$breakfasts","_order$breakfasts$","disabled","initializedOrder","_meal$soupReplacement","_meal$soupReplacement2","_meal$principle","handleEditOrder","statusClass","style","maxHeight","_meal$showReplacement","_meal$soupReplacement3","_meal$showReplacement2","_meal$principle2","_meal$principle2$find","_meal$additions3","_meal$additions5","OptionSelector","title","emoji","options","selected","showReplacements","replacements","selectedReplacement","multiple","onImmediateSelect","onImmediateReplacementSelect","showConfirmButton","_newMeals$index$princ","onConfirm","_ref2","selection","onChange","e","target","placeholder","_ref3","additionId","updatedAdditions","onAdd","_meal$additions4","onRemove","onIncrease","reduce","sum","item","toLocaleString","_breakfast$additions4","_breakfast$additions3","additionName","undefined","_meal$additions2","_breakfast$type4","_breakfast$type3","_breakfast$additions2","LoadingIndicator","ErrorMessage","onClose","SuccessMessage"],"sourceRoot":""}