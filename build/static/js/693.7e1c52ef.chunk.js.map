{"version":3,"file":"static/js/693.7e1c52ef.chunk.js","mappings":"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","sources":["components/Admin/dashboardConstants.js","hooks/useDashboardData.js","components/Admin/DashboardCharts.js","components/Admin/Dashboard.js","utils/classNames.js"],"sourcesContent":["// src/constants/dashboardConstants.js\r\nexport const ORDER_STATUS = {\r\n  PENDING: 'pendiente',\r\n  DELIVERED: 'entregado',\r\n  CANCELLED: 'cancelado',\r\n};\r\n\r\nexport const ORDER_STATUS_DISPLAY = {\r\n  [ORDER_STATUS.PENDING]: 'Pendientes',\r\n  [ORDER_STATUS.DELIVERED]: 'Entregados',\r\n  [ORDER_STATUS.CANCELLED]: 'Cancelados',\r\n};\r\n\r\nexport const BAR_COLORS = {\r\n  Efectivo: '#22c55e',\r\n  Daviplata: '#ef4444',\r\n  Nequi: '#3b82f6',\r\n  Pedidos: '#14b8a6'\r\n};\r\n\r\nexport const PIE_COLORS = ['#fbbf24', '#4ade80', '#ef4444', '#60a5fa', '#a78bfa'];\r\n\r\nexport const INGRESOS_COLLECTION = 'Ingresos';\r\nexport const PEDIDOS_DIARIOS_GUARDADOS_COLLECTION = 'PedidosDiariosGuardados';","// src/hooks/useDashboardData.js\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { collection, onSnapshot, query, where, Timestamp, getDocs, addDoc, setDoc, doc, updateDoc, deleteDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { ORDER_STATUS, ORDER_STATUS_DISPLAY, PIE_COLORS, INGRESOS_COLLECTION, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION } from '../components/Admin/dashboardConstants';\r\n\r\nconst getDateRange = (rangeType, start, end) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  let startDate = new Date(today);\r\n  let endDate = new Date(today);\r\n  endDate.setHours(23, 59, 59, 999);\r\n\r\n  switch (rangeType) {\r\n    case '7_days':\r\n      startDate.setDate(today.getDate() - 6); // Start 6 days ago to include today (7 days total)\r\n      break;\r\n    case '30_days':\r\n      startDate = new Date(today.getFullYear(), today.getMonth(), 1); // First day of the month\r\n      endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Last day of the month\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'year':\r\n      startDate = new Date(today.getFullYear(), 0, 1); // First day of the year\r\n      endDate = new Date(today.getFullYear(), 11, 31); // Last day of the year\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'custom':\r\n      startDate = start ? new Date(start) : null;\r\n      if (startDate) startDate.setHours(0, 0, 0, 0);\r\n      endDate = end ? new Date(end) : null;\r\n      if (endDate) endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    default:\r\n      startDate.setDate(today.getDate() - 6); // Default to 7 days\r\n      break;\r\n  }\r\n  return { startDate, endDate };\r\n};\r\nexport const useDashboardData = (db, userId, isAuthReady, setError, setSuccess, salesFilterRange, salesCustomStartDate, salesCustomEndDate, ordersFilterRange, ordersCustomStartDate, ordersCustomEndDate, selectedMonth) => {\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [orders, setOrders] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [totals, setTotals] = useState({ cash: 0, daviplata: 0, nequi: 0 });\r\n  const [statusCounts, setStatusCounts] = useState({ Pending: 0, Delivered: 0, Cancelled: 0 });\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [ingresosData, setIngresosData] = useState([]);\r\n  const [pedidosDiariosGuardadosData, setPedidosDiariosGuardadosData] = useState([]);\r\n  const [dailySalesChartData, setDailySalesChartData] = useState([]);\r\n  const [dailyOrdersChartData, setDailyOrdersChartData] = useState([]);\r\n  const [statusPieChartData, setStatusPieChartData] = useState([]);\r\n\r\n  const initialLoadRefs = useRef({\r\n    orders: false,\r\n    users: false,\r\n    activity: false,\r\n    ingresos: false,\r\n    pedidosDiariosGuardados: false\r\n  });\r\n\r\n  const checkIfAllLoaded = () => {\r\n    if (\r\n      initialLoadRefs.current.orders &&\r\n      initialLoadRefs.current.users &&\r\n      initialLoadRefs.current.activity &&\r\n      initialLoadRefs.current.ingresos &&\r\n      initialLoadRefs.current.pedidosDiariosGuardados\r\n    ) {\r\n      setLoadingData(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) {\r\n      return;\r\n    }\r\n\r\n    setLoadingData(true);\r\n\r\n    const unsubscribes = [];\r\n\r\n    const ordersCollectionRef = collection(db, 'orders');\r\n    const unsubscribeOrders = onSnapshot(ordersCollectionRef, (snapshot) => {\r\n      const ordersData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setOrders(ordersData);\r\n\r\n      const newTotals = { cash: 0, daviplata: 0, nequi: 0 };\r\n      const newStatusCounts = { Pending: 0, Delivered: 0, Cancelled: 0 };\r\n\r\n      ordersData.forEach(order => {\r\n        const paymentSummary = order.paymentSummary || {};\r\n        newTotals.cash += paymentSummary['Efectivo'] || 0;\r\n        newTotals.daviplata += paymentSummary['Daviplata'] || 0;\r\n        newTotals.nequi += paymentSummary['Nequi'] || 0;\r\n\r\n        const orderStatus = order.status?.toLowerCase() || '';\r\n        if (orderStatus === ORDER_STATUS.PENDING) newStatusCounts.Pending += 1;\r\n        else if (orderStatus === ORDER_STATUS.DELIVERED) newStatusCounts.Delivered += 1;\r\n        else if (orderStatus === ORDER_STATUS.CANCELLED) newStatusCounts.Cancelled += 1;\r\n      });\r\n\r\n      setTotals(newTotals);\r\n      setStatusCounts(newStatusCounts);\r\n\r\n      const pieChartData = [\r\n        { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.PENDING], value: newStatusCounts.Pending, color: PIE_COLORS[0] },\r\n        { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.DELIVERED], value: newStatusCounts.Delivered, color: PIE_COLORS[1] },\r\n        { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.CANCELLED], value: newStatusCounts.Cancelled, color: PIE_COLORS[2] },\r\n      ];\r\n      setStatusPieChartData(pieChartData);\r\n\r\n      if (!initialLoadRefs.current.orders) {\r\n        initialLoadRefs.current.orders = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    }, (error) => {\r\n      setError(`Error al cargar pedidos: ${error.message}`);\r\n      if (!initialLoadRefs.current.orders) {\r\n        initialLoadRefs.current.orders = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    });\r\n    unsubscribes.push(unsubscribeOrders);\r\n\r\n    const usersCollectionRef = collection(db, 'users');\r\n    const unsubscribeUsers = onSnapshot(usersCollectionRef, (snapshot) => {\r\n      const usersData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setUsers(usersData);\r\n      if (!initialLoadRefs.current.users) {\r\n        initialLoadRefs.current.users = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    }, (error) => {\r\n      setError(`Error al cargar usuarios: ${error.message}`);\r\n      if (!initialLoadRefs.current.users) {\r\n        initialLoadRefs.current.users = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    });\r\n    unsubscribes.push(unsubscribeUsers);\r\n\r\n    const userActivityCollectionRef = collection(db, 'userActivity');\r\n    const unsubscribeActivity = onSnapshot(userActivityCollectionRef, (snapshot) => {\r\n      const activity = snapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        const timestampDate = data.timestamp instanceof Timestamp ? data.timestamp.toDate() : null;\r\n        return { id: doc.id, ...data, timestamp: timestampDate };\r\n      })\r\n        .sort((a, b) => (b.timestamp ? b.timestamp.getTime() : 0) - (a.timestamp ? a.timestamp.getTime() : 0));\r\n      setUserActivity(activity);\r\n      if (!initialLoadRefs.current.activity) {\r\n        initialLoadRefs.current.activity = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    }, (error) => {\r\n      setError(`Error al cargar actividad: ${error.message}`);\r\n      if (!initialLoadRefs.current.activity) {\r\n        initialLoadRefs.current.activity = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    });\r\n    unsubscribes.push(unsubscribeActivity);\r\n\r\n    const ingresosColRef = collection(db, INGRESOS_COLLECTION);\r\n    const unsubscribeIngresos = onSnapshot(ingresosColRef, (snapshot) => {\r\n      const ingresosData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setIngresosData(ingresosData);\r\n      if (!initialLoadRefs.current.ingresos) {\r\n        initialLoadRefs.current.ingresos = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    }, (error) => {\r\n      setError(`Error al cargar ingresos: ${error.message}`);\r\n      if (!initialLoadRefs.current.ingresos) {\r\n        initialLoadRefs.current.ingresos = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    });\r\n    unsubscribes.push(unsubscribeIngresos);\r\n\r\n    const pedidosDiariosGuardadosColRef = collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION);\r\n    const unsubscribePedidosDiariosGuardados = onSnapshot(pedidosDiariosGuardadosColRef, (snapshot) => {\r\n      const pedidosData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setPedidosDiariosGuardadosData(pedidosData);\r\n      if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n        initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    }, (error) => {\r\n      setError(`Error al cargar pedidos diarios guardados: ${error.message}`);\r\n      if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n        initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n        checkIfAllLoaded();\r\n      }\r\n    });\r\n    unsubscribes.push(unsubscribePedidosDiariosGuardados);\r\n\r\n    return () => {\r\n      unsubscribes.forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, [db, userId, isAuthReady, setError]);\r\n\r\nuseEffect(() => {\r\n  if (!isAuthReady) return;\r\n\r\n  const monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\r\n  const { startDate: salesStartDate, endDate: salesEndDate } = getDateRange(salesFilterRange, salesCustomStartDate, salesCustomEndDate);\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const todayISO = today.toISOString().split('T')[0];\r\n  let chartData;\r\n\r\n  if (salesFilterRange === 'year' && !selectedMonth) {\r\n    const monthlySales = {};\r\n    const currentYear = today.getFullYear();\r\n\r\n    for (let month = 0; month < 12; month++) {\r\n      const monthKey = `${currentYear}-${String(month + 1).padStart(2, '0')}`;\r\n      monthlySales[monthKey] = { Efectivo: 0, Daviplata: 0, Nequi: 0 };\r\n    }\r\n\r\n    ingresosData.forEach(summary => {\r\n      const date = new Date(summary.date);\r\n      if (date.getFullYear() === currentYear) {\r\n        const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n        monthlySales[monthKey].Efectivo += summary.cash || 0;\r\n        monthlySales[monthKey].Daviplata += summary.daviplata || 0;\r\n        monthlySales[monthKey].Nequi += summary.nequi || 0;\r\n      }\r\n    });\r\n\r\n    const currentMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n    let currentMonthRealtimeCash = 0;\r\n    let currentMonthRealtimeDaviplata = 0;\r\n    let currentMonthRealtimeNequi = 0;\r\n\r\n    orders.forEach(order => {\r\n      const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n      if (orderDate && orderDate >= salesStartDate.toISOString().split('T')[0] && orderDate <= salesEndDate.toISOString().split('T')[0]) {\r\n        const paymentSummary = order.paymentSummary || {};\r\n        currentMonthRealtimeCash += paymentSummary['Efectivo'] || 0;\r\n        currentMonthRealtimeDaviplata += paymentSummary['Daviplata'] || 0;\r\n        currentMonthRealtimeNequi += paymentSummary['Nequi'] || 0;\r\n      }\r\n    });\r\n\r\n    monthlySales[currentMonthKey] = {\r\n      Efectivo: monthlySales[currentMonthKey].Efectivo + currentMonthRealtimeCash,\r\n      Daviplata: monthlySales[currentMonthKey].Daviplata + currentMonthRealtimeDaviplata,\r\n      Nequi: monthlySales[currentMonthKey].Nequi + currentMonthRealtimeNequi,\r\n    };\r\n\r\n    chartData = Object.keys(monthlySales).map(monthKey => ({\r\n      name: monthNames[parseInt(monthKey.split('-')[1]) - 1],\r\n      monthKey: monthKey,\r\n      Efectivo: monthlySales[monthKey].Efectivo,\r\n      Daviplata: monthlySales[monthKey].Daviplata,\r\n      Nequi: monthlySales[monthKey].Nequi,\r\n    }));\r\n  } else {\r\n    const filteredDailySales = {};\r\n\r\n    // Agregar datos históricos de ingresosData según el rango o mes seleccionado\r\n    ingresosData.forEach(summary => {\r\n      const summaryDate = new Date(summary.date).toISOString().split('T')[0];\r\n      if (summaryDate >= salesStartDate.toISOString().split('T')[0] && summaryDate <= salesEndDate.toISOString().split('T')[0]) {\r\n        if (salesFilterRange === 'year' && selectedMonth) {\r\n          const monthKey = `${new Date(summary.date).getFullYear()}-${String(new Date(summary.date).getMonth() + 1).padStart(2, '0')}`;\r\n          if (monthKey === selectedMonth) {\r\n            filteredDailySales[summaryDate] = {\r\n              Efectivo: (filteredDailySales[summaryDate]?.Efectivo || 0) + (summary.cash || 0),\r\n              Daviplata: (filteredDailySales[summaryDate]?.Daviplata || 0) + (summary.daviplata || 0),\r\n              Nequi: (filteredDailySales[summaryDate]?.Nequi || 0) + (summary.nequi || 0)\r\n            };\r\n          }\r\n        } else {\r\n          filteredDailySales[summaryDate] = {\r\n            Efectivo: (filteredDailySales[summaryDate]?.Efectivo || 0) + (summary.cash || 0),\r\n            Daviplata: (filteredDailySales[summaryDate]?.Daviplata || 0) + (summary.daviplata || 0),\r\n            Nequi: (filteredDailySales[summaryDate]?.Nequi || 0) + (summary.nequi || 0)\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n    // Agregar datos en tiempo real solo si el día actual está dentro del rango o mes seleccionado\r\n    if (today >= salesStartDate && today <= salesEndDate) {\r\n      let currentDayRealtimeCash = 0;\r\n      let currentDayRealtimeDaviplata = 0;\r\n      let currentDayRealtimeNequi = 0;\r\n\r\n      orders.forEach(order => {\r\n        const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (orderDate && orderDate >= salesStartDate.toISOString().split('T')[0] && orderDate <= salesEndDate.toISOString().split('T')[0]) {\r\n          const paymentSummary = order.paymentSummary || {};\r\n          currentDayRealtimeCash += paymentSummary['Efectivo'] || 0;\r\n          currentDayRealtimeDaviplata += paymentSummary['Daviplata'] || 0;\r\n          currentDayRealtimeNequi += paymentSummary['Nequi'] || 0;\r\n        }\r\n      });\r\n\r\n      if (salesFilterRange === 'year' && selectedMonth) {\r\n        const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n        if (currentMonth === selectedMonth) {\r\n          filteredDailySales[todayISO] = {\r\n            Efectivo: (filteredDailySales[todayISO]?.Efectivo || 0) + currentDayRealtimeCash,\r\n            Daviplata: (filteredDailySales[todayISO]?.Daviplata || 0) + currentDayRealtimeDaviplata,\r\n            Nequi: (filteredDailySales[todayISO]?.Nequi || 0) + currentDayRealtimeNequi\r\n          };\r\n        }\r\n      } else {\r\n        filteredDailySales[todayISO] = {\r\n          Efectivo: (filteredDailySales[todayISO]?.Efectivo || 0) + currentDayRealtimeCash,\r\n          Daviplata: (filteredDailySales[todayISO]?.Daviplata || 0) + currentDayRealtimeDaviplata,\r\n          Nequi: (filteredDailySales[todayISO]?.Nequi || 0) + currentDayRealtimeNequi\r\n        };\r\n      }\r\n    }\r\n\r\n    const sortedDates = Object.keys(filteredDailySales).sort((a, b) => new Date(a) - new Date(b));\r\n    chartData = sortedDates.map(date => ({\r\n      name: date,\r\n      Efectivo: filteredDailySales[date].Efectivo,\r\n      Daviplata: filteredDailySales[date].Daviplata,\r\n      Nequi: filteredDailySales[date].Nequi\r\n    }));\r\n  }\r\n\r\n  setDailySalesChartData(chartData);\r\n\r\n  const { startDate: ordersStartDate, endDate: ordersEndDate } = getDateRange(ordersFilterRange, ordersCustomStartDate, ordersCustomEndDate);\r\n  const filteredDailyOrders = {};\r\n\r\n  pedidosDiariosGuardadosData.forEach(summary => {\r\n    const summaryDate = new Date(summary.date);\r\n    if (summaryDate >= ordersStartDate && summaryDate <= ordersEndDate) {\r\n      filteredDailyOrders[summary.date] = summary.count || 0;\r\n    }\r\n  });\r\n\r\n  if (today >= ordersStartDate && today <= ordersEndDate) {\r\n    let currentDayRealtimeOrdersCount = 0;\r\n    orders.forEach(order => {\r\n      const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n      if (orderDate === todayISO) {\r\n        currentDayRealtimeOrdersCount++;\r\n      }\r\n    });\r\n    filteredDailyOrders[todayISO] = currentDayRealtimeOrdersCount;\r\n  }\r\n\r\n  const sortedOrderDates = Object.keys(filteredDailyOrders).sort((a, b) => new Date(a) - new Date(b));\r\n  const finalDailyOrdersChartData = sortedOrderDates.map(date => ({ name: date, Pedidos: filteredDailyOrders[date] }));\r\n  setDailyOrdersChartData(finalDailyOrdersChartData);\r\n}, [orders, ingresosData, pedidosDiariosGuardadosData, salesFilterRange, salesCustomStartDate, salesCustomEndDate, ordersFilterRange, ordersCustomStartDate, ordersCustomEndDate, isAuthReady, selectedMonth]);\r\n\r\n  const handleSaveDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      let currentDayCash = 0;\r\n      let currentDayDaviplata = 0;\r\n      let currentDayNequi = 0;\r\n\r\n      orders.forEach(order => {\r\n        const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (orderDate === today) {\r\n          const paymentSummary = order.paymentSummary;\r\n          if (paymentSummary) {\r\n            currentDayCash += paymentSummary['Efectivo'] || 0;\r\n            currentDayDaviplata += paymentSummary['Daviplata'] || 0;\r\n            currentDayNequi += paymentSummary['Nequi'] || 0;\r\n          } else {\r\n            const paymentType = order.payment?.toLowerCase() || order.meals?.[0]?.payment?.name?.toLowerCase();\r\n            const amount = order.total || 0;\r\n            if (paymentType === 'efectivo') currentDayCash += amount;\r\n            else if (paymentType === 'daviplata') currentDayDaviplata += amount;\r\n            else if (paymentType === 'nequi') currentDayNequi += amount;\r\n          }\r\n        }\r\n      });\r\n\r\n      const currentDayTotalSales = currentDayCash + currentDayDaviplata + currentDayNequi;\r\n\r\n      const q = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (existingSummarySnapshot.empty) {\r\n        await addDoc(collection(db, INGRESOS_COLLECTION), {\r\n          date: today,\r\n          cash: currentDayCash,\r\n          daviplata: currentDayDaviplata,\r\n          nequi: currentDayNequi,\r\n          totalSales: currentDayTotalSales,\r\n          createdAt: serverTimestamp(),\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Resumen de ingresos para ${today} guardado correctamente.`);\r\n      } else {\r\n        const docToUpdate = existingSummarySnapshot.docs[0];\r\n        await updateDoc(doc(db, INGRESOS_COLLECTION, docToUpdate.id), {\r\n          cash: currentDayCash,\r\n          daviplata: currentDayDaviplata,\r\n          nequi: currentDayNequi,\r\n          totalSales: currentDayTotalSales,\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Resumen de ingresos para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al guardar/actualizar resumen de ingresos: ${error.message}`);\r\n      console.error(\"Error al guardar ingresos diarios:\", error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, setSuccess, setError]);\r\n\r\n  const handleDeleteDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, INGRESOS_COLLECTION, docToDelete.id));\r\n        setSuccess(`Resumen de ingresos para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess(`No se encontró un resumen de ingresos para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al eliminar resumen de ingresos: ${error.message}`);\r\n      console.error(\"Error al eliminar ingresos diarios:\", error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  const handleSaveDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      let currentDayOrdersCount = 0;\r\n\r\n      orders.forEach(order => {\r\n        const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (orderDate === today) {\r\n          currentDayOrdersCount++;\r\n        }\r\n      });\r\n\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (existingSummarySnapshot.empty) {\r\n        await addDoc(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), {\r\n          date: today,\r\n          count: currentDayOrdersCount,\r\n          createdAt: serverTimestamp(),\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Conteo de pedidos diarios para ${today} guardado correctamente.`);\r\n      } else {\r\n        const docToUpdate = existingSummarySnapshot.docs[0];\r\n        await updateDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToUpdate.id), {\r\n          count: currentDayOrdersCount,\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Conteo de pedidos diarios para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al guardar/actualizar conteo de pedidos diarios: ${error.message}`);\r\n      console.error(\"Error al guardar conteo de pedidos diarios:\", error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, setSuccess, setError]);\r\n\r\n  const handleDeleteDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToDelete.id));\r\n        setSuccess(`Conteo de pedidos diarios para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess(`No se encontró un conteo de pedidos diarios para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al eliminar conteo de pedidos diarios: ${error.message}`);\r\n      console.error(\"Error al eliminar conteo de pedidos diarios:\", error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  return {\r\n    loadingData,\r\n    orders,\r\n    users,\r\n    totals,\r\n    statusCounts,\r\n    userActivity,\r\n    dailySalesChartData,\r\n    dailyOrdersChartData,\r\n    statusPieChartData,\r\n    handleSaveDailyIngresos,\r\n    handleDeleteDailyIngresos,\r\n    handleSaveDailyOrders,\r\n    handleDeleteDailyOrders,\r\n  };\r\n};","// src/components/Admin/DashboardCharts.jsx\r\nimport React, { Fragment, useState, useEffect, useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  PieChart, Pie, Cell, Label\r\n} from 'recharts';\r\nimport { DollarSign, MoreVertical, Save, Trash2 } from 'lucide-react';\r\nimport { Popover, PopoverButton, PopoverPanel, Transition } from '@headlessui/react';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { BAR_COLORS, PIE_COLORS } from '../Admin/dashboardConstants';\r\n\r\nconst scrollbarStyles = ``;\r\n\r\nconst SkeletonLoader = ({ type, theme, isMobile }) => {\r\n  if (type === 'bar') {\r\n    const numBars = isMobile ? 5 : 7;\r\n    return (\r\n      <div className=\"flex h-full items-end justify-around p-4 animate-pulse\">\r\n        {Array.from({ length: numBars }).map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className={classNames(\r\n              'rounded-t-md',\r\n              theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200',\r\n              'mx-1'\r\n            )}\r\n            style={{ width: `${100 / numBars - 5}%`, height: `${Math.random() * 70 + 30}%` }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else if (type === 'pie') {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full animate-pulse\">\r\n        <div className={classNames(\r\n          isMobile ? 'w-32 h-32' : 'w-40 h-40',\r\n          'rounded-full',\r\n          theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200'\r\n        )}></div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DashboardCharts = React.memo(({\r\n  dailySalesChartData,\r\n  dailyOrdersChartData,\r\n  statusPieChartData,\r\n  theme = 'dark',\r\n  chartTextColor = '#ffffff',\r\n  salesFilterRange,\r\n  setSalesFilterRange = () => {},\r\n  salesCustomStartDate,\r\n  setSalesCustomStartDate = () => {},\r\n  salesCustomEndDate,\r\n  setSalesCustomEndDate = () => {},\r\n  ordersFilterRange,\r\n  setOrdersFilterRange = () => {},\r\n  ordersCustomStartDate,\r\n  setOrdersCustomStartDate = () => {},\r\n  ordersCustomEndDate,\r\n  setOrdersCustomEndDate = () => {},\r\n  handleSaveDailyIngresos = () => {},\r\n  handleDeleteDailyIngresos = () => {},\r\n  handleSaveDailyOrders = () => {},\r\n  handleDeleteDailyOrders = () => {},\r\n  loading,\r\n  selectedMonth,\r\n  setSelectedMonth = () => {}\r\n}) => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth < 640);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const totalOrders = useMemo(() => statusPieChartData.reduce((sum, entry) => sum + entry.value, 0), [statusPieChartData]);\r\n\r\n  const chartVariants = {\r\n    hidden: { opacity: 0, scale: 0.98 },\r\n    visible: { opacity: 1, scale: 1, transition: { duration: 0.4, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.98, transition: { duration: 0.3, ease: \"easeIn\" } },\r\n  };\r\n\r\n  const pieChartVariants = {\r\n    hidden: { opacity: 0, scale: 0.98 },\r\n    visible: { opacity: 1, scale: 1, transition: { duration: 0.6, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.98, transition: { duration: 0.5, ease: \"easeIn\" } },\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-12 mb-8 px-4 sm:px-6 lg:px-8 pb-12\">\r\n      <style dangerouslySetInnerHTML={{ __html: scrollbarStyles }} />\r\n      <motion.div\r\n        className={classNames(\r\n          theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n          isMobile ? 'p-4' : 'p-6',\r\n          'rounded-2xl shadow-xl border',\r\n          theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n          'overflow-x-auto overflow-y-hidden relative min-h-[450px] flex flex-col'\r\n        )}\r\n        variants={chartVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n              <DollarSign className={isMobile ? \"w-4 h-4 mr-2 text-green-400\" : \"w-5 h-5 mr-2 text-green-400\"} />\r\n              Ingresos Diarios\r\n            </h3>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                <MoreVertical className={isMobile ? \"w-4 h-4 text-gray-400\" : \"w-5 h-5 text-gray-400\"} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-10 mt-2\",\r\n                  isMobile ? \"w-36\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"right-0\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyIngresos}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm flex items-center\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={isMobile ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\"} />\r\n                      {loading ? 'Guardando...' : 'Guardar Ventas del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyIngresos()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm flex items-center mt-1\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={isMobile ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\"} />\r\n                      Eliminar Ventas del Día\r\n                    </button>\r\n                    <div className=\"border-t border-gray-600 my-1\"></div>\r\n                    <button\r\n                      onClick={() => { setSalesFilterRange('7_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setSalesFilterRange('30_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setSalesFilterRange('year'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className=\"border-t border-gray-600 my-1\"></div>\r\n                    <div className=\"px-4 py-2 text-sm font-medium text-gray-400\">Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className=\"block text-xs font-medium text-gray-400\">Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={salesCustomStartDate ? salesCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setSalesCustomStartDate(new Date(e.target.value)); setSalesFilterRange('custom'); setSelectedMonth(null); }}\r\n                        className={classNames(\r\n                          \"mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className=\"block text-xs font-medium text-gray-400\">Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={salesCustomEndDate ? salesCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setSalesCustomEndDate(new Date(e.target.value)); setSalesFilterRange('custom'); setSelectedMonth(null); }}\r\n                        className={classNames(\r\n                          \"mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </div>\r\n          {salesFilterRange === 'year' && selectedMonth && (\r\n            <button\r\n              onClick={() => setSelectedMonth(null)}\r\n              className=\"mb-4 text-blue-500 hover:underline text-sm self-start\"\r\n            >\r\n              Volver al resumen anual\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className={classNames(\"w-full\", isMobile ? \"h-[250px] min-w-[300px]\" : \"h-[300px] min-w-[700px]\")}>\r\n<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n  <BarChart\r\n    data={dailySalesChartData}\r\n    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n    barCategoryGap={isMobile ? \"0%\" : \"40%\"}\r\n    barGap={1}\r\n  >\r\n    <CartesianGrid\r\n      strokeDasharray={isMobile ? \"2 2\" : \"3 3\"}\r\n      stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n      fill=\"none\"\r\n      opacity={isMobile ? 0.5 : 1}\r\n    />\r\n    <XAxis\r\n      dataKey=\"name\"\r\n      stroke={chartTextColor}\r\n      tick={{ fill: chartTextColor, fontSize: isMobile ? 7 : 10 }}\r\n      angle={-45}\r\n      textAnchor=\"end\"\r\n      interval={0}\r\n      height={50}\r\n    />\r\n    <YAxis\r\n      stroke={chartTextColor}\r\n      tick={{ fill: chartTextColor, fontSize: isMobile ? 7 : 10 }}\r\n      tickFormatter={(value) => `$${value.toLocaleString()}`}\r\n      width={60}\r\n    />\r\n    <Tooltip\r\n      contentStyle={{\r\n        backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n        border: 'none',\r\n        borderRadius: '12px',\r\n        fontSize: '12px',\r\n        padding: '8px 12px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n        backdropFilter: 'blur(5px)',\r\n        touchAction: 'manipulation'\r\n      }}\r\n      labelStyle={{ color: chartTextColor, fontWeight: 'bold', marginBottom: '4px' }}\r\n      itemStyle={{ color: chartTextColor }}\r\n      cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)' }}\r\n      content={({ active, payload, label }) => {\r\n        if (active && payload && payload.length) {\r\n          const total = payload.reduce((sum, entry) => sum + entry.value, 0);\r\n          return (\r\n            <div className=\"custom-tooltip\" style={{\r\n              backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n              border: 'none',\r\n              borderRadius: '12px',\r\n              padding: '8px 12px',\r\n              fontSize: '12px',\r\n              boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n              backdropFilter: 'blur(5px)'\r\n            }}>\r\n              <p style={{ color: chartTextColor, fontWeight: 'bold', marginBottom: '4px' }}>{label}</p>\r\n              {payload.map((entry, index) => (\r\n                <p key={index} style={{ color: chartTextColor }}>\r\n                  {entry.name}: ${entry.value.toLocaleString()}\r\n                </p>\r\n              ))}\r\n              <p style={{ color: chartTextColor, fontWeight: 'bold', marginTop: '4px' }}>\r\n                Total: ${total.toLocaleString()}\r\n              </p>\r\n            </div>\r\n          );\r\n        }\r\n        return null;\r\n      }}\r\n    />\r\n    <Legend\r\n      wrapperStyle={{ color: chartTextColor, fontSize: isMobile ? 8 : 12, paddingTop: '10px', paddingBottom: '25px' }}\r\n      align=\"center\"\r\n      verticalAlign=\"top\"\r\n    />\r\n    <Bar\r\n      dataKey=\"Efectivo\"\r\n      fill={BAR_COLORS.Efectivo}\r\n      stroke={BAR_COLORS.Efectivo}\r\n      radius={[6, 6, 0, 0]}\r\n      maxBarSize={isMobile ? 10 : 20}\r\n      onClick={(data) => {\r\n        if (salesFilterRange === 'year' && data.monthKey) {\r\n          setSelectedMonth(data.monthKey);\r\n        }\r\n      }}\r\n    />\r\n    <Bar\r\n      dataKey=\"Daviplata\"\r\n      fill={BAR_COLORS.Daviplata}\r\n      stroke={BAR_COLORS.Daviplata}\r\n      radius={[6, 6, 0, 0]}\r\n      maxBarSize={isMobile ? 10 : 20}\r\n      onClick={(data) => {\r\n        if (salesFilterRange === 'year' && data.monthKey) {\r\n          setSelectedMonth(data.monthKey);\r\n        }\r\n      }}\r\n    />\r\n    <Bar\r\n      dataKey=\"Nequi\"\r\n      fill={BAR_COLORS.Nequi}\r\n      stroke={BAR_COLORS.Nequi}\r\n      radius={[6, 6, 0, 0]}\r\n      maxBarSize={isMobile ? 10 : 20}\r\n      onClick={(data) => {\r\n        if (salesFilterRange === 'year' && data.monthKey) {\r\n          setSelectedMonth(data.monthKey);\r\n        }\r\n      }}\r\n    />\r\n  </BarChart>\r\n</ResponsiveContainer>\r\n        </div>\r\n      </motion.div>\r\n      <div className=\"flex flex-col lg:flex-row gap-12\">\r\n        <motion.div\r\n          className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobile ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] overflow-x-auto overflow-y-hidden',\r\n            'lg:flex-1'\r\n          )}\r\n          variants={chartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center justify-between\">\r\n            <span className=\"flex items-center\">\r\n              Pedidos Diarios\r\n            </span>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                <MoreVertical className={isMobile ? \"w-4 h-4 text-gray-400\" : \"w-5 h-5 text-gray-400\"} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-10 mt-2\",\r\n                  isMobile ? \"w-36\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"right-0\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyOrders}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm flex items-center\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={isMobile ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\"} />\r\n                      {loading ? 'Guardando...' : 'Guardar Pedidos del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyOrders()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm flex items-center mt-1\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={isMobile ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\"} />\r\n                      Eliminar Pedidos del Día\r\n                    </button>\r\n                    <div className=\"border-t border-gray-600 my-1\"></div>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('7_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('30_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('year'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className=\"border-t border-gray-600 my-1\"></div>\r\n                    <div className=\"px-4 py-2 text-sm font-medium text-gray-400\">Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className=\"block text-xs font-medium text-gray-400\">Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomStartDate ? ordersCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomStartDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className=\"block text-xs font-medium text-gray-400\">Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomEndDate ? ordersCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomEndDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </h3>\r\n          <div className={classNames(\"w-full\", isMobile ? \"h-[250px] min-w-[300px]\" : \"h-[300px] min-w-[400px]\")}>\r\n<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n  <BarChart\r\n    data={dailyOrdersChartData}\r\n    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n  >\r\n    <CartesianGrid\r\n      strokeDasharray={isMobile ? \"2 2\" : \"3 3\"}\r\n      stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n      fill=\"none\"\r\n      opacity={isMobile ? 0.5 : 1}\r\n    />\r\n    <XAxis dataKey=\"name\" stroke={chartTextColor} tick={{ fill: chartTextColor, fontSize: isMobile ? 7 : 10 }} />\r\n    <YAxis stroke={chartTextColor} tick={{ fill: chartTextColor, fontSize: isMobile ? 7 : 10 }} />\r\n    <Tooltip\r\n      contentStyle={{\r\n        backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n        border: 'none',\r\n        borderRadius: '12px',\r\n        fontSize: '12px',\r\n        padding: '8px 12px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n        backdropFilter: 'blur(5px)',\r\n        touchAction: 'manipulation'\r\n      }}\r\n      labelStyle={{ color: chartTextColor, fontWeight: 'bold', marginBottom: '4px' }}\r\n      itemStyle={{ color: chartTextColor }}\r\n      cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)' }}\r\n    />\r\n    <Legend wrapperStyle={{ color: chartTextColor, paddingTop: '10px', fontSize: isMobile ? 8 : 12 }} />\r\n    <Bar\r\n      dataKey=\"Pedidos\"\r\n      fill={BAR_COLORS.Pedidos}\r\n      stroke={BAR_COLORS.Pedidos}\r\n      radius={[10, 10, 0, 0]}\r\n      opacity={1}\r\n      isAnimationActive={false}\r\n      maxBarSize={isMobile ? 12 : 25}\r\n    />\r\n  </BarChart>\r\n</ResponsiveContainer>\r\n          </div>\r\n        </motion.div>\r\n        <motion.div\r\n          className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobile ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] overflow-x-auto overflow-y-hidden',\r\n            'lg:flex-1'\r\n          )}\r\n          variants={pieChartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100\">Estado de Pedidos</h3>\r\n          <div className={classNames(\"w-full flex justify-center items-center\", isMobile ? \"h-[250px] min-w-[250px]\" : \"h-[250px] min-w-[350px]\")}>\r\n<ResponsiveContainer width=\"100%\" height=\"100%\">\r\n  <PieChart margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>\r\n    <Pie\r\n      data={statusPieChartData}\r\n      cx=\"50%\"\r\n      cy=\"50%\"\r\n      labelLine={false}\r\n      outerRadius={isMobile ? 60 : 100}\r\n      innerRadius={isMobile ? 40 : 70}\r\n      dataKey=\"value\"\r\n      isAnimationActive={false}\r\n      paddingAngle={5}\r\n      cornerRadius={5}\r\n    >\r\n      {statusPieChartData.map((entry, index) => (\r\n        <Cell\r\n          key={`cell-${index}`}\r\n          fill={PIE_COLORS[index % PIE_COLORS.length]}\r\n          stroke={PIE_COLORS[index % PIE_COLORS.length]}\r\n          opacity={1}\r\n          style={{ filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.2))' }}\r\n        />\r\n      ))}\r\n    </Pie>\r\n    <Tooltip\r\n      contentStyle={{\r\n        backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n        border: 'none',\r\n        borderRadius: '12px',\r\n        fontSize: '12px',\r\n        padding: '8px 12px',\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n        backdropFilter: 'blur(5px)',\r\n        touchAction: 'manipulation'\r\n      }}\r\n      labelStyle={{ color: chartTextColor, fontWeight: 'bold' }}\r\n      itemStyle={{ color: chartTextColor }}\r\n      formatter={(value, name) => [`${value} Pedidos`, name]}\r\n    />\r\n    <Legend\r\n      wrapperStyle={{ color: chartTextColor, paddingTop: '10px', fontSize: isMobile ? 8 : 12 }}\r\n      layout={isMobile ? \"vertical\" : \"horizontal\"}\r\n      align=\"center\"\r\n      itemStyle={{ paddingRight: isMobile ? 5 : 10 }}\r\n    />\r\n    <Label\r\n      value={`${totalOrders} Pedidos`}\r\n      position=\"center\"\r\n      fill={chartTextColor}\r\n      style={{ fontSize: isMobile ? '12px' : '16px', fontWeight: 'bold' }}\r\n    />\r\n  </PieChart>\r\n</ResponsiveContainer>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DashboardCharts;","// src/components/Admin/Dashboard.jsx\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport { db, auth } from '../../config/firebase';\r\nimport { onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { writeBatch, getDocs, collection } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { Trash2, Info, X, ShoppingCart, DollarSign, Users, Activity } from 'lucide-react';\r\n\r\nimport { useDashboardData } from '../../hooks/useDashboardData';\r\nimport DashboardCharts from './DashboardCharts';\r\n\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\nconst Dashboard = ({ setError, setSuccess, theme }) => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showConfirmClearActivity, setShowConfirmClearActivity] = useState(false);\r\n  const [confirmClearText, setConfirmClearText] = useState('');\r\n  const [showConfirmDeleteDailySales, setShowConfirmDeleteDailySales] = useState(false);\r\n  const [confirmDeleteDailySalesText, setConfirmDeleteDailySalesText] = useState('');\r\n  const [showActivityDetailModal, setShowActivityDetailModal] = useState(false);\r\n  const [selectedActivityDetail, setSelectedActivityDetail] = useState(null);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const [salesFilterRange, setSalesFilterRange] = useState('30_days');\r\n  const [salesCustomStartDate, setSalesCustomStartDate] = useState(null);\r\n  const [salesCustomEndDate, setSalesCustomEndDate] = useState(null);\r\n  const [ordersFilterRange, setOrdersFilterRange] = useState('30_days');\r\n  const [ordersCustomStartDate, setOrdersCustomStartDate] = useState(null);\r\n  const [ordersCustomEndDate, setOrdersCustomEndDate] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    loadingData,\r\n    orders,\r\n    users,\r\n    totals,\r\n    statusCounts,\r\n    userActivity,\r\n    dailySalesChartData,\r\n    dailyOrdersChartData,\r\n    statusPieChartData,\r\n    handleSaveDailyIngresos,\r\n    handleDeleteDailyIngresos,\r\n    handleSaveDailyOrders,\r\n    handleDeleteDailyOrders,\r\n  } = useDashboardData(\r\n    db,\r\n    userId,\r\n    isAuthReady,\r\n    setError,\r\n    setSuccess,\r\n    salesFilterRange,\r\n    salesCustomStartDate,\r\n    salesCustomEndDate,\r\n    ordersFilterRange,\r\n    ordersCustomStartDate,\r\n    ordersCustomEndDate,\r\n    selectedMonth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isAuthReady) {\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [isAuthReady]);\r\n\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      console.warn(\"Firebase Auth no está disponible. Asegúrate de que Firebase esté inicializado correctamente.\");\r\n      return;\r\n    }\r\n\r\n    const unsubscribeAuth = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n        setIsAuthReady(true);\r\n      } else {\r\n        try {\r\n          if (initialAuthToken) {\r\n            await signInWithCustomToken(auth, initialAuthToken);\r\n          } else {\r\n            await signInAnonymously(auth);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error al iniciar sesión:\", error);\r\n          setError(`Error de autenticación: ${error.message}`);\r\n        } finally {\r\n          setIsAuthReady(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => unsubscribeAuth();\r\n  }, [auth, initialAuthToken, setError]);\r\n\r\n  const handleClearOldActivity = async () => {\r\n    if (confirmClearText.toLowerCase() !== 'confirmar') {\r\n      setError('Por favor, escribe \"confirmar\" para proceder.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const batch = writeBatch(db);\r\n      const activitySnapshot = await getDocs(collection(db, 'userActivity'));\r\n\r\n      let deletedCount = 0;\r\n      activitySnapshot.forEach(doc => {\r\n        batch.delete(doc.ref);\r\n        deletedCount++;\r\n      });\r\n\r\n      if (deletedCount === 0) {\r\n        setSuccess(\"No había actividades para eliminar.\");\r\n      } else {\r\n        await batch.commit();\r\n        setSuccess(`Todas las actividades han sido eliminadas correctamente. Total: ${deletedCount}.`);\r\n      }\r\n      setShowConfirmClearActivity(false);\r\n      setConfirmClearText('');\r\n    } catch (error) {\r\n      setError(`Error al eliminar actividades: ${error.message}. Por favor, verifica las reglas de seguridad de Firebase.`);\r\n      console.error(\"Error en batch commit:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConfirmDeleteDailySales = async () => {\r\n    if (confirmDeleteDailySalesText.toLowerCase() !== 'eliminar') {\r\n      setError('Por favor, escribe \"eliminar\" para proceder.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await handleDeleteDailyIngresos();\r\n      setShowConfirmDeleteDailySales(false);\r\n      setConfirmDeleteDailySalesText('');\r\n    } catch (error) {\r\n      setError(`Error al eliminar ventas del día: ${error.message}`);\r\n      console.error(\"Error al eliminar ventas diarias:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewActivityDetails = (activity) => {\r\n    setSelectedActivityDetail(activity);\r\n    setShowActivityDetailModal(true);\r\n  };\r\n\r\n  const chartTextColor = theme === 'dark' ? '#cbd5e1' : '#475569';\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 font-inter\">\r\n      <h2 className=\"text-3xl font-extrabold mb-8 text-gray-100 dark:text-white\">Dashboard</h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n        <div className={classNames(`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-105 hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`)}>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-xl font-semibold text-gray-200 dark:text-gray-100\">Pedidos</h3>\r\n            <ShoppingCart className=\"text-blue-400 w-8 h-8\" />\r\n          </div>\r\n          <div className=\"space-y-3 text-base text-gray-300 dark:text-gray-400\">\r\n            <div className=\"flex justify-between\"><span>Total:</span><span className=\"font-bold text-gray-100\">{orders.length}</span></div>\r\n            <div className=\"flex justify-between\"><span>Pendientes:</span><span className=\"text-yellow-400 font-bold\">{statusCounts.Pending}</span></div>\r\n            <div className=\"flex justify-between\"><span>Entregados:</span><span className=\"text-green-400 font-bold\">{statusCounts.Delivered}</span></div>\r\n            <div className=\"flex justify-between\"><span>Cancelados:</span><span className=\"text-red-400 font-bold\">{statusCounts.Cancelled}</span></div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames(`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-105 hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`)}>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-xl font-semibold text-gray-200 dark:text-gray-100\">Totales Generales</h3>\r\n            <DollarSign className=\"text-green-400 w-8 h-8\" />\r\n          </div>\r\n          <div className=\"space-y-3 text-base text-gray-300 dark:text-gray-400\">\r\n            <div className=\"flex justify-between\"><span>Efectivo:</span><span className=\"font-bold text-gray-100\">${totals.cash.toLocaleString()}</span></div>\r\n            <div className=\"flex justify-between\"><span>DaviPlata:</span><span className=\"font-bold text-gray-100\">${totals.daviplata.toLocaleString()}</span></div>\r\n            <div className=\"flex justify-between\"><span>Nequi:</span><span className=\"font-bold text-gray-100\">${totals.nequi.toLocaleString()}</span></div>\r\n            <div className=\"flex justify-between\"><span className=\"font-bold text-gray-100\">Total:</span><span className=\"font-bold text-green-400\">${(totals.cash + totals.daviplata + totals.nequi).toLocaleString()}</span></div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames(`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-105 hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`)}>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-xl font-semibold text-gray-200 dark:text-gray-100\">Usuarios</h3>\r\n            <Users className=\"text-purple-400 w-8 h-8\" />\r\n          </div>\r\n          <div className=\"space-y-3 text-base text-gray-300 dark:text-gray-400\">\r\n            <div className=\"flex justify-between\"><span>Total:</span><span className=\"font-bold text-gray-100\">{users.length}</span></div>\r\n            <div className=\"flex justify-between\"><span>Administradores:</span><span className=\"font-bold text-gray-100\">{users.filter(u => u.role === 2).length}</span></div>\r\n            <div className=\"flex justify-between\"><span>Clientes:</span><span className=\"font-bold text-gray-100\">{users.filter(u => u.role === 1).length}</span></div>\r\n            <div className=\"flex justify-between\"><span>ID de Usuario:</span><span className=\"font-mono text-xs text-gray-500 break-all\">{userId}</span></div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames(`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-105 hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`)}>\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-xl font-semibold text-gray-200 dark:text-gray-100\">Actividad Reciente</h3>\r\n            <Activity className=\"text-orange-400 w-8 h-8\" />\r\n          </div>\r\n          <div className=\"space-y-3 text-sm max-h-40 overflow-y-auto custom-scrollbar\">\r\n            {userActivity.length === 0 ? (\r\n              <p className=\"text-gray-400 text-center\">No hay actividad reciente.</p>\r\n            ) : (\r\n              userActivity.map((act, idx) => (\r\n                <div key={idx} className=\"flex justify-between items-start pb-2 border-b border-gray-700 last:border-b-0\">\r\n                  <span className=\"text-gray-400 flex-1 pr-2\">{act.action}</span>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className=\"text-gray-500 text-xs text-right\">{act.timestamp ? new Date(act.timestamp).toLocaleString() : 'N/A'}</span>\r\n                    {act.details && (\r\n                      <button\r\n                        onClick={() => handleViewActivityDetails(act)}\r\n                        className=\"text-blue-400 hover:text-blue-300 p-1 rounded-full\"\r\n                        title=\"Ver detalles de la actividad\"\r\n                      >\r\n                        <Info className=\"w-4 h-4\" />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"mt-4 text-center\">\r\n            <button\r\n              onClick={() => setShowConfirmClearActivity(true)}\r\n              className={classNames(\r\n                \"px-4 py-2 rounded-md text-sm font-medium flex items-center justify-center mx-auto\",\r\n                theme === 'dark' ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-red-500 hover:bg-red-600 text-white'\r\n              )}\r\n            >\r\n              <Trash2 className=\"w-4 h-4 mr-2\" /> Limpiar TODAS las Actividades\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardCharts\r\n        dailySalesChartData={dailySalesChartData}\r\n        dailyOrdersChartData={dailyOrdersChartData}\r\n        statusPieChartData={statusPieChartData}\r\n        theme={theme}\r\n        chartTextColor={chartTextColor}\r\n        salesFilterRange={salesFilterRange}\r\n        setSalesFilterRange={setSalesFilterRange}\r\n        salesCustomStartDate={salesCustomStartDate}\r\n        setSalesCustomStartDate={setSalesCustomStartDate}\r\n        salesCustomEndDate={salesCustomEndDate}\r\n        setSalesCustomEndDate={setSalesCustomEndDate}\r\n        ordersFilterRange={ordersFilterRange}\r\n        setOrdersFilterRange={setOrdersFilterRange}\r\n        ordersCustomStartDate={ordersCustomStartDate}\r\n        setOrdersCustomStartDate={setOrdersCustomStartDate}\r\n        ordersCustomEndDate={ordersCustomEndDate}\r\n        setOrdersCustomEndDate={setOrdersCustomEndDate}\r\n        handleSaveDailyIngresos={handleSaveDailyIngresos}\r\n        handleDeleteDailyIngresos={() => setShowConfirmDeleteDailySales(true)}\r\n        handleSaveDailyOrders={handleSaveDailyOrders}\r\n        handleDeleteDailyOrders={handleDeleteDailyOrders}\r\n        loading={loadingData}\r\n        selectedMonth={selectedMonth}\r\n        setSelectedMonth={setSelectedMonth}\r\n      />\r\n      <Transition show={showConfirmClearActivity} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setShowConfirmClearActivity(false)}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-sm p-6 rounded-lg shadow-md text-center\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <Dialog.Title className=\"text-lg font-medium mb-4\">Confirmar Limpieza de Actividad</Dialog.Title>\r\n                <p className=\"mb-4\">\r\n                  Estás a punto de eliminar <span className=\"font-bold text-red-500\">TODAS</span> las actividades registradas.\r\n                  Esta acción es irreversible. Para confirmar, escribe \"confirmar\" a continuación:\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={confirmClearText}\r\n                  onChange={e => setConfirmClearText(e.target.value)}\r\n                  className={classNames(\r\n                    \"w-full p-2 rounded-md border text-center text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                    \"focus:outline-none focus:ring-1 focus:ring-red-500\"\r\n                  )}\r\n                  placeholder=\"escribe 'confirmar'\"\r\n                />\r\n                <div className=\"mt-6 flex justify-center gap-2\">\r\n                  <button\r\n                    onClick={() => { setShowConfirmClearActivity(false); setConfirmClearText(''); }}\r\n                    className={classNames(\r\n                      \"px-4 py-2 rounded-md text-sm font-medium\",\r\n                      theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'\r\n                    )}\r\n                  >\r\n                    Cancelar\r\n                  </button>\r\n                  <button\r\n                    onClick={handleClearOldActivity}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"px-4 py-2 rounded-md text-sm font-medium\",\r\n                      loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-red-600 hover:bg-red-700 text-white'\r\n                    )}\r\n                  >\r\n                    {loading ? 'Eliminando...' : 'Limpiar Actividad'}\r\n                  </button>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n      <Transition show={showConfirmDeleteDailySales} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setShowConfirmDeleteDailySales(false)}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-sm p-6 rounded-lg shadow-md text-center\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <Dialog.Title className=\"text-lg font-medium mb-4\">Confirmar Eliminación de Ventas del Día</Dialog.Title>\r\n                <p className=\"mb-4\">\r\n                  Estás a punto de eliminar las ventas registradas para <span className=\"font-bold text-red-500\">el día de hoy</span>.\r\n                  Esta acción es irreversible. Para confirmar, escribe \"eliminar\" a continuación:\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={confirmDeleteDailySalesText}\r\n                  onChange={e => setConfirmDeleteDailySalesText(e.target.value)}\r\n                  className={classNames(\r\n                    \"w-full p-2 rounded-md border text-center text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                    \"focus:outline-none focus:ring-1 focus:ring-red-500\"\r\n                  )}\r\n                  placeholder=\"escribe 'eliminar'\"\r\n                />\r\n                <div className=\"mt-6 flex justify-center gap-2\">\r\n                  <button\r\n                    onClick={() => { setShowConfirmDeleteDailySales(false); setConfirmDeleteDailySalesText(''); }}\r\n                    className={classNames(\r\n                      \"px-4 py-2 rounded-md text-sm font-medium\",\r\n                      theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'\r\n                    )}\r\n                  >\r\n                    Cancelar\r\n                  </button>\r\n                  <button\r\n                    onClick={handleConfirmDeleteDailySales}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"px-4 py-2 rounded-md text-sm font-medium\",\r\n                      loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-red-600 hover:bg-red-700 text-white'\r\n                    )}\r\n                  >\r\n                    {loading ? 'Eliminando...' : 'Eliminar Ventas'}\r\n                  </button>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n      <Transition show={showActivityDetailModal} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setShowActivityDetailModal(false)}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-md p-6 rounded-lg shadow-md\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <Dialog.Title className=\"text-lg font-medium\">Detalles de la Actividad</Dialog.Title>\r\n                  <button\r\n                    onClick={() => setShowActivityDetailModal(false)}\r\n                    className=\"text-gray-400 hover:text-gray-500\"\r\n                  >\r\n                    <X className=\"w-5 h-5\" />\r\n                  </button>\r\n                </div>\r\n                {selectedActivityDetail && (\r\n                  <div className=\"space-y-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium\">Acción:</span> {selectedActivityDetail.action}\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Fecha:</span>{' '}\r\n                      {selectedActivityDetail.timestamp\r\n                        ? new Date(selectedActivityDetail.timestamp).toLocaleString()\r\n                        : 'N/A'}\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Detalles:</span>{' '}\r\n                      {typeof selectedActivityDetail.details === 'object'\r\n                        ? JSON.stringify(selectedActivityDetail.details, null, 2)\r\n                        : selectedActivityDetail.details || 'Sin detalles'}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div className=\"mt-6 flex justify-end\">\r\n                  <button\r\n                    onClick={() => setShowActivityDetailModal(false)}\r\n                    className={classNames(\r\n                      \"px-4 py-2 rounded-md text-sm font-medium\",\r\n                      theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'\r\n                    )}\r\n                  >\r\n                    Cerrar\r\n                  </button>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}"],"names":["ORDER_STATUS","ORDER_STATUS_DISPLAY","BAR_COLORS","PIE_COLORS","INGRESOS_COLLECTION","PEDIDOS_DIARIOS_GUARDADOS_COLLECTION","getDateRange","rangeType","start","end","today","Date","setHours","startDate","endDate","setDate","getDate","getFullYear","getMonth","React","_ref2","dailySalesChartData","dailyOrdersChartData","statusPieChartData","theme","chartTextColor","salesFilterRange","setSalesFilterRange","salesCustomStartDate","setSalesCustomStartDate","salesCustomEndDate","setSalesCustomEndDate","ordersFilterRange","setOrdersFilterRange","ordersCustomStartDate","setOrdersCustomStartDate","ordersCustomEndDate","setOrdersCustomEndDate","handleSaveDailyIngresos","handleDeleteDailyIngresos","handleSaveDailyOrders","handleDeleteDailyOrders","loading","selectedMonth","setSelectedMonth","isMobile","setIsMobile","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","totalOrders","useMemo","reduce","sum","entry","value","chartVariants","hidden","opacity","scale","visible","transition","duration","ease","exit","_jsxs","className","children","_jsx","dangerouslySetInnerHTML","__html","motion","div","classNames","variants","initial","animate","DollarSign","Popover","PopoverButton","MoreVertical","Transition","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","PopoverPanel","onClick","disabled","Save","Trash2","type","toISOString","split","onChange","e","target","ResponsiveContainer","width","height","BarChart","data","margin","top","right","left","bottom","barCategoryGap","barGap","CartesianGrid","strokeDasharray","stroke","fill","XAxis","dataKey","tick","fontSize","angle","textAnchor","interval","YAxis","tickFormatter","toLocaleString","Tooltip","contentStyle","backgroundColor","border","borderRadius","padding","boxShadow","backdropFilter","touchAction","labelStyle","color","fontWeight","marginBottom","itemStyle","cursor","content","_ref3","active","payload","label","length","total","style","map","index","name","marginTop","Legend","wrapperStyle","paddingTop","paddingBottom","align","verticalAlign","Bar","radius","maxBarSize","monthKey","isAnimationActive","PieChart","Pie","cx","cy","labelLine","outerRadius","innerRadius","paddingAngle","cornerRadius","Cell","filter","formatter","layout","paddingRight","Label","position","initialAuthToken","__app_id","__initial_auth_token","_ref","setError","setSuccess","userId","setUserId","isAuthReady","setIsAuthReady","setLoading","showConfirmClearActivity","setShowConfirmClearActivity","confirmClearText","setConfirmClearText","showConfirmDeleteDailySales","setShowConfirmDeleteDailySales","confirmDeleteDailySalesText","setConfirmDeleteDailySalesText","showActivityDetailModal","setShowActivityDetailModal","selectedActivityDetail","setSelectedActivityDetail","loadingData","orders","users","totals","statusCounts","userActivity","useNavigate","useDashboardData","db","setLoadingData","setOrders","setUsers","setTotals","cash","daviplata","nequi","setStatusCounts","Pending","Delivered","Cancelled","setUserActivity","ingresosData","setIngresosData","pedidosDiariosGuardadosData","setPedidosDiariosGuardadosData","setDailySalesChartData","setDailyOrdersChartData","setStatusPieChartData","initialLoadRefs","useRef","activity","ingresos","pedidosDiariosGuardados","checkIfAllLoaded","current","unsubscribes","ordersCollectionRef","collection","unsubscribeOrders","onSnapshot","snapshot","ordersData","docs","doc","id","newTotals","newStatusCounts","forEach","order","_order$status","paymentSummary","orderStatus","status","toLowerCase","pieChartData","error","message","push","usersCollectionRef","unsubscribeUsers","usersData","userActivityCollectionRef","unsubscribeActivity","timestampDate","timestamp","Timestamp","toDate","sort","a","b","getTime","ingresosColRef","unsubscribeIngresos","pedidosDiariosGuardadosColRef","unsubscribePedidosDiariosGuardados","pedidosData","unsubscribe","monthNames","salesStartDate","salesEndDate","todayISO","chartData","filteredDailySales","summary","summaryDate","date","_filteredDailySales$s","_filteredDailySales$s2","_filteredDailySales$s3","String","padStart","Efectivo","Daviplata","Nequi","_filteredDailySales$s4","_filteredDailySales$s5","_filteredDailySales$s6","currentDayRealtimeCash","currentDayRealtimeDaviplata","currentDayRealtimeNequi","_filteredDailySales$t","_filteredDailySales$t2","_filteredDailySales$t3","_filteredDailySales$t4","_filteredDailySales$t5","_filteredDailySales$t6","_order$createdAt2","orderDate","createdAt","Object","keys","monthlySales","currentYear","month","currentMonthKey","currentMonthRealtimeCash","currentMonthRealtimeDaviplata","currentMonthRealtimeNequi","_order$createdAt","parseInt","ordersStartDate","ordersEndDate","filteredDailyOrders","count","currentDayRealtimeOrdersCount","_order$createdAt3","finalDailyOrdersChartData","Pedidos","useCallback","async","currentDayCash","currentDayDaviplata","currentDayNequi","_order$createdAt4","_order$payment","_order$meals","_order$meals$","_order$meals$$payment","_order$meals$$payment2","paymentType","payment","meals","amount","currentDayTotalSales","q","query","where","existingSummarySnapshot","getDocs","empty","addDoc","totalSales","serverTimestamp","updatedAt","docToUpdate","updateDoc","console","docToDelete","deleteDoc","currentDayOrdersCount","_order$createdAt5","auth","warn","unsubscribeAuth","onAuthStateChanged","user","uid","signInWithCustomToken","signInAnonymously","ShoppingCart","Users","u","role","Activity","act","idx","action","details","handleViewActivityDetails","title","Info","DashboardCharts","show","Dialog","onClose","Child","Panel","Title","placeholder","batch","writeBatch","activitySnapshot","deletedCount","delete","ref","commit","X","JSON","stringify","_len","arguments","classes","Array","_key","Boolean","join"],"sourceRoot":""}