{"version":3,"file":"static/js/37.9bd6e70f.chunk.js","mappings":"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","sources":["utils/payments.js","utils/classNames.js","components/Admin/dashboardConstants.js","hooks/useDashboardData.js","components/Admin/DashboardCharts.js","context/DashboardDateContext.js","components/Admin/Dashboard.js"],"sourcesContent":["// src/utils/payments.js\r\n// Utilidades para normalizar métodos de pago y sumar exactamente por split o legado.\r\n\r\nconst norm = (s) => (s ?? '').toString().trim().toLowerCase();\r\n\r\nexport const normalizePaymentMethodKey = (methodLike) => {\r\n  const raw =\r\n    typeof methodLike === 'string'\r\n      ? methodLike\r\n      : methodLike?.name || methodLike?.label || methodLike?.title || methodLike?.method || methodLike?.type || methodLike?.payment || '';\r\n  const t = norm(raw);\r\n  if (t.includes('efect') || t.includes('cash')) return 'cash';\r\n  if (t.includes('nequi')) return 'nequi';\r\n  if (t.includes('davi')) return 'daviplata';\r\n  return 'other';\r\n};\r\n\r\nconst pickMethodLabel = (methodLike) => {\r\n  if (typeof methodLike === 'string') return methodLike;\r\n  return (\r\n    methodLike?.name ||\r\n    methodLike?.label ||\r\n    methodLike?.title ||\r\n    methodLike?.method ||\r\n    methodLike?.type ||\r\n    methodLike?.payment ||\r\n    'Otro'\r\n  );\r\n};\r\n\r\n/**\r\n * Extrae filas [{methodKey, amount, rawLabel}] desde una orden.\r\n * - Si existe order.payments (split), lo usa.\r\n * - Sino, detecta método legado y asigna 100% del total.\r\n * - Sino, cae en {other}.\r\n */\r\nexport const extractOrderPayments = (order) => {\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n\r\n  if (Array.isArray(order?.payments) && order.payments.length) {\r\n    return order.payments.map((p) => {\r\n      const amount = Math.floor(Number(p?.amount || 0)) || 0;\r\n      return {\r\n        methodKey: normalizePaymentMethodKey(p?.method),\r\n        amount,\r\n        rawLabel: pickMethodLabel(p?.method),\r\n      };\r\n    });\r\n  }\r\n\r\n  const legacySources = [\r\n    order?.meals?.[0]?.paymentMethod ?? order?.meals?.[0]?.payment,\r\n    order?.breakfasts?.[0]?.payment ?? order?.breakfasts?.[0]?.paymentMethod,\r\n    order?.paymentMethod ?? order?.payment,\r\n  ].filter(Boolean);\r\n\r\n  if (legacySources.length) {\r\n    const label = pickMethodLabel(legacySources[0]);\r\n    return [\r\n      {\r\n        methodKey: normalizePaymentMethodKey(legacySources[0]),\r\n        amount: total,\r\n        rawLabel: label,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return [{ methodKey: 'other', amount: total, rawLabel: 'Otro' }];\r\n};\r\n\r\n/** Texto compacto: \"Efectivo $6.000 + Nequi $6.000\" */\r\nexport const summarizePayments = (paymentsRows = []) => {\r\n  if (!Array.isArray(paymentsRows) || !paymentsRows.length) return 'Sin pago';\r\n  const agg = paymentsRows.reduce((a, r) => {\r\n    const key = r.methodKey || normalizePaymentMethodKey(r?.method);\r\n    a[key] = (a[key] || 0) + (Math.floor(Number(r.amount || 0)) || 0);\r\n    return a;\r\n  }, {});\r\n  const asText = [];\r\n  if (agg.cash) asText.push(`Efectivo $${agg.cash.toLocaleString('es-CO')}`);\r\n  if (agg.nequi) asText.push(`Nequi $${agg.nequi.toLocaleString('es-CO')}`);\r\n  if (agg.daviplata) asText.push(`Daviplata $${agg.daviplata.toLocaleString('es-CO')}`);\r\n  if (agg.other && !asText.length) asText.push(`Otro $${agg.other.toLocaleString('es-CO')}`);\r\n  return asText.join(' + ') || 'Sin pago';\r\n};\r\n\r\n/**\r\n * Valor por defecto para el editor de split:\r\n * - Si hay split → se usa tal cual\r\n * - Si hay método legado → 100% al método\r\n * - Sino → 100% Efectivo\r\n */\r\nexport const defaultPaymentsForOrder = (order) => {\r\n  const rows = extractOrderPayments(order);\r\n  if (rows?.length) return rows.map(({ methodKey, amount }) => ({ method: methodKey, amount }));\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n  return [{ method: 'cash', amount: total }];\r\n};\r\n\r\n/**\r\n * Totales simples por método (para tiles/chips rápidos).\r\n * Devuelve: { cash, nequi, daviplata, other, total }\r\n */\r\nexport const sumPaymentsByMethod = (orders = []) => {\r\n  const out = { cash: 0, nequi: 0, daviplata: 0, other: 0, total: 0 };\r\n  for (const order of orders) {\r\n    const rows = extractOrderPayments(order);\r\n    for (const r of rows) {\r\n      const amt = Math.floor(Number(r.amount || 0)) || 0;\r\n      out[r.methodKey] = (out[r.methodKey] || 0) + amt;\r\n      out.total += amt;\r\n    }\r\n  }\r\n  return out;\r\n};\r\n\r\n/** Helpers de clasificación por tipo/ubicación */\r\nexport const isBreakfastOrder = (order) =>\r\n  order?.type === 'breakfast' || Array.isArray(order?.breakfasts);\r\n\r\nexport const isDeliveryOrder = (order) => {\r\n  const tag =\r\n    order?.orderType ||\r\n    order?.meals?.[0]?.orderType ||\r\n    order?.breakfasts?.[0]?.orderType ||\r\n    '';\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  const c = norm(tag);\r\n  if (collection.includes('delivery')) return true;\r\n  if (c.includes('delivery') || c.includes('domicil')) return true;\r\n  return false;\r\n};\r\n\r\nexport const isTableOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  if (collection.includes('table')) return true;\r\n  const tableNumber =\r\n    order?.meals?.[0]?.tableNumber ?? order?.breakfasts?.[0]?.tableNumber;\r\n  return !!tableNumber;\r\n};\r\n\r\n/** Consideramos \"salón\" lo hecho por mesero: mesa o llevar desde mesa/breakfast table/takeaway */\r\nexport const isSalonOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  // Cualquier cosa que provenga de colecciones de mesa pertenece a salón\r\n  if (collection.includes('table')) return true;\r\n\r\n  // Para desayunos creados como mesa o para llevar por mesero, también cuenta como salón\r\n  const t = norm(order?.orderType || order?.breakfasts?.[0]?.orderType || '');\r\n  if (Array.isArray(order?.breakfasts) && (t.includes('table') || t.includes('takeaway') || t.includes('para llevar') || t.includes('llevar'))) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n\r\n/** Marcas típicas para saber si el domiciliario ya liquidó el efectivo */\r\nexport const isCashSettled = (order) => {\r\n  if (order?.settlement?.status && norm(order.settlement.status) === 'liquidated') return true;\r\n  if (order?.liquidated === true) return true;\r\n  if (order?.cashSettled === true) return true;\r\n  if (order?.settledAt) return true;\r\n  return false;\r\n};\r\n\r\n/** Totales por método con semántica de caja */\r\nexport const calcMethodTotalsAll = (orders = [], tableOrders = [], breakfastOrders = []) => {\r\n  const acc = {\r\n    nequiTotal: 0,\r\n    daviplataTotal: 0,\r\n    cashSalon: 0,\r\n    cashClientesSettled: 0,\r\n    cashClientesPendiente: 0,\r\n  };\r\n\r\n  const accumulate = (list = []) => {\r\n    for (const o of list) {\r\n      const rows = extractOrderPayments(o);\r\n      let cash = 0, nequi = 0, davi = 0;\r\n      for (const r of rows) {\r\n        const amt = Math.floor(Number(r?.amount || 0)) || 0;\r\n        if (r.methodKey === 'cash') cash += amt;\r\n        else if (r.methodKey === 'nequi') nequi += amt;\r\n        else if (r.methodKey === 'daviplata') davi += amt;\r\n      }\r\n      acc.nequiTotal += nequi;\r\n      acc.daviplataTotal += davi;\r\n\r\n      if (cash > 0) {\r\n        if (isSalonOrder(o)) acc.cashSalon += cash;\r\n        else if (isCashSettled(o)) acc.cashClientesSettled += cash;\r\n        else acc.cashClientesPendiente += cash;\r\n      }\r\n    }\r\n  };\r\n\r\n  accumulate(orders);\r\n  accumulate(tableOrders);\r\n  accumulate(breakfastOrders);\r\n\r\n  return { ...acc, cashCaja: acc.cashSalon + acc.cashClientesSettled };\r\n};\r\n","// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}","// src/constants/dashboardConstants.js\r\nexport const ORDER_STATUS = {\r\n  PENDING: 'pendiente',\r\n  DELIVERED: 'entregado',\r\n  CANCELLED: 'cancelado',\r\n};\r\n\r\nexport const ORDER_STATUS_DISPLAY = {\r\n  [ORDER_STATUS.PENDING]: 'Pendientes',\r\n  [ORDER_STATUS.DELIVERED]: 'Entregados',\r\n  [ORDER_STATUS.CANCELLED]: 'Cancelados',\r\n};\r\n\r\nexport const BAR_COLORS = {\r\n  Efectivo: '#22c55e',\r\n  Daviplata: '#ef4444',\r\n  Nequi: '#3b82f6',\r\n  Domicilios: '#8B5CF6',\r\n  Mesas: '#10B981'\r\n};\r\n\r\nexport const PIE_COLORS = ['#fbbf24', '#4ade80', '#ef4444', '#60a5fa', '#a78bfa'];\r\n\r\nexport const INGRESOS_COLLECTION = 'Ingresos';\r\nexport const PEDIDOS_DIARIOS_GUARDADOS_COLLECTION = 'PedidosDiariosGuardados';","// src/hooks/useDashboardData.js\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  Timestamp,\r\n  getDocs,\r\n  addDoc,\r\n  orderBy, \r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  serverTimestamp,\r\n} from 'firebase/firestore';\r\nimport {\r\n  ORDER_STATUS,\r\n  ORDER_STATUS_DISPLAY,\r\n  PIE_COLORS,\r\n  INGRESOS_COLLECTION,\r\n  PEDIDOS_DIARIOS_GUARDADOS_COLLECTION,\r\n} from '../components/Admin/dashboardConstants';\r\nimport { calcMethodTotalsAll } from '../utils/payments';\r\n\r\n// --- Helpers ---\r\nconst getDateRange = (rangeType, start, end) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  let startDate = new Date(today);\r\n  let endDate = new Date(today);\r\n  endDate.setHours(23, 59, 59, 999);\r\n\r\n  switch (rangeType) {\r\n    case '7_days':\r\n      startDate.setDate(today.getDate() - 6);\r\n      break;\r\n    case '30_days':\r\n      startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n      endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'year':\r\n      startDate = new Date(today.getFullYear(), 0, 1);\r\n      endDate = new Date(today.getFullYear(), 11, 31);\r\n      endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    case 'custom':\r\n      startDate = start ? new Date(start) : null;\r\n      if (startDate) startDate.setHours(0, 0, 0, 0);\r\n      endDate = end ? new Date(end) : null;\r\n      if (endDate) endDate.setHours(23, 59, 59, 999);\r\n      break;\r\n    default:\r\n      startDate.setDate(today.getDate() - 6);\r\n      break;\r\n  }\r\n  return { startDate, endDate };\r\n};\r\n\r\n// Normaliza fecha de docs con createdAt / timestamp / date\r\nconst getDocDateISO = (doc) => {\r\n  const ts = doc?.createdAt || doc?.timestamp || doc?.date;\r\n  const d = ts?.toDate ? ts.toDate() : (ts ? new Date(ts) : null);\r\n  return d ? d.toISOString().split('T')[0] : null;\r\n};\r\n\r\n// ---------- NUEVOS HELPERS (agregación por tipo de venta) ----------\r\nconst isBreakfastOrder = (o) =>\r\n  Boolean(\r\n    o?.isBreakfast ||\r\n    o?.meal === 'breakfast' ||\r\n    (Array.isArray(o?.breakfasts) && o.breakfasts.length > 0)\r\n  );\r\n\r\nconst normalizeServiceFromOrder = (o) => {\r\n  const v = (\r\n    o?.orderTypeNormalized ??\r\n    o?.serviceType ??\r\n    o?.orderType ??\r\n    o?.channel ??\r\n    o?.tipoPedido ??\r\n    o?.typeOfOrder ??\r\n    ''\r\n  ).toString().toLowerCase();\r\n\r\n  if (/mesa|table|sal[oó]n|dine/.test(v)) return 'mesa';\r\n  if (/llevar|para\\s*llevar|take(?:-|\\s)?away|to-?go|takeout/.test(v)) return 'llevar';\r\n  if (/domicil|deliver|env[ií]o/.test(v)) return 'domicilio';\r\n  return null;\r\n};\r\n\r\nconst buildSaleTypeBreakdown = (orders = []) => {\r\n  const acc = {\r\n    // Domicilios\r\n    domicilio_almuerzo: 0,\r\n    domicilio_desayuno: 0,\r\n    // Salón\r\n    mesa_almuerzo: 0,\r\n    llevar_almuerzo: 0,\r\n    mesa_desayuno: 0,\r\n    llevar_desayuno: 0,\r\n  };\r\n\r\n  for (const o of orders) {\r\n    const total = Number(o?.total) || 0;\r\n    if (total <= 0) continue;\r\n\r\n    const kind = isBreakfastOrder(o) ? 'desayuno' : 'almuerzo';\r\n    const service = normalizeServiceFromOrder(o);\r\n    if (!service) continue;\r\n\r\n    if (service === 'domicilio') acc[`domicilio_${kind}`] += total;\r\n    else if (service === 'mesa') acc[`mesa_${kind}`] += total;\r\n    else if (service === 'llevar') acc[`llevar_${kind}`] += total;\r\n  }\r\n\r\n  return acc;\r\n};\r\n\r\nexport const useDashboardData = (\r\n  db,\r\n  userId,\r\n  isAuthReady,\r\n  p4, // notify ó setError\r\n  p5, // startOfDay ó setSuccess\r\n  p6, // endOfDay ó salesFilterRange\r\n  p7, // selectedDate ó salesCustomStartDate\r\n  p8, // ordersFilterRange\r\n  p9, // ordersCustomStartDate\r\n  p10, // ordersCustomEndDate\r\n  p11, // selectedMonth\r\n) => {\r\n  // Compatibilidad con ambas firmas:\r\n  let notify = null;\r\n  let setError = null;\r\n  let setSuccess = null;\r\n  let startOfDay = null;\r\n  let endOfDay = null;\r\n  let selectedDate = null;\r\n\r\n  // Parámetros “viejos” de gráficos (si los usas):\r\n  let salesFilterRange = '7_days';\r\n  let salesCustomStartDate = null;\r\n  let salesCustomEndDate = null;\r\n  let ordersFilterRange = '7_days';\r\n  let ordersCustomStartDate = null;\r\n  let ordersCustomEndDate = null;\r\n  let selectedMonth = null;\r\n\r\n  if (typeof p4 === 'function') {\r\n    // NUEVA firma: (db, userId, isAuthReady, notify, startOfDay, endOfDay, selectedDate)\r\n    notify = p4;\r\n    setError = (m) => notify?.('error', m);\r\n    setSuccess = (m) => notify?.('success', m);\r\n    startOfDay = p5 || null;\r\n    endOfDay = p6 || null;\r\n    selectedDate = p7 || null;\r\n    // lo demás queda con defaults\r\n  } else {\r\n    // FIRMA ANTIGUA\r\n    setError = p4;\r\n    setSuccess = p5;\r\n    salesFilterRange = p6 ?? salesFilterRange;\r\n    salesCustomStartDate = p7 ?? null;\r\n    salesCustomEndDate = p8 ?? null;\r\n    ordersFilterRange = p9 ?? ordersFilterRange;\r\n    ordersCustomStartDate = p10 ?? null;\r\n    ordersCustomEndDate = p11 ?? null;\r\n    selectedMonth = arguments.length >= 12 ? arguments[11] : null;\r\n    // Estos no existen en esa firma\r\n    notify = null;\r\n    startOfDay = null;\r\n    endOfDay = null;\r\n    selectedDate = null;\r\n  }\r\n\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const [orders, setOrders] = useState([]);\r\n  const [tableOrders, setTableOrders] = useState([]);\r\n  const [breakfastOrders, setBreakfastOrders] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [totals, setTotals] = useState({\r\n    cash: 0,\r\n    cashCaja: 0,\r\n    cashPendiente: 0,\r\n    daviplata: 0,\r\n    nequi: 0,\r\n    expenses: 0,\r\n    expensesByProvider: { total: 0, byProvider: {}, counts: {} }, // 👈 NUEVO\r\n    byCategory: {\r\n      domiciliosAlmuerzo: 0,\r\n      mesasAlmuerzo: 0,\r\n      llevarAlmuerzo: 0,       // 👈 NUEVO\r\n      domiciliosDesayuno: 0,\r\n      mesasDesayuno: 0,\r\n      llevarDesayuno: 0,       // 👈 NUEVO\r\n    },\r\n    grossIncome: 0,\r\n    net: 0,\r\n  });\r\n\r\n  const [saleTypeBreakdown, setSaleTypeBreakdown] = useState({\r\n    domicilio_almuerzo: 0,\r\n    domicilio_desayuno: 0,\r\n    mesa_almuerzo: 0,\r\n    llevar_almuerzo: 0,\r\n    mesa_desayuno: 0,\r\n    llevar_desayuno: 0,\r\n  });\r\n\r\n  const [statusCounts, setStatusCounts] = useState({ Pending: 0, Delivered: 0, Cancelled: 0 });\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [ingresosData, setIngresosData] = useState([]);\r\n  const [pedidosDiariosGuardadosData, setPedidosDiariosGuardadosData] = useState([]);\r\n  const [dailySalesChartData, setDailySalesChartData] = useState([]);\r\n  const [dailyOrdersChartData, setDailyOrdersChartData] = useState([]);\r\n  const [statusPieChartData, setStatusPieChartData] = useState([]);\r\n\r\n  const initialLoadRefs = useRef({\r\n    orders: false,\r\n    tableOrders: false,\r\n    breakfastOrders: false,\r\n    users: false,\r\n    activity: false,\r\n    ingresos: false,\r\n    pedidosDiariosGuardados: false,\r\n    payments: false, // para gastos\r\n  });\r\n\r\n  const checkIfAllLoaded = () => {\r\n    if (\r\n      initialLoadRefs.current.orders &&\r\n      initialLoadRefs.current.tableOrders &&\r\n      initialLoadRefs.current.breakfastOrders &&\r\n      initialLoadRefs.current.users &&\r\n      initialLoadRefs.current.activity &&\r\n      initialLoadRefs.current.ingresos &&\r\n      initialLoadRefs.current.pedidosDiariosGuardados &&\r\n      initialLoadRefs.current.payments\r\n    ) {\r\n      setLoadingData(false);\r\n    }\r\n  };\r\n\r\n  // --- Sumas por categoría (robusto con normalización + detección desayuno/almuerzo) ---\r\n  useEffect(() => {\r\n    const sum = {\r\n      domiciliosAlmuerzo: 0,\r\n      mesasAlmuerzo: 0,\r\n      llevarAlmuerzo: 0,\r\n      domiciliosDesayuno: 0,\r\n      mesasDesayuno: 0,\r\n      llevarDesayuno: 0,\r\n    };\r\n\r\n    // 1) Almuerzo: 'orders' (legacy: delivery de almuerzo)\r\n    sum.domiciliosAlmuerzo = orders.reduce((acc, o) => acc + Number(o.total || 0), 0);\r\n\r\n    // 2) Salón (y llevar) en 'tableOrders' — separar desayuno vs almuerzo\r\n    for (const t of tableOrders) {\r\n      const amount = Number(t.total || 0);\r\n      if (amount <= 0) continue;\r\n\r\n      const esDesayuno = isBreakfastOrder(t);           // ✅ detecta si esta orden de mesa es desayuno\r\n      const service = normalizeServiceFromOrder(t)      // ✅ 'mesa' | 'llevar' | 'domicilio' | null\r\n                      || 'mesa';                        //     default razonable en salón\r\n\r\n      if (!esDesayuno) {\r\n        if (service === 'mesa') sum.mesasAlmuerzo += amount;\r\n        else if (service === 'llevar') sum.llevarAlmuerzo += amount;\r\n        else if (service === 'domicilio') sum.domiciliosAlmuerzo += amount; // por si llegara algo mal guardado\r\n        else sum.mesasAlmuerzo += amount; // fallback\r\n      } else {\r\n        if (service === 'mesa') sum.mesasDesayuno += amount;\r\n        else if (service === 'llevar') sum.llevarDesayuno += amount;\r\n        else if (service === 'domicilio') sum.domiciliosDesayuno += amount;\r\n        else sum.mesasDesayuno += amount; // fallback\r\n      }\r\n    }\r\n\r\n    // 3) 'deliveryBreakfastOrders' — normalmente son domicilios, pero normalizamos por si hay mesa/llevar\r\n    for (const b of breakfastOrders) {\r\n      const amount = Number(b.total || 0);\r\n      if (amount <= 0) continue;\r\n\r\n      const service = normalizeServiceFromOrder(b);\r\n      const hasAddr = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n\r\n      if (service === 'mesa') sum.mesasDesayuno += amount;\r\n      else if (service === 'llevar') sum.llevarDesayuno += amount;\r\n      else if (service === 'domicilio' || (!service && hasAddr)) sum.domiciliosDesayuno += amount;\r\n      else sum.domiciliosDesayuno += amount; // fallback conservador\r\n    }\r\n\r\n    const gross =\r\n      sum.domiciliosAlmuerzo +\r\n      sum.mesasAlmuerzo +\r\n      sum.llevarAlmuerzo +\r\n      sum.domiciliosDesayuno +\r\n      sum.mesasDesayuno +\r\n      sum.llevarDesayuno;\r\n\r\n    setTotals(prev => ({\r\n      ...prev,\r\n      byCategory: sum,\r\n      grossIncome: gross,\r\n      net: Math.max(gross - (prev.expenses || 0), 0),\r\n    }));\r\n\r\n    // Mantén este breakdown (ya usaba la normalización correcta)\r\n    const mixed = [...orders, ...tableOrders, ...breakfastOrders];\r\n    setSaleTypeBreakdown(buildSaleTypeBreakdown(mixed));\r\n  }, [orders, tableOrders, breakfastOrders]);\r\n\r\n\r\n\r\n  // --- Suscripciones a Firestore ---\r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) {\r\n      return;\r\n    }\r\n\r\n    setLoadingData(true);\r\n    const unsubscribes = [];\r\n\r\n    // Orders\r\n    const ordersCollectionRef = collection(db, 'orders');\r\n    const unsubscribeOrders = onSnapshot(\r\n      ordersCollectionRef,\r\n      (snapshot) => {\r\n        const ordersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'orders', ...doc.data() }));\r\n        setOrders(ordersData);\r\n\r\n        const newTotals = { cash: 0, daviplata: 0, nequi: 0 };\r\n        const newStatusCounts = { Pending: 0, Delivered: 0, Cancelled: 0 };\r\n\r\n        ordersData.forEach((order) => {\r\n          const paymentSummary = order.paymentSummary || {};\r\n          newTotals.cash += Number(paymentSummary['Efectivo'] || 0);\r\n          newTotals.daviplata += Number(paymentSummary['Daviplata'] || 0);\r\n          newTotals.nequi += Number(paymentSummary['Nequi'] || 0);\r\n\r\n          const orderStatus = order.status?.toLowerCase() || '';\r\n          if (orderStatus === ORDER_STATUS.PENDING) newStatusCounts.Pending += 1;\r\n          else if (orderStatus === ORDER_STATUS.DELIVERED) newStatusCounts.Delivered += 1;\r\n          else if (orderStatus === ORDER_STATUS.CANCELLED) newStatusCounts.Cancelled += 1;\r\n        });\r\n\r\n \r\n        setStatusCounts(newStatusCounts);\r\n\r\n        const pieChartData = [\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.PENDING], value: newStatusCounts.Pending, color: PIE_COLORS[0] },\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.DELIVERED], value: newStatusCounts.Delivered, color: PIE_COLORS[1] },\r\n          { name: ORDER_STATUS_DISPLAY[ORDER_STATUS.CANCELLED], value: newStatusCounts.Cancelled, color: PIE_COLORS[2] },\r\n        ];\r\n        setStatusPieChartData(pieChartData);\r\n\r\n        if (!initialLoadRefs.current.orders) {\r\n          initialLoadRefs.current.orders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar pedidos: ${error.message}`);\r\n        if (!initialLoadRefs.current.orders) {\r\n          initialLoadRefs.current.orders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeOrders);\r\n\r\n    // Table orders\r\n    const tableOrdersCollectionRef = collection(db, 'tableOrders');\r\n    const unsubscribeTableOrders = onSnapshot(\r\n      tableOrdersCollectionRef,\r\n      (snapshot) => {\r\n        const tableOrdersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'tableOrders', ...doc.data() }));\r\n        setTableOrders(tableOrdersData);\r\n\r\n        if (!initialLoadRefs.current.tableOrders) {\r\n          initialLoadRefs.current.tableOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar pedidos de mesa: ${error.message}`);\r\n        if (!initialLoadRefs.current.tableOrders) {\r\n          initialLoadRefs.current.tableOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeTableOrders);\r\n\r\n    // Breakfast orders (deliveryBreakfastOrders)\r\n    const deliveryBreakfastOrdersRef = collection(db, 'deliveryBreakfastOrders');\r\n    const unsubscribeBreakfastOrders = onSnapshot(\r\n      deliveryBreakfastOrdersRef,\r\n      (snapshot) => {\r\n        const breakfastOrdersData = snapshot.docs.map((doc) => ({ id: doc.id, __collection: 'deliveryBreakfastOrders', ...doc.data() }));\r\n        setBreakfastOrders(breakfastOrdersData);\r\n        if (!initialLoadRefs.current.breakfastOrders) {\r\n          initialLoadRefs.current.breakfastOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar desayunos: ${error.message}`);\r\n        if (!initialLoadRefs.current.breakfastOrders) {\r\n          initialLoadRefs.current.breakfastOrders = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeBreakfastOrders);\r\n\r\n    // Users\r\n    const usersCollectionRef = collection(db, 'users');\r\n    const unsubscribeUsers = onSnapshot(\r\n      usersCollectionRef,\r\n      (snapshot) => {\r\n        const usersData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setUsers(usersData);\r\n        if (!initialLoadRefs.current.users) {\r\n          initialLoadRefs.current.users = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar usuarios: ${error.message}`);\r\n        if (!initialLoadRefs.current.users) {\r\n          initialLoadRefs.current.users = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeUsers);\r\n\r\n    // User activity\r\n    const userActivityCollectionRef = collection(db, 'userActivity');\r\n    const unsubscribeActivity = onSnapshot(\r\n      userActivityCollectionRef,\r\n      (snapshot) => {\r\n        const activity = snapshot.docs\r\n          .map((doc) => {\r\n            const data = doc.data();\r\n            const timestampDate = data.timestamp instanceof Timestamp ? data.timestamp.toDate() : null;\r\n            return { id: doc.id, ...data, timestamp: timestampDate };\r\n          })\r\n          .sort((a, b) => (b.timestamp ? b.timestamp.getTime() : 0) - (a.timestamp ? a.timestamp.getTime() : 0));\r\n        setUserActivity(activity);\r\n        if (!initialLoadRefs.current.activity) {\r\n          initialLoadRefs.current.activity = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar actividad: ${error.message}`);\r\n        if (!initialLoadRefs.current.activity) {\r\n          initialLoadRefs.current.activity = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeActivity);\r\n\r\n    // Ingresos\r\n    const ingresosColRef = collection(db, INGRESOS_COLLECTION);\r\n    const unsubscribeIngresos = onSnapshot(\r\n      ingresosColRef,\r\n      (snapshot) => {\r\n        const ingresosData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setIngresosData(ingresosData);\r\n        if (!initialLoadRefs.current.ingresos) {\r\n          initialLoadRefs.current.ingresos = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar ingresos: ${error.message}`);\r\n        if (!initialLoadRefs.current.ingresos) {\r\n          initialLoadRefs.current.ingresos = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribeIngresos);\r\n\r\n    // Pedidos diarios guardados\r\n    const pedidosDiariosGuardadosColRef = collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION);\r\n    const unsubscribePedidosDiariosGuardados = onSnapshot(\r\n      pedidosDiariosGuardadosColRef,\r\n      (snapshot) => {\r\n        const pedidosData = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setPedidosDiariosGuardadosData(pedidosData);\r\n        if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n          initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError(`Error al cargar pedidos diarios guardados: ${error.message}`);\r\n        if (!initialLoadRefs.current.pedidosDiariosGuardados) {\r\n          initialLoadRefs.current.pedidosDiariosGuardados = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribePedidosDiariosGuardados);\r\n\r\n    // Payments (gastos) — filtra por la FECHA seleccionada si startOfDay/endOfDay existen\r\n    const paymentsQuery = (startOfDay && endOfDay)\r\n      ? query(\r\n          collection(db, 'payments'),\r\n          where('timestamp', '>=', startOfDay),\r\n          where('timestamp', '<=', endOfDay),\r\n          orderBy('timestamp', 'asc'),\r\n        )\r\n      : collection(db, 'payments');\r\n\r\n    const unsubscribePayments = onSnapshot(\r\n      paymentsQuery,\r\n      (snapshot) => {\r\n        // Ignorar docs sin timestamp aún (serverTimestamp “en vuelo”)\r\n        const items = snapshot.docs\r\n          .map(d => ({ id: d.id, ...d.data() }))\r\n          .filter(p => !!p.timestamp);\r\n\r\n        let totalExpenses = 0;\r\n        const byProvider = {};\r\n        const counts = {};\r\n\r\n        for (const p of items) {\r\n          const amount = Number(p.amount || 0);\r\n          const provider = (p.provider || p.store || '—').toString().trim() || '—';\r\n          totalExpenses += amount;\r\n          byProvider[provider] = (byProvider[provider] || 0) + amount;\r\n          counts[provider] = (counts[provider] || 0) + 1;\r\n        }\r\n\r\n        setTotals(prev => {\r\n          const net = Math.max((prev.grossIncome || 0) - totalExpenses, 0);\r\n          return {\r\n            ...prev,\r\n            expenses: totalExpenses,\r\n            expensesByProvider: { total: totalExpenses, byProvider, counts },\r\n            net,\r\n          };\r\n        });\r\n\r\n        if (!initialLoadRefs.current.payments) {\r\n          initialLoadRefs.current.payments = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      },\r\n      (error) => {\r\n        setError?.(`Error al cargar pagos: ${error.message}`);\r\n        if (!initialLoadRefs.current.payments) {\r\n          initialLoadRefs.current.payments = true;\r\n          checkIfAllLoaded();\r\n        }\r\n      }\r\n    );\r\n    unsubscribes.push(unsubscribePayments);\r\n\r\n\r\n    return () => {\r\n      unsubscribes.forEach((unsubscribe) => unsubscribe());\r\n    };\r\n  }, [db, userId, isAuthReady]); // 👈 evita el bucle\r\n\r\n  // --- Recalcular métodos de pago sumando orders + mesas + desayunos ---\r\n  useEffect(() => {\r\n    const m = calcMethodTotalsAll(orders, tableOrders, breakfastOrders);\r\n    setTotals((prev) => ({\r\n      ...prev,\r\n      // Compatibilidad: mantenemos 'cash' pero ahora equivale a lo que realmente está en caja\r\n      cash: m.cashCaja,\r\n      // Nuevos campos explícitos (opcionales para UI):\r\n      cashCaja: m.cashCaja,\r\n      cashPendiente: m.cashClientesPendiente,\r\n      daviplata: m.daviplataTotal,\r\n      nequi: m.nequiTotal,\r\n    }));\r\n  }, [orders, tableOrders, breakfastOrders]);\r\n\r\n  // --- Daily Sales Chart (categorías) ---\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const monthNames = [\r\n      'Enero',\r\n      'Febrero',\r\n      'Marzo',\r\n      'Abril',\r\n      'Mayo',\r\n      'Junio',\r\n      'Julio',\r\n      'Agosto',\r\n      'Septiembre',\r\n      'Octubre',\r\n      'Noviembre',\r\n      'Diciembre',\r\n    ];\r\n    const { startDate: salesStartDate, endDate: salesEndDate } = getDateRange(\r\n      salesFilterRange,\r\n      salesCustomStartDate,\r\n      salesCustomEndDate\r\n    );\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const todayISO = today.toISOString().split('T')[0];\r\n    let chartData;\r\n\r\n    if (salesFilterRange === 'year' && !selectedMonth) {\r\n      const monthlySales = {};\r\n      const currentYear = today.getFullYear();\r\n\r\n      for (let month = 0; month < 12; month++) {\r\n        const monthKey = `${currentYear}-${String(month + 1).padStart(2, '0')}`;\r\n        monthlySales[monthKey] = {\r\n          'Domicilios Almuerzo': 0,\r\n          'Domicilios Desayuno': 0,\r\n          'Mesas/Llevar Almuerzo': 0,\r\n          'Mesas/Llevar Desayuno': 0,\r\n        };\r\n      }\r\n\r\n      // Históricos guardados\r\n      ingresosData.forEach((summary) => {\r\n        const date = new Date(summary.date);\r\n        if (date.getFullYear() === currentYear) {\r\n          const mKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n          const c = summary.categories || {};\r\n          monthlySales[mKey]['Domicilios Almuerzo'] += Number(c.domiciliosAlmuerzo || 0);\r\n          monthlySales[mKey]['Domicilios Desayuno'] += Number(c.domiciliosDesayuno || 0);\r\n          monthlySales[mKey]['Mesas/Llevar Almuerzo'] += Number(c.mesasAlmuerzo || 0);\r\n          monthlySales[mKey]['Mesas/Llevar Desayuno'] += Number(c.mesasDesayuno || 0);\r\n        }\r\n      });\r\n\r\n      // Realtime del mes actual\r\n      const currentMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n      let rt = { da: 0, dd: 0, ma: 0, md: 0 };\r\n\r\n      orders.forEach((o) => {\r\n        const d = o.createdAt?.toDate ? new Date(o.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth())\r\n          rt.da += Number(o.total || 0);\r\n      });\r\n      tableOrders.forEach((t) => {\r\n        const d = t.createdAt?.toDate ? new Date(t.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth())\r\n          rt.ma += Number(t.total || 0);\r\n      });\r\n      breakfastOrders.forEach((b) => {\r\n        const dISO = getDocDateISO(b);\r\n        if (dISO) {\r\n          const d = new Date(dISO);\r\n          if (d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n            const amount = Number(b.total || 0);\r\n            const orderType = (b.breakfasts?.[0]?.orderType || b.orderType || '').toLowerCase();\r\n            const hasAddress = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n            if (orderType === 'table' || orderType === 'takeaway') rt.md += amount;\r\n            else if (hasAddress) rt.dd += amount;\r\n            else rt.dd += amount;\r\n          }\r\n        }\r\n      });\r\n\r\n      monthlySales[currentMonthKey]['Domicilios Almuerzo'] += rt.da;\r\n      monthlySales[currentMonthKey]['Mesas/Llevar Almuerzo'] += rt.ma;\r\n      monthlySales[currentMonthKey]['Domicilios Desayuno'] += rt.dd;\r\n      monthlySales[currentMonthKey]['Mesas/Llevar Desayuno'] += rt.md;\r\n\r\n      chartData = Object.keys(monthlySales).map((monthKey) => ({\r\n        name: monthNames[parseInt(monthKey.split('-')[1]) - 1],\r\n        monthKey,\r\n        'Domicilios Almuerzo': monthlySales[monthKey]['Domicilios Almuerzo'],\r\n        'Domicilios Desayuno': monthlySales[monthKey]['Domicilios Desayuno'],\r\n        'Mesas/Llevar Almuerzo': monthlySales[monthKey]['Mesas/Llevar Almuerzo'],\r\n        'Mesas/Llevar Desayuno': monthlySales[monthKey]['Mesas/Llevar Desayuno'],\r\n      }));\r\n    } else {\r\n      const filteredDailySales = {};\r\n\r\n      // Históricos por día\r\n      ingresosData.forEach((summary) => {\r\n        const summaryDateISO = new Date(summary.date).toISOString().split('T')[0];\r\n        if (\r\n          summaryDateISO >= salesStartDate.toISOString().split('T')[0] &&\r\n          summaryDateISO <= salesEndDate.toISOString().split('T')[0]\r\n        ) {\r\n          const c = summary.categories || {};\r\n          filteredDailySales[summaryDateISO] = {\r\n            'Domicilios Almuerzo':\r\n              (filteredDailySales[summaryDateISO]?.['Domicilios Almuerzo'] || 0) +\r\n              Number(c.domiciliosAlmuerzo || 0),\r\n            'Domicilios Desayuno':\r\n              (filteredDailySales[summaryDateISO]?.['Domicilios Desayuno'] || 0) +\r\n              Number(c.domiciliosDesayuno || 0),\r\n            'Mesas/Llevar Almuerzo':\r\n              (filteredDailySales[summaryDateISO]?.['Mesas/Llevar Almuerzo'] || 0) +\r\n              Number(c.mesasAlmuerzo || 0),\r\n            'Mesas/Llevar Desayuno':\r\n              (filteredDailySales[summaryDateISO]?.['Mesas/Llevar Desayuno'] || 0) +\r\n              Number(c.mesasDesayuno || 0),\r\n          };\r\n        }\r\n      });\r\n\r\n      // Realtime del rango\r\n      if (today >= salesStartDate && today <= salesEndDate) {\r\n        let da = 0,\r\n          dd = 0,\r\n          ma = 0,\r\n          md = 0;\r\n\r\n        orders.forEach((o) => {\r\n          const dISO = o.createdAt?.toDate ? new Date(o.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n          if (\r\n            dISO &&\r\n            dISO >= salesStartDate.toISOString().split('T')[0] &&\r\n            dISO <= salesEndDate.toISOString().split('T')[0]\r\n          ) {\r\n            da += Number(o.total || 0);\r\n          }\r\n        });\r\n        tableOrders.forEach((t) => {\r\n          const dISO = t.createdAt?.toDate ? new Date(t.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n          if (\r\n            dISO &&\r\n            dISO >= salesStartDate.toISOString().split('T')[0] &&\r\n            dISO <= salesEndDate.toISOString().split('T')[0]\r\n          ) {\r\n            ma += Number(t.total || 0);\r\n          }\r\n        });\r\n        breakfastOrders.forEach((b) => {\r\n          const dISO = getDocDateISO(b);\r\n          if (\r\n            dISO &&\r\n            dISO >= salesStartDate.toISOString().split('T')[0] &&\r\n            dISO <= salesEndDate.toISOString().split('T')[0]\r\n          ) {\r\n            const amount = Number(b.total || 0);\r\n            const orderType = (b.breakfasts?.[0]?.orderType || b.orderType || '').toLowerCase();\r\n            const hasAddress = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n            if (orderType === 'table' || orderType === 'takeaway') md += amount;\r\n            else if (hasAddress) dd += amount;\r\n            else dd += amount;\r\n          }\r\n        });\r\n\r\n        const k = todayISO;\r\n        filteredDailySales[k] = {\r\n          'Domicilios Almuerzo': (filteredDailySales[k]?.['Domicilios Almuerzo'] || 0) + da,\r\n          'Domicilios Desayuno': (filteredDailySales[k]?.['Domicilios Desayuno'] || 0) + dd,\r\n          'Mesas/Llevar Almuerzo': (filteredDailySales[k]?.['Mesas/Llevar Almuerzo'] || 0) + ma,\r\n          'Mesas/Llevar Desayuno': (filteredDailySales[k]?.['Mesas/Llevar Desayuno'] || 0) + md,\r\n        };\r\n      }\r\n\r\n      const sortedDates = Object.keys(filteredDailySales).sort((a, b) => new Date(a) - new Date(b));\r\n      chartData = sortedDates.map((date) => ({\r\n        name: date,\r\n        'Domicilios Almuerzo': filteredDailySales[date]['Domicilios Almuerzo'] || 0,\r\n        'Domicilios Desayuno': filteredDailySales[date]['Domicilios Desayuno'] || 0,\r\n        'Mesas/Llevar Almuerzo': filteredDailySales[date]['Mesas/Llevar Almuerzo'] || 0,\r\n        'Mesas/Llevar Desayuno': filteredDailySales[date]['Mesas/Llevar Desayuno'] || 0,\r\n      }));\r\n    }\r\n\r\n    setDailySalesChartData(chartData);\r\n  }, [\r\n    orders,\r\n    tableOrders,\r\n    breakfastOrders,\r\n    ingresosData,\r\n    salesFilterRange,\r\n    salesCustomStartDate,\r\n    salesCustomEndDate,\r\n    isAuthReady,\r\n    selectedMonth,\r\n  ]);\r\n\r\n  // --- Daily Orders Chart (conteos) ---\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const monthNames = [\r\n      'Enero',\r\n      'Febrero',\r\n      'Marzo',\r\n      'Abril',\r\n      'Mayo',\r\n      'Junio',\r\n      'Julio',\r\n      'Agosto',\r\n      'Septiembre',\r\n      'Octubre',\r\n      'Noviembre',\r\n      'Diciembre',\r\n    ];\r\n    const { startDate: ordersStartDate, endDate: ordersEndDate } = getDateRange(\r\n      ordersFilterRange,\r\n      ordersCustomStartDate,\r\n      ordersCustomEndDate\r\n    );\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    const todayISO = today.toISOString().split('T')[0];\r\n    let chartData;\r\n\r\n    if (ordersFilterRange === 'year' && !selectedMonth) {\r\n      const monthlyOrders = {};\r\n      const currentYear = today.getFullYear();\r\n\r\n      for (let month = 0; month < 12; month++) {\r\n        const monthKey = `${currentYear}-${String(month + 1).padStart(2, '0')}`;\r\n        monthlyOrders[monthKey] = { domicilios: 0, mesas: 0 };\r\n      }\r\n\r\n      pedidosDiariosGuardadosData.forEach((summary) => {\r\n        const date = new Date(summary.date);\r\n        if (date.getFullYear() === currentYear) {\r\n          const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n          monthlyOrders[monthKey].domicilios += summary.domicilios || 0;\r\n          monthlyOrders[monthKey].mesas += summary.mesas || 0;\r\n        }\r\n      });\r\n\r\n      const currentMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n      let currentMonthRealtimeDomicilios = 0;\r\n      let currentMonthRealtimeMesas = 0;\r\n\r\n      orders.forEach((order) => {\r\n        const d = order.createdAt?.toDate ? new Date(order.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          currentMonthRealtimeDomicilios++;\r\n        }\r\n      });\r\n\r\n      tableOrders.forEach((tableOrder) => {\r\n        const d = tableOrder.createdAt?.toDate ? new Date(tableOrder.createdAt.toDate()) : null;\r\n        if (d && d.getFullYear() === currentYear && d.getMonth() === today.getMonth()) {\r\n          currentMonthRealtimeMesas++;\r\n        }\r\n      });\r\n\r\n      monthlyOrders[currentMonthKey].domicilios += currentMonthRealtimeDomicilios;\r\n      monthlyOrders[currentMonthKey].mesas += currentMonthRealtimeMesas;\r\n\r\n      chartData = Object.keys(monthlyOrders).map((monthKey) => ({\r\n        name: monthNames[parseInt(monthKey.split('-')[1]) - 1],\r\n        monthKey: monthKey,\r\n        Domicilios: monthlyOrders[monthKey].domicilios,\r\n        Mesas: monthlyOrders[monthKey].mesas,\r\n      }));\r\n    } else {\r\n      const filteredDailyOrders = {};\r\n\r\n      pedidosDiariosGuardadosData.forEach((summary) => {\r\n        const summaryDate = new Date(summary.date).toISOString().split('T')[0];\r\n        if (\r\n          summaryDate >= ordersStartDate.toISOString().split('T')[0] &&\r\n          summaryDate <= ordersEndDate.toISOString().split('T')[0]\r\n        ) {\r\n          if (ordersFilterRange === 'year' && selectedMonth) {\r\n            const monthKey = `${new Date(summary.date).getFullYear()}-${String(\r\n              new Date(summary.date).getMonth() + 1\r\n            ).padStart(2, '0')}`;\r\n            if (monthKey === selectedMonth) {\r\n              filteredDailyOrders[summaryDate] = {\r\n                Domicilios: summary.domicilios || 0,\r\n                Mesas: summary.mesas || 0,\r\n              };\r\n            }\r\n          } else {\r\n            filteredDailyOrders[summaryDate] = {\r\n              Domicilios: summary.domicilios || 0,\r\n              Mesas: summary.mesas || 0,\r\n            };\r\n          }\r\n        }\r\n      });\r\n\r\n      if (today >= ordersStartDate && today <= ordersEndDate) {\r\n        let currentDayRealtimeDomicilios = 0;\r\n        let currentDayRealtimeMesas = 0;\r\n\r\n        orders.forEach((order) => {\r\n          const orderDate = order.createdAt?.toDate\r\n            ? new Date(order.createdAt.toDate()).toISOString().split('T')[0]\r\n            : null;\r\n          if (orderDate === todayISO) {\r\n            currentDayRealtimeDomicilios++;\r\n          }\r\n        });\r\n\r\n        tableOrders.forEach((tableOrder) => {\r\n          const tableOrderDate = tableOrder.createdAt?.toDate\r\n            ? new Date(tableOrder.createdAt.toDate()).toISOString().split('T')[0]\r\n            : null;\r\n          if (tableOrderDate === todayISO) {\r\n            currentDayRealtimeMesas++;\r\n          }\r\n        });\r\n\r\n        if (ordersFilterRange === 'year' && selectedMonth) {\r\n          const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n          if (currentMonth === selectedMonth) {\r\n            filteredDailyOrders[todayISO] = {\r\n              Domicilios: (filteredDailyOrders[todayISO]?.Domicilios || 0) + currentDayRealtimeDomicilios,\r\n              Mesas: (filteredDailyOrders[todayISO]?.Mesas || 0) + currentDayRealtimeMesas,\r\n            };\r\n          }\r\n        } else {\r\n          filteredDailyOrders[todayISO] = {\r\n            Domicilios: (filteredDailyOrders[todayISO]?.Domicilios || 0) + currentDayRealtimeDomicilios,\r\n            Mesas: (filteredDailyOrders[todayISO]?.Mesas || 0) + currentDayRealtimeMesas,\r\n          };\r\n        }\r\n      }\r\n\r\n      const sortedDates = Object.keys(filteredDailyOrders).sort((a, b) => new Date(a) - new Date(b));\r\n      chartData = sortedDates.map((date) => ({\r\n        name: date,\r\n        Domicilios: filteredDailyOrders[date].Domicilios,\r\n        Mesas: filteredDailyOrders[date].Mesas,\r\n      }));\r\n    }\r\n\r\n    setDailyOrdersChartData(chartData);\r\n  }, [\r\n    orders,\r\n    tableOrders,\r\n    pedidosDiariosGuardadosData,\r\n    ordersFilterRange,\r\n    ordersCustomStartDate,\r\n    ordersCustomEndDate,\r\n    isAuthReady,\r\n    selectedMonth,\r\n  ]);\r\n\r\n  // --- Guardar ingresos diarios (hoy) ---\r\n  const handleSaveDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n\r\n      let da = 0,\r\n        dd = 0,\r\n        ma = 0,\r\n        md = 0;\r\n\r\n      orders.forEach((o) => {\r\n        const dISO = o.createdAt?.toDate ? new Date(o.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (dISO === today) da += Number(o.total || 0);\r\n      });\r\n      tableOrders.forEach((t) => {\r\n        const dISO = t.createdAt?.toDate ? new Date(t.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (dISO === today) ma += Number(t.total || 0);\r\n      });\r\n      breakfastOrders.forEach((b) => {\r\n        if (getDocDateISO(b) === today) {\r\n          const amount = Number(b.total || 0);\r\n          const orderType = (b.breakfasts?.[0]?.orderType || b.orderType || '').toLowerCase();\r\n          const hasAddress = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n          if (orderType === 'table' || orderType === 'takeaway') md += amount;\r\n          else if (hasAddress) dd += amount;\r\n          else dd += amount;\r\n        }\r\n      });\r\n\r\n      const totalIncome = da + dd + ma + md;\r\n\r\n      const qY = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const snap = await getDocs(qY);\r\n      const payload = {\r\n        date: today,\r\n        categories: {\r\n          domiciliosAlmuerzo: da,\r\n          domiciliosDesayuno: dd,\r\n          mesasAlmuerzo: ma,\r\n          mesasDesayuno: md,\r\n        },\r\n        totalIncome,\r\n        updatedAt: serverTimestamp(),\r\n      };\r\n\r\n      if (snap.empty) {\r\n        await addDoc(collection(db, INGRESOS_COLLECTION), {\r\n          ...payload,\r\n          createdAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Resumen de ingresos para ${today} guardado correctamente.`);\r\n      } else {\r\n        await updateDoc(doc(db, INGRESOS_COLLECTION, snap.docs[0].id), payload);\r\n        setSuccess(`Resumen de ingresos para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al guardar/actualizar resumen de ingresos: ${error.message}`);\r\n      console.error('Error al guardar ingresos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, tableOrders, breakfastOrders, setSuccess, setError]);\r\n\r\n  // --- Cierre automático diario (ayer) ---\r\n  useEffect(() => {\r\n    if (!isAuthReady) return;\r\n\r\n    const saveDay = async () => {\r\n      try {\r\n        const now = new Date();\r\n        const todayISO = now.toISOString().split('T')[0];\r\n        const y = new Date(now);\r\n        y.setDate(y.getDate() - 1);\r\n        y.setHours(0, 0, 0, 0);\r\n        const yesterdayISO = y.toISOString().split('T')[0];\r\n\r\n        const inDayISO = (ts, targetISO) => {\r\n          const d = ts?.toDate ? ts.toDate() : ts ? new Date(ts) : null;\r\n          if (!d) return false;\r\n          return d.toISOString().split('T')[0] === targetISO;\r\n        };\r\n\r\n        let da = 0,\r\n          dd = 0,\r\n          ma = 0,\r\n          md = 0;\r\n\r\n        orders.forEach((o) => {\r\n          if (inDayISO(o.createdAt, yesterdayISO)) da += Number(o.total || 0);\r\n        });\r\n        tableOrders.forEach((t) => {\r\n          if (inDayISO(t.createdAt, yesterdayISO)) ma += Number(t.total || 0);\r\n        });\r\n        breakfastOrders.forEach((b) => {\r\n          const bISO = getDocDateISO(b);\r\n          if (bISO !== yesterdayISO) return;\r\n          const amount = Number(b.total || 0);\r\n          const orderType = (b.breakfasts?.[0]?.orderType || b.orderType || '').toLowerCase();\r\n          const hasAddress = !!(b.address?.address || b.breakfasts?.[0]?.address?.address);\r\n          if (orderType === 'table' || orderType === 'takeaway') md += amount;\r\n          else if (hasAddress) dd += amount;\r\n          else dd += amount;\r\n        });\r\n\r\n        const payloadY = {\r\n          date: yesterdayISO,\r\n          categories: {\r\n            domiciliosAlmuerzo: da,\r\n            domiciliosDesayuno: dd,\r\n            mesasAlmuerzo: ma,\r\n            mesasDesayuno: md,\r\n          },\r\n          totalIncome: da + dd + ma + md,\r\n          updatedAt: serverTimestamp(),\r\n        };\r\n\r\n        // Upsert AYER\r\n        const qY = query(collection(db, INGRESOS_COLLECTION), where('date', '==', yesterdayISO));\r\n        const snapY = await getDocs(qY);\r\n        if (snapY.empty) {\r\n          await addDoc(collection(db, INGRESOS_COLLECTION), { ...payloadY, createdAt: serverTimestamp() });\r\n        } else {\r\n          await updateDoc(doc(db, INGRESOS_COLLECTION, snapY.docs[0].id), payloadY);\r\n        }\r\n\r\n        // Sembrar HOY vacío si no existe\r\n        const qToday = query(collection(db, INGRESOS_COLLECTION), where('date', '==', todayISO));\r\n        const snapToday = await getDocs(qToday);\r\n        if (snapToday.empty) {\r\n          await addDoc(collection(db, INGRESOS_COLLECTION), {\r\n            date: todayISO,\r\n            categories: { domiciliosAlmuerzo: 0, domiciliosDesayuno: 0, mesasAlmuerzo: 0, mesasDesayuno: 0 },\r\n            totalIncome: 0,\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          });\r\n        }\r\n      } catch (e) {\r\n        setError?.(`Cierre automático: ${e.message}`);\r\n        console.error('Cierre automático diario', e);\r\n      }\r\n    };\r\n\r\n    // Programar a las 00:00:05\r\n    const schedule = () => {\r\n      const now = new Date();\r\n      const next = new Date(now);\r\n      next.setDate(now.getDate() + 1);\r\n      next.setHours(0, 0, 5, 0);\r\n      const ms = next.getTime() - now.getTime();\r\n      return setTimeout(async () => {\r\n        await saveDay();\r\n        schedule();\r\n      }, ms);\r\n    };\r\n\r\n    const timer = schedule();\r\n    return () => clearTimeout(timer);\r\n  }, [isAuthReady, orders, tableOrders, breakfastOrders, setError]);\r\n\r\n  // --- Guardar / borrar conteo de pedidos diarios ---\r\n  const handleDeleteDailyIngresos = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, INGRESOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, INGRESOS_COLLECTION, docToDelete.id));\r\n        setSuccess(`Resumen de ingresos para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess(`No se encontró un resumen de ingresos para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al eliminar resumen de ingresos: ${error.message}`);\r\n      console.error('Error al eliminar ingresos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  const handleSaveDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      let currentDayDomicilios = 0;\r\n      let currentDayMesas = 0;\r\n\r\n      orders.forEach((order) => {\r\n        const orderDate = order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toISOString().split('T')[0] : null;\r\n        if (orderDate === today) {\r\n          currentDayDomicilios++;\r\n        }\r\n      });\r\n\r\n      tableOrders.forEach((tableOrder) => {\r\n        const tableOrderDate = tableOrder.createdAt?.toDate\r\n          ? new Date(tableOrder.createdAt.toDate()).toISOString().split('T')[0]\r\n          : null;\r\n        if (tableOrderDate === today) {\r\n          currentDayMesas++;\r\n        }\r\n      });\r\n\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (existingSummarySnapshot.empty) {\r\n        await addDoc(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), {\r\n          date: today,\r\n          domicilios: currentDayDomicilios,\r\n          mesas: currentDayMesas,\r\n          createdAt: serverTimestamp(),\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Conteo de pedidos diarios para ${today} guardado correctamente.`);\r\n      } else {\r\n        const docToUpdate = existingSummarySnapshot.docs[0];\r\n        await updateDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToUpdate.id), {\r\n          domicilios: currentDayDomicilios,\r\n          mesas: currentDayMesas,\r\n          updatedAt: serverTimestamp(),\r\n        });\r\n        setSuccess(`Conteo de pedidos diarios para ${today} actualizado correctamente.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al guardar/actualizar conteo de pedidos diarios: ${error.message}`);\r\n      console.error('Error al guardar conteo de pedidos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, orders, tableOrders, setSuccess, setError]);\r\n\r\n  const handleDeleteDailyOrders = useCallback(async () => {\r\n    setLoadingData(true);\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const q = query(collection(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION), where('date', '==', today));\r\n      const existingSummarySnapshot = await getDocs(q);\r\n\r\n      if (!existingSummarySnapshot.empty) {\r\n        const docToDelete = existingSummarySnapshot.docs[0];\r\n        await deleteDoc(doc(db, PEDIDOS_DIARIOS_GUARDADOS_COLLECTION, docToDelete.id));\r\n        setSuccess(`Conteo de pedidos diarios para ${today} eliminado correctamente.`);\r\n      } else {\r\n        setSuccess(`No se encontró un conteo de pedidos diarios para ${today} para eliminar.`);\r\n      }\r\n    } catch (error) {\r\n      setError(`Error al eliminar conteo de pedidos diarios: ${error.message}`);\r\n      console.error('Error al eliminar conteo de pedidos diarios:', error);\r\n    } finally {\r\n      setLoadingData(false);\r\n    }\r\n  }, [db, setSuccess, setError]);\r\n\r\n  return {\r\n    loadingData,\r\n    orders,\r\n    tableOrders,\r\n    breakfastOrders,\r\n    users,\r\n    totals,\r\n    statusCounts,\r\n    userActivity,\r\n\r\n    // ALIAS para que coincida con tu DashboardCharts:\r\n    ingresosCategoriasData: dailySalesChartData,\r\n    gastosPorTiendaData: Object.entries(totals?.expensesByProvider?.byProvider || {})\r\n      .map(([name, value]) => ({ name, value })),\r\n    pedidosDiariosChartData: dailyOrdersChartData,\r\n    statusPieChartData,\r\n\r\n    // NUEVO: desglose robusto por Tipo de Venta\r\n    saleTypeBreakdown,\r\n\r\n    // (si ya los tienes) — handlers:\r\n    handleSaveDailyIngresos,\r\n    handleDeleteDailyIngresos,\r\n    handleSaveDailyOrders,\r\n    handleDeleteDailyOrders,\r\n  };\r\n\r\n};\r\n","// src/components/Admin/DashboardCharts.js\r\nimport React, { Fragment, useState, useEffect, useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  PieChart, Pie, Cell, Label\r\n} from 'recharts';\r\nimport { DollarSign, MoreVertical, Save, Trash2, TrendingUp, Package, ArrowLeft } from 'lucide-react';\r\nimport { Popover, PopoverButton, PopoverPanel, Transition } from '@headlessui/react';\r\nimport { collection, onSnapshot, query, orderBy } from 'firebase/firestore';\r\nimport { db } from '../../config/firebase';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { BAR_COLORS, PIE_COLORS } from './dashboardConstants';\r\nimport { isMobile as checkIsMobile } from '../../utils/Helpers';\r\n\r\n// Custom scrollbar styles\r\nconst scrollbarStyles = `\r\n  .custom-scrollbar::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-track {\r\n    background: var(--scrollbar-track-color, #2d3748);\r\n    border-radius: 10px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-thumb {\r\n    background: var(--scrollbar-thumb-color, #4a5568);\r\n    border-radius: 10px;\r\n  }\r\n  .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n    background: var(--scrollbar-thumb-hover-color, #64748b);\r\n  }\r\n  .custom-scrollbar {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: var(--scrollbar-thumb-color, #4a5568) var(--scrollbar-track-color, #2d3748);\r\n  }\r\n`;\r\n\r\nconst SkeletonLoader = ({ type, theme, isMobile }) => {\r\n  if (type === 'bar') {\r\n    const numBars = isMobile ? 5 : 7;\r\n    return (\r\n      <div className=\"flex h-full items-end justify-around p-4 animate-pulse\">\r\n        {Array.from({ length: numBars }).map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className={classNames(\r\n              'rounded-t-md',\r\n              theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200',\r\n              'mx-1'\r\n            )}\r\n            style={{ width: `${100 / numBars - 5}%`, height: `${Math.random() * 70 + 30}%` }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else if (type === 'pie') {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full animate-pulse\">\r\n        <div className={classNames(\r\n          isMobile ? 'w-32 h-32' : 'w-40 h-40',\r\n          'rounded-full',\r\n          theme === 'dark' ? 'bg-gray-700' : 'bg-gray-200'\r\n        )}></div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n// Colombian Peso formatter\r\nconst copFormatter = new Intl.NumberFormat('es-CO', {\r\n  style: 'currency',\r\n  currency: 'COP',\r\n  minimumFractionDigits: 0,\r\n});\r\n\r\n// Custom Tooltip for Bar Charts\r\nconst CustomBarTooltip = ({ active, payload, label, theme, chartTextColor, copFormatter, isOrderChart = false }) => {\r\n  if (active && payload && payload.length) {\r\n    const total = payload.reduce((sum, entry) => sum + entry.value, 0);\r\n    const formatValue = isOrderChart\r\n      ? (value) => value.toLocaleString()\r\n      : (value) => (typeof copFormatter === 'function' ? copFormatter(value) : copFormatter.format(value));\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 5 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: 5 }}\r\n        className=\"custom-tooltip p-3 rounded-xl shadow-lg border\"\r\n        style={{\r\n          backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n          borderColor: theme === 'dark' ? 'rgba(75, 85, 99, 0.7)' : 'rgba(229, 231, 235, 0.7)',\r\n          backdropFilter: 'blur(8px)',\r\n          color: chartTextColor,\r\n          fontSize: '14px',\r\n        }}\r\n      >\r\n        <p className=\"font-bold mb-1\">{label}</p>\r\n        {payload.map((entry, index) => (\r\n          <p key={`item-${index}`} style={{ color: entry.color || chartTextColor }}>\r\n            {entry.name}: <span className=\"font-semibold\">{formatValue(entry.value)}</span>\r\n          </p>\r\n        ))}\r\n        <p className=\"font-bold mt-2 border-t pt-2\" style={{ borderColor: theme === 'dark' ? '#4b5563' : '#e5e7eb' }}>\r\n          Total: {formatValue(total)}\r\n        </p>\r\n      </motion.div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n// Custom Tooltip for Pie Chart\r\nconst CustomPieTooltip = ({ active, payload, theme, chartTextColor }) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 5 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: 5 }}\r\n        className=\"custom-tooltip p-3 rounded-xl shadow-lg border\"\r\n        style={{\r\n          backgroundColor: theme === 'dark' ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)',\r\n          borderColor: theme === 'dark' ? 'rgba(75, 85, 99, 0.7)' : 'rgba(229, 231, 235, 0.7)',\r\n          backdropFilter: 'blur(8px)',\r\n          color: chartTextColor,\r\n          fontSize: '14px',\r\n        }}\r\n      >\r\n        <p className=\"font-bold mb-1\" style={{ color: data.color || chartTextColor }}>{data.name}</p>\r\n        <p>\r\n          Valor: <span className=\"font-semibold\">{data.value}</span>\r\n        </p>\r\n        <p>\r\n          Porcentaje: <span className=\"font-semibold\">{`${(data.percent * 100).toFixed(1)}%`}</span>\r\n        </p>\r\n      </motion.div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DashboardCharts = React.memo(({\r\n  dailySalesChartData,\r\n  dailyOrdersChartData,\r\n  statusPieChartData,\r\n  theme = 'dark',\r\n  chartTextColor = '#ffffff',\r\n  salesFilterRange,\r\n  setSalesFilterRange = () => {},\r\n  salesCustomStartDate,\r\n  setSalesCustomStartDate = () => {},\r\n  salesCustomEndDate,\r\n  setSalesCustomEndDate = () => {},\r\n  ordersFilterRange,\r\n  setOrdersFilterRange = () => {},\r\n  ordersCustomStartDate,\r\n  setOrdersCustomStartDate = () => {},\r\n  ordersCustomEndDate,\r\n  setOrdersCustomEndDate = () => {},\r\n  handleSaveDailyIngresos = () => {},\r\n  handleDeleteDailyIngresos = () => {},\r\n  handleSaveDailyOrders = () => {},\r\n  handleDeleteDailyOrders = () => {},\r\n  handleSaveDailyExpenses = () => {},\r\n  handleDeleteDailyExpenses = () => {},\r\n  loading,\r\n  selectedMonth,\r\n  setSelectedMonth = () => {}\r\n}) => {\r\n  const [isMobileDevice, setIsMobileDevice] = useState(false);\r\n  const [payments, setPayments] = useState([]);\r\n  const [expenseFilterRange, setExpenseFilterRange] = useState('30_days');\r\n  const [expenseCustomStartDate, setExpenseCustomStartDate] = useState(null);\r\n  const [expenseCustomEndDate, setExpenseCustomEndDate] = useState(null);\r\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const paymentsQuery = query(collection(db, 'payments'), orderBy('timestamp', 'desc'));\r\n    const unsubscribe = onSnapshot(paymentsQuery, (snapshot) => {\r\n      setPayments(\r\n        snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))\r\n      );\r\n    }, (error) => console.error(`Error al cargar pagos: ${error.message}`));\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobileDevice(checkIsMobile());\r\n    };\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const dailyExpensesChartData = useMemo(() => {\r\n    const groupedByDate = payments.reduce((acc, payment) => {\r\n      if (!payment.timestamp) return acc;\r\n      const date = new Date(payment.timestamp.toDate());\r\n      const now = new Date();\r\n      let startDate;\r\n      if (expenseFilterRange === '7_days') {\r\n        startDate = new Date(now.setDate(now.getDate() - 7));\r\n      } else if (expenseFilterRange === '30_days') {\r\n        startDate = new Date(now.setDate(now.getDate() - 30));\r\n      } else if (expenseFilterRange === 'year') {\r\n        startDate = new Date(now.getFullYear(), 0, 1);\r\n      } else if (expenseFilterRange === 'custom' && expenseCustomStartDate && expenseCustomEndDate) {\r\n        startDate = new Date(expenseCustomStartDate);\r\n      } else {\r\n        startDate = new Date(0);\r\n      }\r\n      if (expenseFilterRange === 'custom' && expenseCustomEndDate) {\r\n        const endDate = new Date(expenseCustomEndDate);\r\n        if (date < startDate || date > endDate) return acc;\r\n      } else if (date < startDate) {\r\n        return acc;\r\n      }\r\n      const dateKey = date.toISOString().split('T')[0];\r\n      if (!acc[dateKey]) {\r\n        acc[dateKey] = { name: dateKey, Total: 0 };\r\n      }\r\n      acc[dateKey].Total += payment.amount;\r\n      return acc;\r\n    }, {});\r\n    return Object.values(groupedByDate).sort((a, b) => new Date(a.name) - new Date(b.name));\r\n  }, [payments, expenseFilterRange, expenseCustomStartDate, expenseCustomEndDate]);\r\n\r\n  const totalExpenses = useMemo(() => payments.reduce((sum, payment) => sum + payment.amount, 0), [payments]);\r\n  const totalOrders = useMemo(() => statusPieChartData.reduce((sum, entry) => sum + entry.value, 0), [statusPieChartData]);\r\n\r\n  const aggregatedPaymentsByRecipient = useMemo(() => {\r\n    const grouped = payments.reduce((acc, payment) => {\r\n      const storeName = payment.store || 'Desconocido';\r\n      if (!acc[storeName]) {\r\n        acc[storeName] = { totalAmount: 0, payments: [] };\r\n      }\r\n      acc[storeName].totalAmount += payment.amount;\r\n      acc[storeName].payments.push(payment);\r\n      return acc;\r\n    }, {});\r\n    return Object.entries(grouped)\r\n      .map(([store, data]) => ({ store, ...data }))\r\n      .sort((a, b) => b.totalAmount - a.totalAmount);\r\n  }, [payments]);\r\n\r\n  const paymentsForSelectedRecipient = useMemo(() => {\r\n    if (!selectedRecipient) return [];\r\n    return payments\r\n      .filter(payment => payment.store === selectedRecipient)\r\n      .sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate());\r\n  }, [payments, selectedRecipient]);\r\n\r\n  const chartVariants = {\r\n    hidden: { opacity: 0, scale: 0.98, y: 10 },\r\n    visible: { opacity: 1, scale: 1, y: 0, transition: { duration: 0.6, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.98, y: 10, transition: { duration: 0.4, ease: \"easeIn\" } },\r\n  };\r\n\r\n  const pieChartVariants = {\r\n    hidden: { opacity: 0, scale: 0.9 },\r\n    visible: { opacity: 1, scale: 1, transition: { duration: 0.7, ease: \"easeOut\" } },\r\n    exit: { opacity: 0, scale: 0.9, transition: { duration: 0.5, ease: \"easeIn\" } },\r\n  };\r\n\r\n  const chartMinWidth = isMobileDevice ? \"min-w-[700px]\" : \"min-w-0\";\r\n  const chartHeight = isMobileDevice ? \"h-[250px]\" : \"h-[300px]\";\r\n\r\n  return (\r\n<div className=\"flex flex-col gap-12 mb-8 pb-12 w-full\">\r\n      <style dangerouslySetInnerHTML={{ __html: scrollbarStyles }} />\r\n      {/* Daily Sales Chart */}\r\n      <div className={classNames(\r\n          theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n          isMobileDevice ? 'p-4' : 'p-6',\r\n          'rounded-2xl shadow-xl border',\r\n          theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n          'relative min-h-[450px] flex flex-col'\r\n        )}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n            <DollarSign className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-green-400\")} />\r\n            Ingresos Diarios\r\n          </h3>\r\n          <Popover className=\"relative\">\r\n            <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n              <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n            </PopoverButton>\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <PopoverPanel className={classNames(\r\n                \"absolute z-50 mt-2\",\r\n                \"right-0 left-auto\",\r\n                isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                \"origin-top-right\",\r\n                \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n              )}>\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={handleSaveDailyIngresos}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    )}\r\n                  >\r\n                    <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                    {loading ? 'Guardando...' : 'Guardar Ventas del Día'}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDeleteDailyIngresos()}\r\n                    disabled={loading}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                    )}\r\n                  >\r\n                    <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                    Eliminar Ventas del Día\r\n                  </button>\r\n                  <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('7_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver últimos 7 días\r\n                  </button>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('30_days'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver todo el mes\r\n                  </button>\r\n                  <button\r\n                    onClick={() => { setSalesFilterRange('year'); setSalesCustomStartDate(null); setSalesCustomEndDate(null); setSelectedMonth(null); }}\r\n                    className={classNames(\r\n                      \"block w-full text-left px-4 py-2 transition-colors\",\r\n                      isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                      theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                    }\r\n                  >\r\n                    Ver todo el año\r\n                  </button>\r\n                  <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                  <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                  <div className=\"px-4 py-2\">\r\n                    <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={salesCustomStartDate ? salesCustomStartDate.toISOString().split('T')[0] : ''}\r\n                      onChange={(e) => { setSalesCustomStartDate(new Date(e.target.value)); setSalesFilterRange('custom'); setSelectedMonth(null); }}\r\n                      className={classNames(\r\n                        \"block w-full rounded-md shadow-sm p-2\",\r\n                        isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                        theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                      )}\r\n                    />\r\n                  </div>\r\n                  <div className=\"px-4 py-2\">\r\n                    <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={salesCustomEndDate ? salesCustomEndDate.toISOString().split('T')[0] : ''}\r\n                      onChange={(e) => { setSalesCustomEndDate(new Date(e.target.value)); setSalesFilterRange('custom'); }}\r\n                      className={classNames(\r\n                        \"block w-full rounded-md shadow-sm p-2\",\r\n                        isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                        theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </PopoverPanel>\r\n            </Transition>\r\n          </Popover>\r\n        </div>\r\n        <motion.div\r\n          className={classNames(\r\n            isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n            'relative flex flex-col flex-grow'\r\n          )}\r\n          variants={chartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          {salesFilterRange === 'year' && selectedMonth && (\r\n            <motion.button\r\n              initial={{ opacity: 0, x: -10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              exit={{ opacity: 0, x: -10 }}\r\n              onClick={() => setSelectedMonth(null)}\r\n              className=\"mb-4 text-blue-500 hover:underline text-sm self-start transition-all duration-200\"\r\n            >\r\n              <ArrowLeft className=\"w-4 h-4 inline-block mr-2\" />Volver al resumen anual\r\n            </motion.button>\r\n          )}\r\n          {loading ? (\r\n            <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n          ) : (\r\n            <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                  data={dailySalesChartData}\r\n                  margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                  barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n                  barGap={1}\r\n                >\r\n                  <CartesianGrid\r\n                    strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n                    stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n                    vertical={false}\r\n                  />\r\n                  <XAxis\r\n                    dataKey=\"name\"\r\n                    stroke={chartTextColor}\r\n                    tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                    angle={-45}\r\n                    textAnchor=\"end\"\r\n                    interval={0}\r\n                    height={60}\r\n                  />\r\n                  <YAxis\r\n                    stroke={chartTextColor}\r\n                    tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                    tickFormatter={(value) => copFormatter.format(value)}\r\n                    width={isMobileDevice ? 50 : 80}\r\n                  />\r\n                  <Tooltip\r\n                    cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n                    content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={copFormatter} />}\r\n                  />\r\n                  <Legend\r\n                    wrapperStyle={{ color: chartTextColor, fontSize: isMobileDevice ? 10 : 13, paddingTop: '15px', paddingBottom: '20px' }}\r\n                    align=\"center\"\r\n                    verticalAlign=\"top\"\r\n                    iconType=\"circle\"\r\n                  />\r\n                  <Bar\r\n                    dataKey=\"Domicilios Almuerzo\"\r\n                    fill=\"#34D399\"\r\n                    stroke=\"#34D399\"\r\n                    radius={[8, 8, 0, 0]}\r\n                    maxBarSize={isMobileDevice ? 12 : 25}\r\n                    animationDuration={800}\r\n                    onClick={(data) => { if (salesFilterRange === 'year' && data.monthKey) setSelectedMonth(data.monthKey); }}\r\n                  />\r\n                  <Bar\r\n                    dataKey=\"Domicilios Desayuno\"\r\n                    fill=\"#60A5FA\"\r\n                    stroke=\"#60A5FA\"\r\n                    radius={[8, 8, 0, 0]}\r\n                    maxBarSize={isMobileDevice ? 12 : 25}\r\n                    animationDuration={800}\r\n                    onClick={(data) => { if (salesFilterRange === 'year' && data.monthKey) setSelectedMonth(data.monthKey); }}\r\n                  />\r\n                  <Bar\r\n                    dataKey=\"Mesas/Llevar Almuerzo\"\r\n                    fill=\"#FBBF24\"\r\n                    stroke=\"#FBBF24\"\r\n                    radius={[8, 8, 0, 0]}\r\n                    maxBarSize={isMobileDevice ? 12 : 25}\r\n                    animationDuration={800}\r\n                    onClick={(data) => { if (salesFilterRange === 'year' && data.monthKey) setSelectedMonth(data.monthKey); }}\r\n                  />\r\n                  <Bar\r\n                    dataKey=\"Mesas/Llevar Desayuno\"\r\n                    fill=\"#F472B6\"\r\n                    stroke=\"#F472B6\"\r\n                    radius={[8, 8, 0, 0]}\r\n                    maxBarSize={isMobileDevice ? 12 : 25}\r\n                    animationDuration={800}\r\n                    onClick={(data) => { if (salesFilterRange === 'year' && data.monthKey) setSelectedMonth(data.monthKey); }}\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* New 2x2 Grid for Expenses Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n        {/* Daily Expenses Chart */}\r\n        <div className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col'\r\n          )}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n              <DollarSign className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n              Gastos Diarios\r\n            </h3>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n                <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-50 mt-2\",\r\n                  \"right-0 left-auto\",\r\n                  isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"origin-top-right\",\r\n                  \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyExpenses}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                      {loading ? 'Guardando...' : 'Guardar Gastos del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyExpenses()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                      Eliminar Gastos del Día\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('7_days'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('30_days'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setExpenseFilterRange('year'); setExpenseCustomStartDate(null); setExpenseCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={expenseCustomStartDate ? expenseCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setExpenseCustomStartDate(new Date(e.target.value)); setExpenseFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={expenseCustomEndDate ? expenseCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setExpenseCustomEndDate(new Date(e.target.value)); setExpenseFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </div>\r\n          <motion.div\r\n            className={classNames(\r\n              isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n              'relative flex flex-col flex-grow'\r\n            )}\r\n            variants={chartVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            {loading ? (\r\n              <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n            ) : (\r\n              <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={dailyExpensesChartData}\r\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                    barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n                    barGap={1}\r\n                  >\r\n                    <CartesianGrid\r\n                      strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n                      stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n                      vertical={false}\r\n                    />\r\n                    <XAxis\r\n                      dataKey=\"name\"\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      angle={-45}\r\n                      textAnchor=\"end\"\r\n                      interval={0}\r\n                      height={60}\r\n                    />\r\n                    <YAxis\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      tickFormatter={(value) => copFormatter.format(value)}\r\n                      width={isMobileDevice ? 50 : 80}\r\n                    />\r\n                    <Tooltip\r\n                      cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n                      content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={copFormatter} />}\r\n                    />\r\n                    <Legend\r\n                      wrapperStyle={{ color: chartTextColor, paddingTop: '15px', fontSize: isMobileDevice ? 10 : 13 }}\r\n                      align=\"center\"\r\n                      verticalAlign=\"top\"\r\n                      iconType=\"circle\"\r\n                    />\r\n                    <Bar\r\n                      dataKey=\"Total\"\r\n                      fill=\"#EF4444\"\r\n                      stroke=\"#EF4444\"\r\n                      radius={[8, 8, 0, 0]}\r\n                      maxBarSize={isMobileDevice ? 12 : 25}\r\n                      animationDuration={800}\r\n                    />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Expenses Summary Card */}\r\n        <motion.div\r\n          className={classNames(\r\n            `bg-${theme === 'dark' ? 'gray-800' : 'white'} p-6 rounded-2xl shadow-xl transform transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl border border-${theme === 'dark' ? 'gray-700' : 'gray-200'}`\r\n          )}\r\n          variants={chartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-5\">\r\n            <h3 className=\"text-2xl font-bold text-gray-100\">Gastos</h3>\r\n            <DollarSign className=\"text-red-400 w-10 h-10 animate-pulse\" />\r\n          </div>\r\n          <div className=\"space-y-4 text-base text-gray-300\">\r\n            <div className=\"flex justify-between items-center text-xl font-semibold\">\r\n              <span className=\"text-gray-200\">Total de Gastos:</span>\r\n              <span className=\"font-extrabold text-red-400\">\r\n                {copFormatter.format(totalExpenses)}\r\n              </span>\r\n            </div>\r\n            <div\r\n              className=\"border-t border-dashed my-4\"\r\n              style={{ borderColor: theme === 'dark' ? '#4b5563' : '#d1d5db' }}\r\n            ></div>\r\n            {!selectedRecipient ? (\r\n              <>\r\n                <p className=\"text-gray-400 text-sm mb-2\">Gastos por Remitente:</p>\r\n                <div className=\"text-sm max-h-52 overflow-y-auto custom-scrollbar pr-2\">\r\n                  {aggregatedPaymentsByRecipient.length === 0 ? (\r\n                    <p className=\"text-gray-500 text-center py-6\">\r\n                      Aún no hay gastos registrados. ¡Empieza a añadir algunos! 📝\r\n                    </p>\r\n                  ) : (\r\n                    aggregatedPaymentsByRecipient.map((entry, idx) => (\r\n                      <button\r\n                        key={idx}\r\n                        onClick={() => setSelectedRecipient(entry.store)}\r\n                        className=\"flex justify-between items-center w-full py-3 border-b last:border-b-0 transition-colors duration-200 hover:bg-gray-700 dark:hover:bg-gray-800 rounded-md px-2 -mx-2 cursor-pointer\"\r\n                        style={{ borderColor: theme === 'dark' ? '#374151' : '#e5e7eb' }}\r\n                      >\r\n                        <span className=\"text-gray-300 flex-1 pr-3 truncate text-left font-medium\">\r\n                          {entry.store}\r\n                        </span>\r\n                        <div className=\"flex flex-col items-end\">\r\n                          <span className=\"text-red-300 font-semibold\">\r\n                            {copFormatter.format(entry.totalAmount)}\r\n                          </span>\r\n                          <span className=\"text-gray-500 text-xs mt-1\">\r\n                            ({entry.payments.length} movimientos)\r\n                          </span>\r\n                        </div>\r\n                      </button>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => setSelectedRecipient(null)}\r\n                  className=\"flex items-center text-blue-400 hover:underline text-sm mb-4 transition-colors\"\r\n                >\r\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" /> Volver a Gastos por Remitente\r\n                </button>\r\n                <h4 className=\"text-lg font-semibold text-gray-200 mb-3\">{selectedRecipient}</h4>\r\n                <div className={classNames(\"text-sm max-h-52 overflow-y-auto custom-scrollbar pr-2\", isMobileDevice ? \"overflow-x-auto\" : \"overflow-x-hidden\")}>\r\n                  <div className=\"min-w-full inline-block align-middle\">\r\n                    {paymentsForSelectedRecipient.length === 0 ? (\r\n                      <p className=\"text-gray-500 text-center py-6\">\r\n                        No hay movimientos para este remitente en el rango de fechas seleccionado.\r\n                      </p>\r\n                    ) : (\r\n                      paymentsForSelectedRecipient.map((payment, idx) => (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"flex items-center py-3 border-b last:border-b-0 transition-colors duration-200 hover:bg-gray-700 dark:hover:bg-gray-800 rounded-md px-2 -mx-2\"\r\n                          style={{ borderColor: theme === 'dark' ? '#374151' : '#e5e7eb' }}\r\n                        >\r\n                          <span className=\"text-gray-400 font-normal mr-3 min-w-[80px]\">\r\n                            {payment.name || 'N/A'}\r\n                          </span>\r\n                          <span className=\"text-gray-300 font-light text-nowrap mr-3 min-w-[150px]\">\r\n                            {new Date(payment.timestamp?.toDate()).toLocaleString('es-CO', { dateStyle: 'short', timeStyle: 'short' })}\r\n                          </span>\r\n                          <span className=\"text-red-300 font-semibold text-right flex-grow\">\r\n                            {copFormatter.format(payment.amount)}\r\n                          </span>\r\n                        </div>\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Existing Daily Orders and Status Pie Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n        {/* Daily Orders Chart */}\r\n        <div className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col'\r\n          )}>\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center justify-between\">\r\n            <span className=\"flex items-center\">\r\n              <Package className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-purple-400\")} />\r\n              Pedidos Diarios\r\n            </span>\r\n            <Popover className=\"relative\">\r\n              <PopoverButton className=\"p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\">\r\n                <MoreVertical className={classNames(isMobileDevice ? \"w-4 h-4\" : \"w-5 h-5\", \"text-gray-400\")} />\r\n              </PopoverButton>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <PopoverPanel className={classNames(\r\n                  \"absolute z-50 mt-2\",\r\n                  \"right-0 left-auto\",\r\n                  isMobileDevice ? \"w-[150px] text-sm\" : \"w-56\",\r\n                  \"rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                  theme === 'dark' ? 'bg-gray-700' : 'bg-white',\r\n                  \"origin-top-right\",\r\n                  \"max-h-[80vh] overflow-y-auto custom-scrollbar\"\r\n                )}>\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={handleSaveDailyOrders}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Save className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n                      {loading ? 'Guardando...' : 'Guardar Pedidos del Día'}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteDailyOrders()}\r\n                      disabled={loading}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 flex items-center mt-1 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        loading ? 'text-gray-400 cursor-not-allowed' : (theme === 'dark' ? 'text-red-300 hover:bg-gray-600' : 'text-red-600 hover:bg-gray-100')\r\n                      )}\r\n                    >\r\n                      <Trash2 className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-red-400\")} />\r\n                      Eliminar Pedidos del Día\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('7_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver últimos 7 días\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('30_days'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el mes\r\n                    </button>\r\n                    <button\r\n                      onClick={() => { setOrdersFilterRange('year'); setOrdersCustomStartDate(null); setOrdersCustomEndDate(null); }}\r\n                      className={classNames(\r\n                        \"block w-full text-left px-4 py-2 transition-colors\",\r\n                        isMobileDevice ? \"text-xs\" : \"text-sm\",\r\n                        theme === 'dark' ? 'text-gray-200 hover:bg-gray-600' : 'text-gray-700 hover:bg-gray-100'\r\n                      )}\r\n                    >\r\n                      Ver todo el año\r\n                    </button>\r\n                    <div className={classNames(\"my-1\", theme === 'dark' ? \"border-t border-gray-600\" : \"border-t border-gray-200\")}></div>\r\n                    <div className={classNames(\"px-4 py-2 font-medium text-gray-400\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Filtros personalizados</div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Desde:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomStartDate ? ordersCustomStartDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomStartDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"px-4 py-2\">\r\n                      <label className={classNames(\"block font-medium text-gray-400 mb-1\", isMobileDevice ? \"text-xs\" : \"text-sm\")}>Hasta:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={ordersCustomEndDate ? ordersCustomEndDate.toISOString().split('T')[0] : ''}\r\n                        onChange={(e) => { setOrdersCustomEndDate(new Date(e.target.value)); setOrdersFilterRange('custom'); }}\r\n                        className={classNames(\r\n                          \"block w-full rounded-md shadow-sm p-2\",\r\n                          isMobileDevice ? \"text-xs sm:text-sm\" : \"text-sm\",\r\n                          theme === 'dark' ? 'bg-gray-800 text-gray-200 border-gray-600' : 'bg-white text-gray-900 border-gray-300'\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </PopoverPanel>\r\n              </Transition>\r\n            </Popover>\r\n          </h3>\r\n          <motion.div\r\n            className={classNames(\r\n              isMobileDevice ? 'overflow-x-auto overflow-y-hidden custom-scrollbar' : 'overflow-x-hidden overflow-y-hidden',\r\n              'relative flex flex-col flex-grow'\r\n            )}\r\n            variants={chartVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            {ordersFilterRange === 'year' && selectedMonth && (\r\n              <motion.button\r\n                initial={{ opacity: 0, x: -10 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: -10 }}\r\n                onClick={() => setSelectedMonth(null)}\r\n                className=\"mb-4 text-blue-500 hover:underline text-sm self-start transition-all duration-200\"\r\n              >\r\n                <ArrowLeft className=\"w-4 h-4 inline-block mr-2\" />Volver al resumen anual\r\n              </motion.button>\r\n            )}\r\n            {loading ? (\r\n              <SkeletonLoader type=\"bar\" theme={theme} isMobile={isMobileDevice} />\r\n            ) : (\r\n              <div className={classNames(\"w-full\", chartHeight, chartMinWidth)}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={dailyOrdersChartData}\r\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                    barCategoryGap={isMobileDevice ? \"0%\" : \"40%\"}\r\n                    barGap={1}\r\n                  >\r\n                    <CartesianGrid\r\n                      strokeDasharray={isMobileDevice ? \"2 2\" : \"3 3\"}\r\n                      stroke={theme === 'dark' ? '#4b5563' : '#e5e7eb'}\r\n                      vertical={false}\r\n                    />\r\n                    <XAxis\r\n                      dataKey=\"name\"\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      angle={-45}\r\n                      textAnchor=\"end\"\r\n                      interval={0}\r\n                      height={60}\r\n                    />\r\n                    <YAxis\r\n                      stroke={chartTextColor}\r\n                      tick={{ fill: chartTextColor, fontSize: isMobileDevice ? 9 : 11 }}\r\n                      width={isMobileDevice ? 30 : 50}\r\n                    />\r\n                    <Tooltip\r\n                      cursor={{ fill: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)', rx: 4 }}\r\n                      content={<CustomBarTooltip theme={theme} chartTextColor={chartTextColor} copFormatter={(val) => val.toLocaleString()} />}\r\n                    />\r\n                    <Legend\r\n                      wrapperStyle={{ color: chartTextColor, paddingTop: '10px', fontSize: isMobileDevice ? 8 : 12 }}\r\n                      align=\"center\"\r\n                      verticalAlign=\"top\"\r\n                      iconType=\"circle\"\r\n                    />\r\n                    <Bar\r\n                      dataKey=\"Domicilios\"\r\n                      fill=\"#8B5CF6\"\r\n                      stroke=\"#8B5CF6\"\r\n                      radius={[10, 10, 0, 0]}\r\n                      opacity={1}\r\n                      isAnimationActive={false}\r\n                      maxBarSize={isMobileDevice ? 12 : 25}\r\n                    />\r\n                    <Bar\r\n                      dataKey=\"Mesas\"\r\n                      fill=\"#10B981\"\r\n                      stroke=\"#10B981\"\r\n                      radius={[10, 10, 0, 0]}\r\n                      opacity={1}\r\n                      isAnimationActive={false}\r\n                      maxBarSize={isMobileDevice ? 12 : 25}\r\n                    />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Order Status Pie Chart */}\r\n        <motion.div\r\n          className={classNames(\r\n            theme === 'dark' ? 'bg-gray-800' : 'bg-white',\r\n            isMobileDevice ? 'p-4' : 'p-6',\r\n            'rounded-2xl shadow-xl border',\r\n            theme === 'dark' ? 'border-gray-700' : 'border-gray-200',\r\n            'relative min-h-[350px] flex flex-col justify-center items-center'\r\n          )}\r\n          variants={pieChartVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-200 dark:text-gray-100 flex items-center\">\r\n            <TrendingUp className={classNames(isMobileDevice ? \"w-4 h-4 mr-2\" : \"w-5 h-5 mr-2\", \"text-blue-400\")} />\r\n            Estado de Pedidos\r\n          </h3>\r\n          {loading ? (\r\n            <SkeletonLoader type=\"pie\" theme={theme} isMobile={isMobileDevice} />\r\n          ) : (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={statusPieChartData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={isMobileDevice ? 80 : 120}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  animationDuration={800}\r\n                  innerRadius={isMobileDevice ? 40 : 60}\r\n                >\r\n                  {statusPieChartData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={PIE_COLORS[index % PIE_COLORS.length]}\r\n                      stroke={theme === 'dark' ? '#1f2937' : '#ffffff'}\r\n                      strokeWidth={2}\r\n                    />\r\n                  ))}\r\n                  <Label\r\n                    value={`${totalOrders} Pedidos`}\r\n                    position=\"center\"\r\n                    fill={chartTextColor}\r\n                    fontSize={isMobileDevice ? 14 : 18}\r\n                    fontWeight=\"bold\"\r\n                    dy={isMobileDevice ? 0 : -10}\r\n                  />\r\n                  <Label\r\n                    value=\"Total\"\r\n                    position=\"center\"\r\n                    fill={chartTextColor}\r\n                    fontSize={isMobileDevice ? 10 : 12}\r\n                    dy={isMobileDevice ? 15 : 15}\r\n                  />\r\n                </Pie>\r\n                <Tooltip content={<CustomPieTooltip theme={theme} chartTextColor={chartTextColor} />} />\r\n                <Legend\r\n                  wrapperStyle={{ color: chartTextColor, fontSize: isMobileDevice ? 10 : 13, paddingTop: '15px' }}\r\n                  align=\"center\"\r\n                  verticalAlign=\"bottom\"\r\n                  iconType=\"circle\"\r\n                  layout=\"horizontal\"\r\n                />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DashboardCharts;\r\n","// src/context/DashboardDateContext.jsx\r\nimport React, { createContext, useContext, useMemo, useState, useCallback } from 'react';\r\n\r\nconst DashboardDateContext = createContext(null);\r\n\r\nconst tz = 'America/Bogota'; // sin DST\r\n\r\n// YYYY-MM-DD en zona Bogotá\r\nconst ymdInBogota = (date = new Date()) => {\r\n  const fmt = new Intl.DateTimeFormat('en-CA', { timeZone: tz, year: 'numeric', month: '2-digit', day: '2-digit' });\r\n  return fmt.format(date); // 'YYYY-MM-DD'\r\n};\r\n\r\nconst startOfDayBogota = (ymd) => new Date(`${ymd}T00:00:00.000-05:00`);\r\nconst endOfDayBogota   = (ymd) => new Date(`${ymd}T23:59:59.999-05:00`);\r\n\r\nconst timeAgo = (date) => {\r\n  if (!date) return '—';\r\n  const diff = Date.now() - new Date(date).getTime();\r\n  const mins = Math.max(0, Math.floor(diff / 60000));\r\n  if (mins < 1) return 'hace segundos';\r\n  if (mins === 1) return 'hace 1 min';\r\n  if (mins < 60) return `hace ${mins} min`;\r\n  const hours = Math.floor(mins / 60);\r\n  if (hours === 1) return 'hace 1 hora';\r\n  if (hours < 24) return `hace ${hours} horas`;\r\n  const days = Math.floor(hours / 24);\r\n  return days === 1 ? 'hace 1 día' : `hace ${days} días`;\r\n};\r\n\r\nexport const DashboardDateProvider = ({ children }) => {\r\n  const [selectedDate, setSelectedDate] = useState(ymdInBogota());\r\n\r\n  const setDateFromInput = useCallback((value) => {\r\n    // value es 'YYYY-MM-DD'\r\n    if (!value) return;\r\n    setSelectedDate(value);\r\n  }, []);\r\n\r\n  const value = useMemo(() => {\r\n    const startOfDay = startOfDayBogota(selectedDate);\r\n    const endOfDay   = endOfDayBogota(selectedDate);\r\n    return {\r\n      selectedDate,\r\n      startOfDay,\r\n      endOfDay,\r\n      setSelectedDate: setDateFromInput,\r\n      timeAgo,\r\n      ymdInBogota,\r\n    };\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <DashboardDateContext.Provider value={value}>\r\n      {children}\r\n    </DashboardDateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDashboardDate = () => useContext(DashboardDateContext);\r\n","//src/components/Admin/Dashboard.js\r\nimport React, { useState, useEffect, Fragment, useMemo, useCallback, useRef } from 'react';\r\nimport { db, auth } from '../../config/firebase';\r\nimport { onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { writeBatch, getDocs, collection } from 'firebase/firestore';\r\nimport { classNames } from '../../utils/classNames';\r\nimport {\r\n  Dialog, Transition, Popover, PopoverButton, PopoverPanel\r\n} from '@headlessui/react';\r\nimport {\r\n  Trash2, Info, X, ShoppingCart, DollarSign, Users,\r\n  Activity, Calendar, ChevronDown, ChevronUp, Clock, AlertTriangle\r\n} from 'lucide-react';\r\nimport { useDashboardData } from '../../hooks/useDashboardData';\r\nimport DashboardCharts from './DashboardCharts';\r\nimport { DashboardDateProvider, useDashboardDate } from '../../context/DashboardDateContext';\r\n\r\n// ----- Altura unificada para todas las tarjetas -----\r\nconst CARD_HEIGHT = 360;\r\n\r\n// Sólo usamos este token\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Hook para notificaciones (simple)\r\nconst useNotifier = () => {\r\n  const [message, setMessage] = useState(null);\r\n  const notify = useCallback((type, text) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage(null), 5000);\r\n  }, []);\r\n  return { notify, message };\r\n};\r\n\r\n// Spinner\r\nconst LoadingSpinner = ({ theme }) => (\r\n  <div className=\"flex justify-center items-center h-screen bg-gray-900\">\r\n    <div className={`animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 ${theme === 'dark' ? 'border-emerald-500' : 'border-emerald-600'}`}></div>\r\n  </div>\r\n);\r\n\r\n// Modal confirmación\r\nconst ConfirmationModal = ({ show, onClose, onConfirm, confirmText, setConfirmText, theme }) => (\r\n  <Transition show={show} as={Fragment}>\r\n    <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n      <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n      </Transition.Child>\r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\r\n          <Dialog.Panel className={classNames('w-full max-w-sm p-6 rounded-lg shadow-md text-center', theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')}>\r\n            <Dialog.Title className=\"text-lg font-medium mb-4 flex items-center justify-center gap-2 text-red-500\"><AlertTriangle className=\"w-6 h-6\" />Confirmar Limpieza de Actividad</Dialog.Title>\r\n            <p className=\"mb-4 text-sm\">Estás a punto de eliminar <span className=\"font-bold text-red-500\">TODAS</span> las actividades. Esta acción es irreversible. Para confirmar, escribe \"confirmar\":</p>\r\n            <input\r\n              type=\"text\"\r\n              value={confirmText}\r\n              onChange={(e) => setConfirmText(e.target.value)} \r\n              className={classNames('w-full p-2 rounded-md border text-center text-sm', theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900', 'focus:outline-none focus:ring-1 focus:ring-red-500')}\r\n              placeholder=\"escribe 'confirmar'\"\r\n            />\r\n            <div className=\"mt-6 flex justify-center gap-2\">\r\n              <button onClick={onClose} className={classNames('px-4 py-2 rounded-md text-sm font-medium', theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900')}>Cancelar</button>\r\n              <button onClick={onConfirm} className=\"px-4 py-2 rounded-md text-sm font-medium bg-red-600 hover:bg-red-700 text-white\">Limpiar Actividad</button>\r\n            </div>\r\n          </Dialog.Panel>\r\n        </Transition.Child>\r\n      </div>\r\n    </Dialog>\r\n  </Transition>\r\n);\r\n\r\n// Modal detalles\r\nconst DetailsModal = ({ show, onClose, details, theme }) => (\r\n  <Transition show={show} as={Fragment}>\r\n    <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n      <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n      </Transition.Child>\r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\r\n          <Dialog.Panel className={classNames('w-full max-w-md p-6 rounded-lg shadow-md', theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900')}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <Dialog.Title className=\"text-lg font-medium\">Detalle de Actividad</Dialog.Title>\r\n              <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-700 transition\">\r\n                <X className=\"w-5 h-5 text-gray-400\" />\r\n              </button>\r\n            </div>\r\n            <pre className=\"text-xs whitespace-pre-wrap p-4 bg-gray-700 rounded-lg text-gray-300 overflow-auto max-h-[70vh]\">\r\n              {JSON.stringify(details || {}, null, 2)}\r\n            </pre>\r\n          </Dialog.Panel>\r\n        </Transition.Child>\r\n      </div>\r\n    </Dialog>\r\n  </Transition>\r\n);\r\n\r\n// Tarjeta simple (ahora soporta vAlign y altura por prop)\r\nconst InfoCard = ({ theme, title, icon, color, data, labelColor = {}, vAlign = 'top', cardHeight = CARD_HEIGHT }) => {\r\n  const Icon = useMemo(() => {\r\n    switch (icon) {\r\n      case 'ShoppingCart': return ShoppingCart;\r\n      case 'Users': return Users;\r\n      case 'Activity': return Activity;\r\n      default: return null;\r\n    }\r\n  }, [icon]);\r\n\r\n  const containerLayout =\r\n    vAlign === 'center'\r\n      ? 'grid grid-rows-[auto,1fr]'\r\n      : vAlign === 'between'\r\n      ? 'flex flex-col justify-between'\r\n      : 'flex flex-col';\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `p-6 rounded-2xl shadow-xl border transition-all duration-300 ease-in-out ${containerLayout} flex-1`,\r\n        theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n      )}\r\n      style={{ height: cardHeight }}\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-2\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">{title}</h3>\r\n        {Icon && <Icon className={`${color} w-8 h-8`} />}\r\n      </div>\r\n\r\n      {/* Datos */}\r\n      <div\r\n        className={classNames(\r\n          'text-base text-gray-700 dark:text-gray-400',\r\n          vAlign === 'center' ? 'self-center w-full mt-1' : 'mt-3',\r\n          'space-y-2'\r\n        )}\r\n      >\r\n        {Object.entries(data).map(([label, value]) => (\r\n          <div key={label} className=\"flex justify-between\">\r\n            <span>{label}:</span>\r\n            <span className={classNames('font-bold', 'text-gray-900 dark:text-gray-100', labelColor[label])}>\r\n              {value}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Feed actividad (altura por prop + fixes de scroll)\r\nconst ActivityFeed = ({ theme, userActivity, onClearClick, onShowDetails, cardHeight = 360 }) => {\r\n  const listRef = useRef(null);\r\n  const [fadeTop, setFadeTop] = useState(false);\r\n  const [fadeBottom, setFadeBottom] = useState(false);\r\n\r\n  const updateFades = useCallback(() => {\r\n    const el = listRef.current;\r\n    if (!el) return;\r\n    setFadeTop(el.scrollTop > 0);\r\n    setFadeBottom(el.scrollTop + el.clientHeight < el.scrollHeight);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateFades();\r\n  }, [userActivity, updateFades]);\r\n\r\n  const rowHover = theme === 'dark' ? 'hover:bg-gray-700/40' : 'hover:bg-gray-100';\r\n  const borderRow = theme === 'dark' ? 'border-gray-700' : 'border-gray-200';\r\n  const fadeTopCls = theme === 'dark' ? 'bg-gradient-to-b from-gray-800 to-transparent' : 'bg-gradient-to-b from-white to-transparent';\r\n  const fadeBottomCls = theme === 'dark' ? 'bg-gradient-to-t from-gray-800 to-transparent' : 'bg-gradient-to-t from-white to-transparent';\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `p-6 rounded-2xl shadow-xl border flex flex-col`,\r\n        theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n      )}\r\n      style={{ height: cardHeight }}\r\n    >\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Actividad Reciente</h3>\r\n        <Activity className=\"text-orange-400 w-8 h-8\" />\r\n      </div>\r\n\r\n      {/* Contenedor scroll: un solo scroll horizontal para toda la tabla */}\r\n      <div\r\n        ref={listRef}\r\n        onScroll={updateFades}\r\n        className=\"relative text-sm min-h-40 max-h-56 overflow-y-auto overflow-x-auto custom-scrollbar pr-2 flex-1\"\r\n      >\r\n        {userActivity.length === 0 ? (\r\n          <p className=\"text-gray-400 text-center\">No hay actividad para la fecha.</p>\r\n        ) : (\r\n          // Tabla CSS: la primera columna toma el ancho del contenido más largo\r\n          <div className=\"min-w-max table w-full\">\r\n            {userActivity.map((act, idx) => (\r\n              <div key={idx} className=\"table-row\">\r\n                {/* Columna 1: acción + fecha (clickable) */}\r\n                <div className={`table-cell align-middle pr-3 py-2 border-b ${borderRow}`}>\r\n                  <div\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    onClick={() => onShowDetails(act)}\r\n                    onKeyDown={(e) => (e.key === 'Enter' || e.key === ' ') && onShowDetails(act)}\r\n                    className={`inline-flex items-center gap-2 whitespace-nowrap cursor-pointer rounded-md px-2 py-1 transition-colors ${rowHover}`}\r\n                    title=\"Ver detalles\"\r\n                  >\r\n                    <span className=\"text-gray-400\">{act.action || '—'}</span>\r\n                    {act.action && <span className=\"text-gray-600\">•</span>}\r\n                    <span\r\n                      className=\"text-gray-500 text-xs\"\r\n                      title={act.timestamp ? new Date(act.timestamp).toLocaleString('es-CO') : 'N/A'}\r\n                    >\r\n                      {act.timestamp ? new Date(act.timestamp).toLocaleString('es-CO') : 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Columna 2: ícono info alineado a la derecha */}\r\n                <div className={`table-cell align-middle pl-2 pr-1 py-2 text-right border-b ${borderRow}`}>\r\n                  {act.details && (\r\n                    <button\r\n                      onClick={() => onShowDetails(act)}\r\n                      className=\"text-blue-400 hover:text-blue-300 p-1 rounded-full\"\r\n                      title=\"Ver detalles de la actividad\"\r\n                    >\r\n                      <Info className=\"w-4 h-4\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Degradados (top/bottom) */}\r\n        {fadeTop && (\r\n          <div className={classNames('pointer-events-none absolute top-0 left-0 right-0 h-4', fadeTopCls)} />\r\n        )}\r\n        {fadeBottom && (\r\n          <div className={classNames('pointer-events-none absolute bottom-0 left-0 right-0 h-4', fadeBottomCls)} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mt-4 text-center\">\r\n        <button\r\n          onClick={onClearClick}\r\n          className={classNames(\r\n            'px-4 py-2 rounded-md text-xs font-medium flex items-center justify-center mx-auto',\r\n            theme === 'dark' ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-red-500 hover:bg-red-600 text-white'\r\n          )}\r\n        >\r\n          <Trash2 className=\"w-4 h-4 mr-2\" /> Limpiar TODAS las Actividades\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// --- Totales Generales con altura por prop + scroll interno ---\r\nconst GeneralTotalsCard = ({ theme, totals, deliveryPersons, lastUpdatedAt, orders, proteinDaily, tableOrders, breakfastOrders, cardHeight = CARD_HEIGHT }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [showExpenses, setShowExpenses] = useState(false);\r\n\r\n  // NUEVO: desglose de ingresos (como \"Gastos\")\r\n  const [showIncome, setShowIncome] = useState(false);\r\n\r\n  const { selectedDate, setSelectedDate, timeAgo } = useDashboardDate();\r\n\r\n  const { totalLunchCount, totalBreakfastCount } = useMemo(() => {\r\n    const lunchOrders = orders.filter(o => o.category === 'lunch');\r\n    const breakfastOrdersList = breakfastOrders || [];\r\n    const tableOrdersList = tableOrders || [];\r\n\r\n    const lunchDomiciliosCount = lunchOrders.filter(o => o.orderType === 'delivery').length;\r\n    const lunchMesaCount = tableOrdersList.filter(t => t.orderType === 'table').length;\r\n    const lunchTakeawayCount = tableOrdersList.filter(t => t.orderType === 'takeaway').length;\r\n\r\n    const breakfastDomiciliosCount = breakfastOrdersList.filter(b => b.orderType === 'delivery').length;\r\n    const breakfastMesaCount = breakfastOrdersList.filter(b => b.orderType === 'table').length;\r\n    const breakfastTakeawayCount = breakfastOrdersList.filter(b => b.orderType === 'takeaway').length;\r\n\r\n    return {\r\n      totalLunchCount: lunchDomiciliosCount + lunchMesaCount + lunchTakeawayCount,\r\n      totalBreakfastCount: breakfastDomiciliosCount + breakfastMesaCount + breakfastTakeawayCount,\r\n    };\r\n  }, [orders, tableOrders, breakfastOrders]);\r\n\r\n  // NUEVO: cálculo de \"De Domicilios\" y \"De Salón\"\r\n  const incomeBreakdown = useMemo(() => {\r\n    const bc = totals?.byCategory || {};\r\n    const domicilios =\r\n      (bc.domiciliosAlmuerzo || 0) +\r\n      (bc.domiciliosDesayuno || 0);\r\n\r\n    const salon =\r\n      (bc.mesasAlmuerzo || 0) +\r\n      (bc.llevarAlmuerzo || 0) +\r\n      (bc.mesasDesayuno || 0) +\r\n      (bc.llevarDesayuno || 0);\r\n\r\n    return { domicilios, salon };\r\n  }, [totals]);\r\n\r\n  const Row = ({ left, right, strong, rightClass, onClick }) => (\r\n    <div className=\"flex justify-between\" onClick={onClick}>\r\n      <span className={classNames(\r\n        strong ? 'font-semibold' : '',\r\n        'text-gray-400',\r\n        onClick && 'cursor-pointer hover:underline'\r\n      )}>\r\n        {left}\r\n      </span>\r\n      <span className={classNames('font-bold', rightClass ?? 'text-gray-100')}>\r\n        {right}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={classNames(\r\n          `p-0 rounded-2xl shadow-xl border transition-all duration-300 ease-in-out hover:shadow-2xl flex flex-col flex-1`,\r\n          theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'\r\n        )}\r\n        style={{ height: cardHeight }}\r\n      >\r\n        {/* Header: título y dólar centrados sin selector de fecha */}\r\n        <div className=\"flex items-center justify-center px-6 pt-5 flex-shrink-0\">\r\n          <h3 className=\"text-xl font-semibold text-gray-100 whitespace-nowrap\">\r\n            Totales Generales\r\n          </h3>\r\n          <DollarSign className=\"text-emerald-400 w-8 h-8 ml-4\" aria-hidden=\"true\" />\r\n        </div>\r\n\r\n        {/* Cuerpo (área con overflow controlado) */}\r\n        <div\r\n          className={classNames(\r\n            'mt-4 px-6 pb-3 relative min-h-0 h-[260px] custom-scrollbar',\r\n            expanded ? 'overflow-y-auto' : 'overflow-hidden'\r\n          )}\r\n        >\r\n          {/* Vista rápida */}\r\n          <div className=\"space-y-3 text-base mt-5 sm:mt-6\">\r\n            {/* NUEVO: Total ingresos con desglose colapsable */}\r\n            <div onClick={() => setShowIncome(v => !v)} className=\"cursor-pointer\">\r\n              <div className=\"flex justify-between items-center text-gray-400 hover:underline hover:text-gray-100 transition-colors\">\r\n                <span>Total ingresos</span>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"font-bold text-green-400\">${(totals?.grossIncome || 0).toLocaleString('es-CO')}</span>\r\n                  {showIncome ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n                </div>\r\n              </div>\r\n              <Transition\r\n                show={showIncome}\r\n                enter=\"transition duration-100 ease-out\"\r\n                enterFrom=\"transform scale-95 opacity-0\"\r\n                enterTo=\"transform scale-100 opacity-100\"\r\n                leave=\"transition duration-75 ease-out\"\r\n                leaveFrom=\"transform scale-100 opacity-100\"\r\n                leaveTo=\"transform scale-95 opacity-0\"\r\n              >\r\n                <div className=\"mt-2 pl-4 space-y-1 text-sm text-gray-400\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>- De Domicilios:</span>\r\n                    <span className=\"font-semibold text-emerald-300\">\r\n                      ${incomeBreakdown.domicilios.toLocaleString('es-CO')}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>- De Salón:</span>\r\n                    <span className=\"font-semibold text-emerald-300\">\r\n                      ${incomeBreakdown.salon.toLocaleString('es-CO')}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Transition>\r\n            </div>\r\n\r\n            {/* Gastos desplegables */}\r\n            <div onClick={() => setShowExpenses(v => !v)} className=\"cursor-pointer\">\r\n              <div className=\"flex justify-between items-center text-gray-400 hover:underline hover:text-gray-100 transition-colors\">\r\n                <span>Gastos</span>\r\n                <div className=\"flex items-center gap-2\">\r\n<span className=\"font-bold text-red-400\">\r\n  -${(totals?.expenses || 0).toLocaleString('es-CO')}\r\n</span>\r\n                  {showExpenses ? <ChevronUp className=\"w-4 h-4 text-gray-500\" /> : <ChevronDown className=\"w-4 h-4 text-gray-500\" />}\r\n                </div>\r\n              </div>\r\n              <Transition\r\n                show={showExpenses}\r\n                enter=\"transition duration-100 ease-out\"\r\n                enterFrom=\"transform scale-95 opacity-0\"\r\n                enterTo=\"transform scale-100 opacity-100\"\r\n                leave=\"transition duration-75 ease-out\"\r\n                leaveFrom=\"transform scale-100 opacity-100\"\r\n                leaveTo=\"transform scale-95 opacity-0\"\r\n              >\r\n                <div className=\"mt-2 pl-4 space-y-1 text-sm text-gray-400\">\r\n            {Object.entries(totals?.expensesByProvider?.byProvider || {}).map(([provider, amount]) => (\r\n  <div key={provider} className=\"flex justify-between\">\r\n    <span>- {provider}:</span>\r\n    <span className=\"font-semibold text-red-300\">\r\n      -${amount.toLocaleString('es-CO')}\r\n    </span>\r\n  </div>\r\n))}\r\n\r\n                </div>\r\n              </Transition>\r\n            </div>\r\n\r\n            <div className={classNames('border-t mt-2', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n            <Row strong left=\"Total neto\" right={`$${(totals?.net || 0).toLocaleString('es-CO')}`} rightClass=\"text-emerald-400 text-xl\" />\r\n          </div>\r\n\r\n          {/* Toggle Ver más/menos */}\r\n          <div className=\"mt-6 sm:mt-8 text-center\">\r\n            <button\r\n              onClick={() => setExpanded(v => !v)}\r\n              aria-expanded={expanded}\r\n              className=\"text-blue-500 hover:text-blue-600 transition-colors text-sm font-semibold underline underline-offset-4\"\r\n            >\r\n              {expanded ? 'Ver menos' : 'Ver más'}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Detalle expandido */}\r\n          <div className={classNames('pt-4 mt-4 text-sm', expanded ? '' : 'hidden')}>\r\n            <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n            <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Desglose de ingresos</p>\r\n            <div className=\"space-y-1\">\r\n<Row left=\"Efectivo (Caja)\" right={`$${(totals?.cashCaja ?? totals?.cash ?? 0).toLocaleString('es-CO')}`} rightClass=\"text-green-400\" />\r\n{typeof totals?.cashPendiente === 'number' && totals.cashPendiente > 0 && (\r\n  <Row left=\"Efectivo pendiente (clientes no liquidados)\" right={`$${totals.cashPendiente.toLocaleString('es-CO')}`} rightClass=\"text-yellow-400\" />\r\n)}\r\n              <div className=\"space-y-1 mt-2\">\r\n                {Object.entries(deliveryPersons || {}).map(([person, d]) => (\r\n                  <div key={person}>\r\n                    <div className=\"flex justify-between items-center text-gray-400\">\r\n                      <span className=\"flex items-center\">🛵 {person} Desayuno</span>\r\n                      <span className=\"font-bold text-purple-400 text-right\">\r\n                        ${ (d?.desayuno?.total || 0).toLocaleString('es-CO') }\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center text-gray-400\">\r\n                      <span className=\"flex items-center\">🛵 {person} Almuerzo</span>\r\n                      <span className=\"font-bold text-purple-400 text-right\">\r\n                        ${ (d?.almuerzo?.total || 0).toLocaleString('es-CO') }\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <Row left=\"DaviPlata\" right={`$${(totals?.daviplata || 0).toLocaleString('es-CO')}`} rightClass=\"text-red-400\" />\r\n              <Row left=\"Nequi\" right={`$${(totals?.nequi || 0).toLocaleString('es-CO')}`} rightClass=\"text-blue-400\" />\r\n            </div>\r\n\r\n            <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n            <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Tipo de Venta</p>\r\n            <div className=\"space-y-3 mt-2 text-sm\">\r\n              <div className=\"flex flex-col space-y-1\">\r\n                <h4 className=\"font-semibold text-gray-100\">Domicilios</h4>\r\n                <ul className=\"space-y-1 text-gray-400\">\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">🛵 Almuerzo</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.domiciliosAlmuerzo || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">🍳 Desayuno</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.domiciliosDesayuno || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"flex flex-col space-y-1\">\r\n                <h4 className=\"font-semibold text-gray-100\">Salón</h4>\r\n                <ul className=\"space-y-1 text-gray-400\">\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">🪑 Almuerzo Mesa</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.mesasAlmuerzo || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">📦 Almuerzo llevar</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.llevarAlmuerzo || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">🪑 Desayuno Mesa</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.mesasDesayuno || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                  <li className=\"flex justify-between items-center\">\r\n                    <span className=\"flex-1\">📦 Desayuno llevar</span>\r\n                    <span className=\"font-bold text-gray-100 text-right\">${(totals?.byCategory?.llevarDesayuno || 0).toLocaleString('es-CO')}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n            <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Producción y ventas</p>\r\n            <div className=\"space-y-1\">\r\n              <Row left=\"Proteínas preparadas (unid.)\" right={String(Number(proteinDaily?.preparedUnits || 0))} rightClass=\"text-gray-100\" />\r\n              <Row left=\"Almuerzos vendidos (unid.)\" right={String(totalLunchCount)} rightClass=\"text-gray-100\" />\r\n              <Row left=\"Desayunos vendidos (unid.)\" right={String(totalBreakfastCount)} rightClass=\"text-gray-100\" />\r\n            </div>\r\n\r\n            <div className={classNames('border-t my-3', theme === 'dark' ? 'border-gray-700' : 'border-gray-200')} />\r\n            <p className={classNames('text-sm mb-2 font-semibold', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>Sobrantes</p>\r\n            <p className={classNames('text-[13px]', theme === 'dark' ? 'text-gray-300' : 'text-gray-700')}>\r\n              • {Number(proteinDaily?.leftovers?.res || 0)} res • {Number(proteinDaily?.leftovers?.lomo || 0)} lomo • {Number(proteinDaily?.leftovers?.pechuga || 0)} pechuga • {Number(proteinDaily?.leftovers?.pollo || 0)} pollo • {Number(proteinDaily?.leftovers?.recuperada || 0)} recuperada\r\n            </p>\r\n          </div>\r\n\r\n          {/* Gradiente cuando está colapsado */}\r\n          {!expanded && (\r\n            <div\r\n              className={classNames(\r\n                'pointer-events-none absolute bottom-0 left-0 right-0 h-16',\r\n                theme === 'dark' ? 'bg-gradient-to-t from-gray-800 to-transparent' : 'bg-gradient-to-t from-white to-transparent'\r\n              )}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer fijo con selector de fecha a la izquierda */}\r\n        <div\r\n          className={classNames(\r\n            'px-6 py-2 text-[12px] flex items-center justify-between mt-auto flex-shrink-0 gap-x-2 gap-y-1 rounded-b-2xl',\r\n            theme === 'dark' ? 'bg-gray-700 text-gray-400' : 'bg-gray-100 text-gray-600'\r\n          )}\r\n        >\r\n          {/* Selector de fecha como texto clicable */}\r\n          <Popover className=\"relative\">\r\n            {({ open }) => (\r\n              <>\r\n                <PopoverButton\r\n                  className={classNames(\r\n                    'inline-flex items-center gap-1 text-[11px] transition-colors cursor-pointer',\r\n                    theme === 'dark' ? 'text-gray-400 hover:text-gray-200' : 'text-gray-700 hover:text-gray-900'\r\n                  )}\r\n                >\r\n                  <Calendar className=\"w-3 h-3 text-green-400\" />\r\n                  <span>Fecha: {selectedDate}</span>\r\n                </PopoverButton>\r\n                <Transition\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-150\"\r\n                  enterFrom=\"opacity-0 translate-y-1\"\r\n                  enterTo=\"opacity-100 translate-y-0\"\r\n                  leave=\"transition ease-in duration-100\"\r\n                  leaveFrom=\"opacity-100 translate-y-0\"\r\n                  leaveTo=\"opacity-0 translate-y-1\"\r\n                >\r\n                  <PopoverPanel className={classNames(\r\n                    'absolute z-50 mt-2 p-3 rounded-xl shadow-lg w-64 left-0 origin-top-left',\r\n                    'max-w-[calc(100vw-2rem)]',\r\n                    theme === 'dark' ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'\r\n                  )}>\r\n                    <label className={classNames('block text-xs mb-1', theme === 'dark' ? 'text-gray-400' : 'text-gray-600')}>\r\n                      Selecciona una fecha\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={selectedDate}\r\n                      onChange={(e) => e.target.value && setSelectedDate(e.target.value)}\r\n                      className={classNames(\r\n                        'w-full rounded-md px-3 py-2 text-sm border focus:outline-none focus:ring-1 focus:ring-emerald-500',\r\n                        theme === 'dark' ? 'bg-gray-900 border-gray-700 text-gray-100' : 'bg-white border-gray-300 text-gray-900'\r\n                      )}\r\n                    />\r\n                    <p className=\"text-[11px] mt-2 text-gray-500\">\r\n                      Cambiar la fecha actualiza todo el dashboard para ese día.\r\n                    </p>\r\n                  </PopoverPanel>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Popover>\r\n\r\n          <span className=\"flex items-center gap-1 text-[11px]\"><Clock className=\"w-3 h-3\"/> Actualizado {timeAgo(lastUpdatedAt)}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Orquestador\r\nconst DashboardInner = ({ theme }) => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const { notify } = useNotifier();\r\n\r\n  const { selectedDate, startOfDay, endOfDay } = useDashboardDate();\r\n  \r\n  const {\r\n    loadingData,\r\n    orders, users, totals, statusCounts, userActivity,\r\n    deliveryPersons, proteinDaily, lastUpdatedAt,\r\n    ingresosCategoriasData, gastosPorTiendaData, pedidosDiariosChartData, statusPieChartData,\r\n    tableOrders, breakfastOrders,\r\n    handleSaveDailyIngresos, handleDeleteDailyIngresos, handleSaveDailyOrders, handleDeleteDailyOrders\r\n  } = useDashboardData(db, userId, isAuthReady, notify, startOfDay, endOfDay, selectedDate);\r\n  \r\n  const [showConfirmClearActivity, setShowConfirmClearActivity] = useState(false);\r\n  const [confirmClearText, setConfirmClearText] = useState('');\r\n  const [showActivityDetailModal, setShowActivityDetailModal] = useState(false);\r\n  const [selectedActivityDetail, setSelectedActivityDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!auth) return;\r\n    const unsub = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n        setIsAuthReady(true);\r\n      } else {\r\n        try {\r\n          if (initialAuthToken) await signInWithCustomToken(auth, initialAuthToken);\r\n          else await signInAnonymously(auth);\r\n        } catch (error) {\r\n          console.error('Error al iniciar sesión:', error);\r\n          notify('error', `Error de autenticación: ${error.message}`);\r\n        } finally {\r\n          setIsAuthReady(true);\r\n        }\r\n      }\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  const handleClearAllActivity = async () => {\r\n    if (confirmClearText.toLowerCase() !== 'confirmar') {\r\n      notify('error', 'Por favor, escribe \"confirmar\" para proceder.');\r\n      return;\r\n    }\r\n    try {\r\n      const batch = writeBatch(db);\r\n      const activitySnapshot = await getDocs(collection(db, 'userActivity'));\r\n      let deletedCount = 0;\r\n      activitySnapshot.forEach((doc) => {\r\n        batch.delete(doc.ref);\r\n        deletedCount++;\r\n      });\r\n      if (deletedCount > 0) await batch.commit();\r\n      \r\n      setShowConfirmClearActivity(false);\r\n      setConfirmClearText('');\r\n      notify('success', deletedCount === 0 ? 'No había actividades para eliminar.' : `Todas las actividades (${deletedCount}) han sido eliminadas.`);\r\n    } catch (error) {\r\n      notify('error', `Error al eliminar actividades: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const chartTextColor = theme === 'dark' ? '#cbd5e1' : '#475569';\r\n  const loading = !isAuthReady || loadingData;\r\n\r\n  if (loading) return <LoadingSpinner theme={theme} />;\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 font-inter\">\r\n      <h2 className=\"text-3xl font-extrabold mb-8 text-gray-900 dark:text-white transition-colors duration-200\">Dashboard</h2>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n        <InfoCard \r\n          theme={theme}\r\n          title=\"Pedidos\" \r\n          icon=\"ShoppingCart\"\r\n          color=\"text-blue-400\"\r\n          vAlign=\"center\"\r\n          cardHeight={CARD_HEIGHT}\r\n          data={{\r\n            'Total': statusCounts.Pending + statusCounts.Delivered + statusCounts.Cancelled,\r\n            'Pendientes': statusCounts.Pending,\r\n            'Entregados': statusCounts.Delivered,\r\n            'Cancelados': statusCounts.Cancelled,\r\n          }}\r\n          labelColor={{'Pendientes': 'text-yellow-400', 'Entregados': 'text-green-400', 'Cancelados': 'text-red-400'}}\r\n        />\r\n\r\n        <GeneralTotalsCard \r\n          theme={theme}\r\n          totals={totals}\r\n          deliveryPersons={deliveryPersons}\r\n          lastUpdatedAt={lastUpdatedAt}\r\n          orders={orders}\r\n          proteinDaily={proteinDaily}\r\n          tableOrders={tableOrders}\r\n          breakfastOrders={breakfastOrders}\r\n          cardHeight={CARD_HEIGHT}\r\n        />\r\n\r\n        <InfoCard \r\n          theme={theme}\r\n          title=\"Usuarios\" \r\n          icon=\"Users\"\r\n          color=\"text-purple-400\"\r\n          cardHeight={CARD_HEIGHT}\r\n          data={{ 'Total': users.length }}\r\n        />\r\n\r\n        <ActivityFeed\r\n          theme={theme}\r\n          userActivity={userActivity}\r\n          onClearClick={() => setShowConfirmClearActivity(true)}\r\n          onShowDetails={(act) => { setSelectedActivityDetail(act); setShowActivityDetailModal(true); }}\r\n          cardHeight={CARD_HEIGHT}\r\n        />\r\n      </div>\r\n\r\n      <DashboardCharts\r\n        theme={theme}\r\n         cardHeight={CARD_HEIGHT} \r\n        chartTextColor={chartTextColor}\r\n        ingresosCategoriasData={ingresosCategoriasData}\r\n        gastosPorTiendaData={gastosPorTiendaData}\r\n        pedidosDiariosChartData={pedidosDiariosChartData}\r\n        statusPieChartData={statusPieChartData}\r\n        loading={loading}\r\n        handleSaveDailyIngresos={handleSaveDailyIngresos}\r\n        handleDeleteDailyIngresos={handleDeleteDailyIngresos}\r\n        handleSaveDailyOrders={handleSaveDailyOrders}\r\n        handleDeleteDailyOrders={handleDeleteDailyOrders}\r\n        proteinDaily={proteinDaily}\r\n      />\r\n\r\n      <ConfirmationModal \r\n        show={showConfirmClearActivity}\r\n        onClose={() => {setShowConfirmClearActivity(false); setConfirmClearText('');}}\r\n        onConfirm={handleClearAllActivity}\r\n        confirmText={confirmClearText}\r\n        setConfirmText={setConfirmClearText}\r\n        theme={theme}\r\n      />\r\n\r\n      <DetailsModal\r\n        show={showActivityDetailModal}\r\n        onClose={() => setShowActivityDetailModal(false)}\r\n        details={selectedActivityDetail?.details}\r\n        theme={theme}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Wrapper\r\nconst Dashboard = (props) => (\r\n  <DashboardDateProvider>\r\n    <DashboardInner {...props} />\r\n  </DashboardDateProvider>\r\n);\r\n\r\nexport default Dashboard;\r\n"],"names":["norm","s","toString","trim","toLowerCase","normalizePaymentMethodKey","methodLike","raw","name","label","title","method","type","payment","t","includes","pickMethodLabel","extractOrderPayments","order","_order$meals$0$paymen","_order$meals","_order$meals$","_order$meals2","_order$meals2$","_order$breakfasts$0$p","_order$breakfasts","_order$breakfasts$","_order$breakfasts2","_order$breakfasts2$","_order$paymentMethod","total","Math","floor","Number","Array","isArray","payments","length","map","p","amount","methodKey","rawLabel","legacySources","meals","paymentMethod","breakfasts","filter","Boolean","summarizePayments","paymentsRows","arguments","undefined","agg","reduce","a","r","key","asText","cash","push","toLocaleString","nequi","daviplata","other","join","defaultPaymentsForOrder","rows","_ref","sumPaymentsByMethod","orders","out","amt","isSalonOrder","_order$breakfasts5","_order$breakfasts5$","__collection","orderType","isCashSettled","_order$settlement","settlement","status","liquidated","cashSettled","settledAt","calcMethodTotalsAll","tableOrders","breakfastOrders","acc","nequiTotal","daviplataTotal","cashSalon","cashClientesSettled","cashClientesPendiente","accumulate","list","o","davi","cashCaja","classNames","_len","classes","_key","ORDER_STATUS","ORDER_STATUS_DISPLAY","PIE_COLORS","INGRESOS_COLLECTION","PEDIDOS_DIARIOS_GUARDADOS_COLLECTION","getDateRange","rangeType","start","end","today","Date","setHours","startDate","endDate","setDate","getDate","getFullYear","getMonth","getDocDateISO","doc","ts","createdAt","timestamp","date","d","toDate","toISOString","split","isBreakfastOrder","isBreakfast","meal","normalizeServiceFromOrder","_ref2","_ref3","_ref4","_ref5","_o$orderTypeNormalize","v","orderTypeNormalized","serviceType","channel","tipoPedido","typeOfOrder","test","useDashboardData","db","userId","isAuthReady","p4","p5","p6","p7","p8","p9","p10","p11","_totals$expensesByPro","notify","setError","setSuccess","startOfDay","endOfDay","selectedDate","salesFilterRange","salesCustomStartDate","salesCustomEndDate","ordersFilterRange","ordersCustomStartDate","ordersCustomEndDate","selectedMonth","m","_notify","_notify2","loadingData","setLoadingData","useState","setOrders","setTableOrders","setBreakfastOrders","users","setUsers","totals","setTotals","cashPendiente","expenses","expensesByProvider","byProvider","counts","byCategory","domiciliosAlmuerzo","mesasAlmuerzo","llevarAlmuerzo","domiciliosDesayuno","mesasDesayuno","llevarDesayuno","grossIncome","net","saleTypeBreakdown","setSaleTypeBreakdown","domicilio_almuerzo","domicilio_desayuno","mesa_almuerzo","llevar_almuerzo","mesa_desayuno","llevar_desayuno","statusCounts","setStatusCounts","Pending","Delivered","Cancelled","userActivity","setUserActivity","ingresosData","setIngresosData","pedidosDiariosGuardadosData","setPedidosDiariosGuardadosData","dailySalesChartData","setDailySalesChartData","dailyOrdersChartData","setDailyOrdersChartData","statusPieChartData","setStatusPieChartData","initialLoadRefs","useRef","activity","ingresos","pedidosDiariosGuardados","checkIfAllLoaded","current","useEffect","sum","esDesayuno","service","b","_b$address","_b$breakfasts","_b$breakfasts$","_b$breakfasts$$addres","address","gross","prev","max","mixed","kind","buildSaleTypeBreakdown","unsubscribes","ordersCollectionRef","collection","unsubscribeOrders","onSnapshot","snapshot","ordersData","docs","id","data","newTotals","newStatusCounts","forEach","_order$status","paymentSummary","orderStatus","pieChartData","value","color","error","message","tableOrdersCollectionRef","unsubscribeTableOrders","tableOrdersData","deliveryBreakfastOrdersRef","unsubscribeBreakfastOrders","breakfastOrdersData","usersCollectionRef","unsubscribeUsers","usersData","userActivityCollectionRef","unsubscribeActivity","timestampDate","Timestamp","sort","getTime","ingresosColRef","unsubscribeIngresos","pedidosDiariosGuardadosColRef","unsubscribePedidosDiariosGuardados","pedidosData","paymentsQuery","query","where","orderBy","unsubscribePayments","items","totalExpenses","provider","store","_setError","unsubscribe","monthNames","salesStartDate","salesEndDate","todayISO","chartData","filteredDailySales","summary","summaryDateISO","_filteredDailySales$s","_filteredDailySales$s2","_filteredDailySales$s3","_filteredDailySales$s4","c","categories","_filteredDailySales$k","_filteredDailySales$k2","_filteredDailySales$k3","_filteredDailySales$k4","da","dd","ma","md","_o$createdAt2","dISO","_t$createdAt2","_b$breakfasts4","_b$breakfasts4$","_b$address3","_b$breakfasts5","_b$breakfasts5$","_b$breakfasts5$$addre","k","Object","keys","monthlySales","currentYear","month","monthKey","String","padStart","mKey","currentMonthKey","rt","_o$createdAt","_t$createdAt","_b$breakfasts2","_b$breakfasts2$","_b$address2","_b$breakfasts3","_b$breakfasts3$","_b$breakfasts3$$addre","parseInt","ordersStartDate","ordersEndDate","filteredDailyOrders","summaryDate","Domicilios","domicilios","Mesas","mesas","currentDayRealtimeDomicilios","currentDayRealtimeMesas","_order$createdAt2","tableOrder","_tableOrder$createdAt2","_filteredDailyOrders$","_filteredDailyOrders$2","_filteredDailyOrders$3","_filteredDailyOrders$4","monthlyOrders","currentMonthRealtimeDomicilios","currentMonthRealtimeMesas","_order$createdAt","_tableOrder$createdAt","handleSaveDailyIngresos","useCallback","async","_o$createdAt3","_t$createdAt3","_b$breakfasts6","_b$breakfasts6$","_b$address4","_b$breakfasts7","_b$breakfasts7$","_b$breakfasts7$$addre","totalIncome","qY","snap","getDocs","payload","updatedAt","serverTimestamp","empty","addDoc","updateDoc","console","schedule","now","next","ms","setTimeout","y","yesterdayISO","inDayISO","targetISO","_b$breakfasts8","_b$breakfasts8$","_b$address5","_b$breakfasts9","_b$breakfasts9$","_b$breakfasts9$$addre","payloadY","snapY","qToday","e","_setError2","saveDay","timer","clearTimeout","handleDeleteDailyIngresos","q","existingSummarySnapshot","docToDelete","deleteDoc","handleSaveDailyOrders","currentDayDomicilios","currentDayMesas","_order$createdAt3","_tableOrder$createdAt3","docToUpdate","handleDeleteDailyOrders","ingresosCategoriasData","gastosPorTiendaData","entries","_ref6","pedidosDiariosChartData","SkeletonLoader","theme","isMobile","numBars","_jsx","className","children","from","_","i","style","width","height","random","copFormatter","Intl","NumberFormat","currency","minimumFractionDigits","CustomBarTooltip","active","chartTextColor","isOrderChart","entry","formatValue","format","_jsxs","motion","div","initial","opacity","animate","exit","backgroundColor","borderColor","backdropFilter","fontSize","index","CustomPieTooltip","percent","toFixed","DashboardCharts","React","setSalesFilterRange","setSalesCustomStartDate","setSalesCustomEndDate","setOrdersFilterRange","setOrdersCustomStartDate","setOrdersCustomEndDate","handleSaveDailyExpenses","handleDeleteDailyExpenses","loading","setSelectedMonth","isMobileDevice","setIsMobileDevice","setPayments","expenseFilterRange","setExpenseFilterRange","expenseCustomStartDate","setExpenseCustomStartDate","expenseCustomEndDate","setExpenseCustomEndDate","selectedRecipient","setSelectedRecipient","handleResize","checkIsMobile","window","addEventListener","removeEventListener","dailyExpensesChartData","useMemo","groupedByDate","dateKey","Total","values","totalOrders","aggregatedPaymentsByRecipient","grouped","storeName","totalAmount","paymentsForSelectedRecipient","chartVariants","hidden","scale","visible","transition","duration","ease","chartMinWidth","chartHeight","dangerouslySetInnerHTML","__html","DollarSign","Popover","PopoverButton","MoreVertical","Transition","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","PopoverPanel","onClick","disabled","Save","Trash2","onChange","target","variants","button","x","ArrowLeft","ResponsiveContainer","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","CartesianGrid","strokeDasharray","stroke","vertical","XAxis","dataKey","tick","fill","angle","textAnchor","interval","YAxis","tickFormatter","Tooltip","cursor","rx","content","Legend","wrapperStyle","paddingTop","paddingBottom","align","verticalAlign","iconType","Bar","radius","maxBarSize","animationDuration","_Fragment","idx","_payment$timestamp","dateStyle","timeStyle","Package","val","isAnimationActive","TrendingUp","PieChart","Pie","cx","cy","outerRadius","innerRadius","Cell","strokeWidth","Label","position","fontWeight","dy","layout","DashboardDateContext","createContext","ymdInBogota","DateTimeFormat","timeZone","year","day","timeAgo","diff","mins","hours","days","DashboardDateProvider","setSelectedDate","setDateFromInput","ymd","endOfDayBogota","Provider","useDashboardDate","useContext","CARD_HEIGHT","initialAuthToken","__initial_auth_token","LoadingSpinner","ConfirmationModal","show","onClose","onConfirm","confirmText","setConfirmText","Dialog","Child","Panel","Title","AlertTriangle","placeholder","DetailsModal","details","X","JSON","stringify","InfoCard","icon","labelColor","vAlign","cardHeight","Icon","ShoppingCart","Users","Activity","containerLayout","ActivityFeed","onClearClick","onShowDetails","listRef","fadeTop","setFadeTop","fadeBottom","setFadeBottom","updateFades","el","scrollTop","clientHeight","scrollHeight","rowHover","borderRow","fadeTopCls","fadeBottomCls","ref","onScroll","act","role","tabIndex","onKeyDown","action","Info","GeneralTotalsCard","_ref7","_ref0","_totals$cashCaja","_totals$byCategory","_totals$byCategory2","_totals$byCategory3","_totals$byCategory4","_totals$byCategory5","_totals$byCategory6","_proteinDaily$leftove","_proteinDaily$leftove2","_proteinDaily$leftove3","_proteinDaily$leftove4","_proteinDaily$leftove5","deliveryPersons","lastUpdatedAt","proteinDaily","expanded","setExpanded","showExpenses","setShowExpenses","showIncome","setShowIncome","totalLunchCount","totalBreakfastCount","lunchOrders","category","breakfastOrdersList","tableOrdersList","incomeBreakdown","bc","salon","Row","_ref8","strong","rightClass","ChevronUp","ChevronDown","_ref9","_ref1","_d$desayuno","_d$almuerzo","person","desayuno","almuerzo","preparedUnits","leftovers","res","lomo","pechuga","pollo","recuperada","_ref10","open","Calendar","Clock","DashboardInner","_ref11","setUserId","setIsAuthReady","useNotifier","setMessage","text","showConfirmClearActivity","setShowConfirmClearActivity","confirmClearText","setConfirmClearText","showActivityDetailModal","setShowActivityDetailModal","selectedActivityDetail","setSelectedActivityDetail","auth","unsub","onAuthStateChanged","user","uid","signInWithCustomToken","signInAnonymously","batch","writeBatch","activitySnapshot","deletedCount","delete","commit","props"],"sourceRoot":""}