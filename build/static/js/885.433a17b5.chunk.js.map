{"version":3,"file":"static/js/885.433a17b5.chunk.js","mappings":"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","sources":["components/Admin/MenuManagement.js"],"sourcesContent":["//src/components/Admin/MenuManagement.js\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { XMarkIcon } from '@heroicons/react/24/outline';\r\n\r\nconst MenuManagement = ({ setError, setSuccess, theme }) => {\r\n  const [selectedCollection, setSelectedCollection] = useState('soups');\r\n  const [items, setItems] = useState([]);\r\n  const [newItem, setNewItem] = useState({ name: '', description: '', emoji: '', price: '', isNew: false });\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  const [editItem, setEditItem] = useState({ name: '', description: '', emoji: '', price: '', isNew: false, isFinished: false });\r\n\r\n  const collectionNames = {\r\n    soups: 'Sopas',\r\n    soupReplacements: 'Reemplazos de Sopa',\r\n    principles: 'Principios',\r\n    proteins: 'Proteínas',\r\n    drinks: 'Bebidas',\r\n    sides: 'Acompañamientos',\r\n    additions: 'Adiciones',\r\n    times: 'Horarios',\r\n    paymentMethods: 'Métodos de Pago'\r\n  };\r\n  const collections = Object.keys(collectionNames);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(collection(db, selectedCollection), (snapshot) => {\r\n      setItems(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n    }, (error) => setError(`Error cargando datos: ${error.message}`));\r\n    return () => unsubscribe();\r\n  }, [selectedCollection, setError]);\r\n\r\n  const handleAddItem = async () => {\r\n    if (!newItem.name.trim()) {\r\n      setError('El nombre no puede estar vacío');\r\n      return;\r\n    }\r\n    if (selectedCollection === 'additions' && (!newItem.price || isNaN(parseFloat(newItem.price)) || parseFloat(newItem.price) <= 0)) {\r\n      setError('El precio debe ser un número válido mayor a 0 para Adiciones');\r\n      return;\r\n    }\r\n    try {\r\n      const itemData = {\r\n        name: newItem.name,\r\n        description: newItem.description,\r\n        emoji: newItem.emoji,\r\n        isNew: newItem.isNew,\r\n        createdAt: new Date()\r\n      };\r\n      if (selectedCollection === 'additions') {\r\n        itemData.price = parseFloat(newItem.price);\r\n      }\r\n      await addDoc(collection(db, selectedCollection), itemData);\r\n      setNewItem({ name: '', description: '', emoji: '', price: '', isNew: false });\r\n      window.dispatchEvent(new Event('optionsUpdated'));\r\n      setSuccess(`\"${newItem.name}\" agregado`);\r\n    } catch (error) {\r\n      setError(`Error al agregar: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (itemId, itemName) => {\r\n    try {\r\n      await deleteDoc(doc(db, selectedCollection, itemId));\r\n      setSuccess(`\"${itemName}\" eliminado`);\r\n    } catch (error) {\r\n      setError(`Error al eliminar: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEditItem = (item) => {\r\n    setEditingItem(item);\r\n    setEditItem({ \r\n      ...item, \r\n      price: item.price !== undefined ? item.price.toString() : '',\r\n      isFinished: item.isFinished || false\r\n    });\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (!editItem.name.trim()) {\r\n      setError('El nombre no puede estar vacío');\r\n      return;\r\n    }\r\n    if (selectedCollection === 'additions' && (!editItem.price || isNaN(parseFloat(editItem.price)) || parseFloat(editItem.price) <= 0)) {\r\n      setError('El precio debe ser un número válido mayor a 0 para Adiciones');\r\n      return;\r\n    }\r\n    try {\r\n      const itemData = {\r\n        name: editItem.name,\r\n        description: editItem.description,\r\n        emoji: editItem.emoji,\r\n        isNew: editItem.isNew,\r\n        isFinished: editItem.isFinished || false\r\n      };\r\n      if (selectedCollection === 'additions') {\r\n        itemData.price = parseFloat(editItem.price);\r\n      }\r\n      await updateDoc(doc(db, selectedCollection, editingItem.id), itemData);\r\n      setEditingItem(null);\r\n      setSuccess(`\"${editItem.name}\" actualizado`);\r\n    } catch (error) {\r\n      setError(`Error al actualizar: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleToggleFinished = async (item) => {\r\n    try {\r\n      await updateDoc(doc(db, selectedCollection, item.id), { isFinished: !item.isFinished });\r\n      setSuccess(`\"${item.name}\" ${!item.isFinished ? 'agotado' : 'disponible'}`);\r\n    } catch (error) {\r\n      setError(`Error al actualizar: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-4\">\r\n      <h2 className=\"text-xl sm:text-2xl font-bold mb-6 text-gray-100\">Gestión de Menú</h2>\r\n      <div className={`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-4 sm:p-6 rounded-xl shadow-lg`}>\r\n        <select value={selectedCollection} onChange={e => setSelectedCollection(e.target.value)} className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-200'} text-${theme === 'dark' ? 'white' : 'gray-900'} p-2 rounded-lg w-full mb-4 text-sm`}>\r\n          {collections.map(col => <option key={col} value={col}>{collectionNames[col]}</option>)}\r\n        </select>\r\n        <div className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-300'} p-4 sm:p-6 rounded-lg mb-4`}>\r\n          <h3 className=\"text-base sm:text-lg font-semibold mb-3\">Agregar {collectionNames[selectedCollection]}</h3>\r\n          <input value={newItem.name} onChange={e => setNewItem({ ...newItem, name: e.target.value })} placeholder={`Nombre de ${collectionNames[selectedCollection]}`} className={`bg-${theme === 'dark' ? 'gray-600' : 'gray-400'} text-white p-2 rounded-lg w-full mb-3 text-sm`} />\r\n          <textarea value={newItem.description} onChange={e => setNewItem({ ...newItem, description: e.target.value })} placeholder=\"Descripción\" className={`bg-${theme === 'dark' ? 'gray-600' : 'gray-400'} text-white p-2 rounded-lg w-full mb-3 text-sm`} rows=\"3\" />\r\n          <input value={newItem.emoji} onChange={e => setNewItem({ ...newItem, emoji: e.target.value })} placeholder=\"Emoji\" className={`bg-${theme === 'dark' ? 'gray-600' : 'gray-400'} text-white p-2 rounded-lg w-full mb-3 text-sm`} />\r\n          {selectedCollection === 'additions' && (\r\n            <input\r\n              value={newItem.price}\r\n              onChange={e => setNewItem({ ...newItem, price: e.target.value })}\r\n              placeholder=\"Precio (COP)\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"1\"\r\n              className={`bg-${theme === 'dark' ? 'gray-600' : 'gray-400'} text-white p-2 rounded-lg w-full mb-3 text-sm`}\r\n            />\r\n          )}\r\n          {selectedCollection !== 'times' && <label className=\"flex items-center mb-3\"><input type=\"checkbox\" checked={newItem.isNew} onChange={e => setNewItem({ ...newItem, isNew: e.target.checked })} className=\"mr-2\" /><span className=\"text-sm\">¿Es nuevo?</span></label>}\r\n          <button onClick={handleAddItem} className=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg w-full transition-colors text-sm\">Agregar</button>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-base sm:text-lg font-semibold mb-3\">Lista de {collectionNames[selectedCollection]}</h3>\r\n          <div className=\"space-y-2 max-h-[50vh] overflow-y-auto\">\r\n            {items.map(item => (\r\n              <div key={item.id} className={`p-3 rounded-lg flex flex-col sm:flex-row justify-between items-start sm:items-center ${item.isFinished ? 'bg-gray-700' : 'bg-gray-600'} transition-colors shadow-sm hover:shadow-md`}>\r\n                <div className=\"flex flex-col\">\r\n                  <span className={`text-sm ${item.isFinished ? 'line-through text-gray-400' : ''}`}>\r\n                    {item.emoji && <span className=\"mr-1\">{item.emoji}</span>}{item.name}\r\n                  </span>\r\n                  {item.description && <span className=\"text-xs text-gray-300\">{item.description}</span>}\r\n                  {item.price !== undefined && <span className=\"text-xs text-gray-300\">Precio: ${item.price.toLocaleString('es-CO')}</span>}\r\n                  {item.isNew && <span className=\"text-green-400 text-xs\">(Nuevo)</span>}\r\n                  {item.isFinished && <span className=\"text-red-400 text-xs\">🚫 Agotado</span>}\r\n                </div>\r\n                <div className=\"flex gap-2 mt-2 sm:mt-0\">\r\n                  <button onClick={() => handleEditItem(item)} className=\"bg-blue-600 hover:bg-blue-700 p-2 rounded-lg transition-colors\" title=\"Editar\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n                    </svg>\r\n                  </button>\r\n                  <button onClick={() => handleDeleteItem(item.id, item.name)} className=\"bg-red-600 hover:bg-red-700 p-2 rounded-lg transition-colors\" title=\"Eliminar\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4M7 7h10\" />\r\n                    </svg>\r\n                  </button>\r\n                  <button onClick={() => handleToggleFinished(item)} className={`p-2 rounded-lg transition-colors ${item.isFinished ? 'bg-yellow-600 hover:bg-yellow-700' : 'bg-gray-500 hover:bg-gray-600'}`} title={item.isFinished ? 'Disponible' : 'Agotado'}>\r\n                    <span className=\"text-lg\">🚫</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {editingItem && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`bg-${theme === 'dark' ? 'gray-800' : 'white'} p-4 sm:p-6 rounded-lg w-11/12 max-w-md overflow-y-auto max-h-[80vh] shadow-lg`}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg\">Editar Elemento</h2>\r\n              <button onClick={() => setEditingItem(null)} className=\"text-gray-400 hover:text-gray-200\">\r\n                <XMarkIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <input value={editItem.name} onChange={e => setEditItem({ ...editItem, name: e.target.value })} className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-200'} text-${theme === 'dark' ? 'white' : 'gray-900'} p-2 rounded-lg w-full mb-4 text-sm`} placeholder=\"Nombre\" />\r\n            <textarea value={editItem.description} onChange={e => setEditItem({ ...editItem, description: e.target.value })} placeholder=\"Descripción\" className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-200'} text-${theme === 'dark' ? 'white' : 'gray-900'} p-2 rounded-lg w-full mb-4 text-sm`} rows=\"3\" />\r\n            <input value={editItem.emoji} onChange={e => setEditItem({ ...editItem, emoji: e.target.value })} placeholder=\"Emoji\" className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-200'} text-${theme === 'dark' ? 'white' : 'gray-900'} p-2 rounded-lg w-full mb-4 text-sm`} />\r\n            {selectedCollection === 'additions' && (\r\n              <input\r\n                value={editItem.price}\r\n                onChange={e => setEditItem({ ...editItem, price: e.target.value })}\r\n                placeholder=\"Precio (COP)\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                className={`bg-${theme === 'dark' ? 'gray-700' : 'gray-200'} text-${theme === 'dark' ? 'white' : 'gray-900'} p-2 rounded-lg w-full mb-4 text-sm`}\r\n              />\r\n            )}\r\n            {selectedCollection !== 'times' && (\r\n              <div className=\"space-y-2 mb-4\">\r\n                <label className=\"flex items-center\">\r\n                  <input type=\"checkbox\" checked={editItem.isNew} onChange={e => setEditItem({ ...editItem, isNew: e.target.checked })} className=\"mr-2\" />\r\n                  <span className=\"text-sm\">¿Es nuevo?</span>\r\n                </label>\r\n                <label className=\"flex items-center\">\r\n                  <input type=\"checkbox\" checked={editItem.isFinished} onChange={e => setEditItem({ ...editItem, isFinished: e.target.checked })} className=\"mr-2\" />\r\n                  <span className=\"text-sm\">¿Agotado?</span>\r\n                </label>\r\n              </div>\r\n            )}\r\n            <div className=\"flex gap-2\">\r\n              <button onClick={handleSaveEdit} className=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg flex-1 transition-colors text-sm\">Guardar</button>\r\n              <button onClick={() => setEditingItem(null)} className=\"bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded-lg flex-1 transition-colors text-sm\">Cancelar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuManagement;"],"names":["_ref","setError","setSuccess","theme","selectedCollection","setSelectedCollection","useState","items","setItems","newItem","setNewItem","name","description","emoji","price","isNew","editingItem","setEditingItem","editItem","setEditItem","isFinished","collectionNames","soups","soupReplacements","principles","proteins","drinks","sides","additions","times","paymentMethods","collections","Object","keys","useEffect","unsubscribe","onSnapshot","collection","db","snapshot","docs","map","doc","id","data","error","message","_jsxs","className","children","_jsx","value","onChange","e","target","col","placeholder","rows","type","min","step","checked","onClick","async","trim","isNaN","parseFloat","itemData","createdAt","Date","addDoc","window","dispatchEvent","Event","item","undefined","toLocaleString","toString","handleEditItem","title","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","itemId","itemName","deleteDoc","handleDeleteItem","updateDoc","handleToggleFinished","XMarkIcon"],"sourceRoot":""}