{"version":3,"file":"static/js/26.b8c5e709.chunk.js","mappings":"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","sources":["components/Waiter/WaiterDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport MealList from '../MealList';\r\nimport BreakfastList from '../BreakfastList';\r\nimport OrderSummary from '../OrderSummary';\r\nimport BreakfastOrderSummary from '../BreakfastOrderSummary';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport SuccessMessage from '../SuccessMessage';\r\nimport OptionSelector from '../OptionSelector';\r\nimport { initializeMealData, handleMealChange, addMeal, duplicateMeal, removeMeal } from '../../utils/MealLogic';\r\nimport { calculateTotal, calculateMealPrice } from '../../utils/MealCalculations';\r\nimport { initializeBreakfastData, handleBreakfastChange, addBreakfast, duplicateBreakfast, removeBreakfast, calculateBreakfastPrice, calculateTotalBreakfastPrice } from '../../utils/BreakfastLogic';\r\n\r\nconst WaiterDashboard = () => {\r\n  const { user, role, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [meals, setMeals] = useState([initializeMealData({}, true)]);\r\n  const [breakfasts, setBreakfasts] = useState([initializeBreakfastData({ isWaitress: true })]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [incompleteMealIndex, setIncompleteMealIndex] = useState(null);\r\n  const [incompleteSlideIndex, setIncompleteSlideIndex] = useState(null);\r\n  const [incompleteBreakfastIndex, setIncompleteBreakfastIndex] = useState(null);\r\n  const [incompleteBreakfastSlideIndex, setIncompleteBreakfastSlideIndex] = useState(null);\r\n  const [soups, setSoups] = useState([]);\r\n  const [soupReplacements, setSoupReplacements] = useState([]);\r\n  const [principles, setPrinciples] = useState([]);\r\n  const [proteins, setProteins] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [additions, setAdditions] = useState([]);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [breakfastEggs, setBreakfastEggs] = useState([]);\r\n  const [breakfastBroths, setBreakfastBroths] = useState([]);\r\n  const [breakfastRiceBread, setBreakfastRiceBread] = useState([]);\r\n  const [breakfastDrinks, setBreakfastDrinks] = useState([]);\r\n  const [breakfastAdditions, setBreakfastAdditions] = useState([]);\r\n  const [breakfastTypes, setBreakfastTypes] = useState([]);\r\n  const [breakfastProteins, setBreakfastProteins] = useState([]);\r\n  const [breakfastTimes, setBreakfastTimes] = useState([]);\r\n  const [isOrderingDisabled, setIsOrderingDisabled] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('create');\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [showMenu, setShowMenu] = useState(null);\r\n  const [menuType, setMenuType] = useState('closed');\r\n  const [schedules, setSchedules] = useState({\r\n    breakfastStart: 420, // 07:00\r\n    breakfastEnd: 631,   // 10:31\r\n    lunchStart: 632,     // 10:32\r\n    lunchEnd: 950,       // 15:50\r\n  });\r\n  const [timeRemaining, setTimeRemaining] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) {\r\n      setErrorMessage('Por favor, inicia sesión para continuar.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n    if (role !== 3) {\r\n      setErrorMessage('Acceso denegado. Solo las meseras pueden acceder a esta página.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n  }, [user, loading, role, navigate]);\r\n\r\n  useEffect(() => {\r\n    const collections = [\r\n      'soups', 'soupReplacements', 'principles', 'proteins', 'drinks', 'sides', 'additions', 'paymentMethods',\r\n      'breakfastEggs', 'breakfastBroths', 'breakfastRiceBread', 'breakfastDrinks', 'breakfastAdditions',\r\n      'breakfastTypes', 'breakfastProteins', 'breakfastTimes'\r\n    ];\r\n    const setters = [\r\n      setSoups, setSoupReplacements, setPrinciples, setProteins, setDrinks, setSides, setAdditions, setPaymentMethods,\r\n      setBreakfastEggs, setBreakfastBroths, setBreakfastRiceBread, setBreakfastDrinks, setBreakfastAdditions,\r\n      setBreakfastTypes, setBreakfastProteins, setBreakfastTimes\r\n    ];\r\n    const unsubscribers = collections.map((col, index) => onSnapshot(collection(db, col), (snapshot) => {\r\n      const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setters[index](data);\r\n      if (process.env.NODE_ENV === 'development') console.log(`Updated ${col}:`, data);\r\n      if (data.length === 0) {\r\n        setErrorMessage(\r\n          process.env.NODE_ENV !== 'production'\r\n            ? `La colección ${col} está vacía. Agrega datos desde /admin.`\r\n            : 'Algunas opciones no están disponibles. Intenta de nuevo más tarde.'\r\n        );\r\n      }\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error(`Error al escuchar ${col}:`, error);\r\n      setErrorMessage(\r\n        process.env.NODE_ENV === 'production'\r\n          ? 'No se pudieron cargar las opciones. Intenta de nuevo más tarde.'\r\n          : `Error al cargar datos de ${col}. Revisa la consola para más detalles.`\r\n      );\r\n    }));\r\n\r\n    const settingsUnsubscribe = onSnapshot(doc(db, 'settings', 'global'), (docSnapshot) => {\r\n      setIsOrderingDisabled(docSnapshot.exists() ? docSnapshot.data().isOrderingDisabled || false : false);\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al escuchar settings/global:', error);\r\n      setErrorMessage('Error al cargar configuración. Intenta de nuevo más tarde.');\r\n    });\r\n\r\n    const schedulesUnsubscribe = onSnapshot(doc(db, 'settings', 'schedules'), (docSnapshot) => {\r\n      if (docSnapshot.exists()) {\r\n        const data = docSnapshot.data();\r\n        setSchedules({\r\n          breakfastStart: data.breakfastStart || 420,\r\n          breakfastEnd: data.breakfastEnd || 631,\r\n          lunchStart: data.lunchStart || 632,\r\n          lunchEnd: data.lunchEnd || 950,\r\n        });\r\n      }\r\n    });\r\n\r\n    const breakfastOrdersUnsubscribe = onSnapshot(collection(db, 'breakfastOrders'), (snapshot) => {\r\n      const breakfastOrders = snapshot.docs\r\n        .map(doc => ({ id: doc.id, ...doc.data(), type: 'breakfast' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'breakfast'), ...breakfastOrders]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated breakfast orders:', breakfastOrders);\r\n    });\r\n\r\n    const ordersUnsubscribe = onSnapshot(collection(db, 'tableOrders'), (snapshot) => {\r\n      const orderData = snapshot.docs\r\n        .map(doc => ({ id: doc.id, ...doc.data(), type: 'lunch' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'lunch'), ...orderData]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated waiter orders:', orderData);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribers.forEach(unsubscribe => unsubscribe());\r\n      settingsUnsubscribe();\r\n      schedulesUnsubscribe();\r\n      breakfastOrdersUnsubscribe();\r\n      ordersUnsubscribe();\r\n    };\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const updateMenuTypeAndTime = () => {\r\n      const now = new Date();\r\n      const totalMinutes = now.getHours() * 60 + now.getMinutes();\r\n      let menu = 'closed';\r\n      let timeString = '';\r\n\r\n      const formatTime = (minutes) => {\r\n        const hours = Math.floor(minutes / 60);\r\n        const mins = minutes % 60;\r\n        const period = hours >= 12 ? 'PM' : 'AM';\r\n        const adjustedHours = hours % 12 || 12;\r\n        return `${adjustedHours}:${mins.toString().padStart(2, '0')} ${period}`;\r\n      };\r\n\r\n      if (totalMinutes >= schedules.breakfastStart && totalMinutes <= schedules.breakfastEnd) {\r\n        menu = 'breakfast';\r\n        timeString = formatTime(schedules.breakfastEnd);\r\n      } else if (totalMinutes >= schedules.lunchStart && totalMinutes <= schedules.lunchEnd) {\r\n        menu = 'lunch';\r\n        timeString = formatTime(schedules.lunchEnd);\r\n      }\r\n\r\n      setMenuType(menu);\r\n      setTimeRemaining(timeString);\r\n    };\r\n\r\n    updateMenuTypeAndTime();\r\n    const interval = setInterval(updateMenuTypeAndTime, 60000); // Update every minute\r\n    return () => clearInterval(interval);\r\n  }, [schedules]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      const timer = setTimeout(() => setErrorMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => setSuccessMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleSendOrder = async () => {\r\n    let incompleteMealIndex = null;\r\n    let incompleteSlideIndex = null;\r\n    let firstMissingField = '';\r\n    for (let i = 0; i < meals.length; i++) {\r\n      const meal = meals[i];\r\n      const isCompleteRice = Array.isArray(meal?.principle) && meal.principle.some(p => ['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(p.name));\r\n      const missing = [];\r\n      const slideMap = {\r\n        'Sopa o reemplazo de sopa': 0,\r\n        'Principio': 1,\r\n        'Proteína': 2,\r\n        'Bebida': 3,\r\n        'Acompañamientos': 4,\r\n        'Mesa': 5,\r\n        'Método de pago': 6,\r\n        'Tipo de pedido': 7,\r\n      };\r\n\r\n      if (!meal?.soup && !meal?.soupReplacement) missing.push('Sopa o reemplazo de sopa');\r\n      if (!meal?.principle && !meal?.principleReplacement) missing.push('Principio');\r\n      if (!isCompleteRice && !meal?.protein) missing.push('Proteína');\r\n      if (!meal?.drink) missing.push('Bebida');\r\n      if (!isCompleteRice && (!meal?.sides || meal.sides.length === 0)) missing.push('Acompañamientos');\r\n      if (!meal?.tableNumber) missing.push('Mesa');\r\n      if (!meal?.paymentMethod) missing.push('Método de pago');\r\n      if (!meal?.orderType) missing.push('Tipo de pedido');\r\n\r\n      if (missing.length > 0) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Meal ${i + 1} is incomplete. Missing fields:`, missing);\r\n          console.log(`Meal ${i + 1} data:`, meal);\r\n        }\r\n        incompleteMealIndex = i;\r\n        firstMissingField = missing[0];\r\n        incompleteSlideIndex = slideMap[firstMissingField] || 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (incompleteMealIndex !== null) {\r\n      setIncompleteMealIndex(incompleteMealIndex);\r\n      setIncompleteSlideIndex(incompleteSlideIndex);\r\n      setErrorMessage(`Por favor, completa el campo \"${firstMissingField}\" para el Almuerzo #${incompleteMealIndex + 1}.`);\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`meal-item-${incompleteMealIndex}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n          element.dispatchEvent(new CustomEvent('updateSlide', { detail: { slideIndex: incompleteSlideIndex } }));\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n    try {\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        meals: meals.map(meal => ({\r\n          soup: meal.soup ? { name: meal.soup.name } : null,\r\n          soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n          principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n          protein: meal.protein ? { name: meal.protein.name } : null,\r\n          drink: meal.drink ? { name: meal.drink.name } : null,\r\n          sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n          additions: meal.additions?.map(addition => ({\r\n            id: addition.id,\r\n            name: addition.name,\r\n            protein: addition.protein || '',\r\n            replacement: addition.replacement || '',\r\n            quantity: addition.quantity || 1,\r\n            price: addition.price || 0,\r\n          })) || [],\r\n          tableNumber: meal.tableNumber || '',\r\n          paymentMethod: meal.paymentMethod ? { name: meal.paymentMethod.name } : null,\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n        })),\r\n        total: calculateTotal(meals, 3),\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      console.log('[WaiterDashboard] Saving order with meals:', order.meals);\r\n      await addDoc(collection(db, 'tableOrders'), order);\r\n      setSuccessMessage('¡Orden de mesa guardada con éxito!');\r\n      setMeals([initializeMealData({}, true)]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de mesa:', error);\r\n      setErrorMessage('Error al guardar la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendBreakfastOrder = async () => {\r\n    let incompleteIndex = null;\r\n    let incompleteSlide = null;\r\n    let firstMissingField = '';\r\n\r\n    breakfasts.forEach((breakfast, index) => {\r\n      const typeData = Array.isArray(breakfastTypes) ? breakfastTypes.find(bt => bt.name === breakfast.type?.name) : null;\r\n      const steps = typeData ? typeData.steps || [] : ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'];\r\n      const missing = [];\r\n\r\n      if (!breakfast.type?.name) missing.push('type');\r\n      steps.forEach(step => {\r\n        if (step === 'tableNumber') {\r\n          if (!breakfast.tableNumber) missing.push('tableNumber');\r\n        } else if (step === 'paymentMethod') {\r\n          if (!breakfast.paymentMethod) missing.push('paymentMethod');\r\n        } else if (step === 'orderType') {\r\n          if (!breakfast.orderType) missing.push('orderType');\r\n        } else if (!breakfast[step]) {\r\n          missing.push(step);\r\n        }\r\n      });\r\n\r\n      if (missing.length > 0 && incompleteIndex === null) {\r\n        incompleteIndex = index;\r\n        firstMissingField = missing[0];\r\n        const slideMap = {\r\n          type: 0,\r\n          broth: 1,\r\n          eggs: 2,\r\n          riceBread: 3,\r\n          drink: 4,\r\n          protein: 5,\r\n          tableNumber: 6,\r\n          paymentMethod: 7,\r\n          orderType: 8,\r\n        };\r\n        incompleteSlide = slideMap[firstMissingField] || 0;\r\n      }\r\n    });\r\n\r\n    if (incompleteIndex !== null) {\r\n      setIncompleteBreakfastIndex(incompleteIndex);\r\n      setIncompleteBreakfastSlideIndex(incompleteSlide);\r\n      setErrorMessage(\r\n        `Por favor, completa el campo \"${firstMissingField}\" para el Desayuno #${incompleteIndex + 1}.`\r\n      );\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`breakfast-item-${breakfasts[incompleteIndex].id}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        breakfasts: breakfasts.map(breakfast => ({\r\n          type: breakfast.type ? { name: breakfast.type.name } : null,\r\n          broth: breakfast.broth ? { name: breakfast.broth.name } : null,\r\n          eggs: breakfast.eggs ? { name: breakfast.eggs.name } : null,\r\n          riceBread: breakfast.riceBread ? { name: breakfast.riceBread.name } : null,\r\n          drink: breakfast.drink ? { name: breakfast.drink.name } : null,\r\n          protein: breakfast.protein ? { name: breakfast.protein.name } : null,\r\n          additions: breakfast.additions?.map(addition => ({\r\n            name: addition.name,\r\n            quantity: addition.quantity || 1,\r\n          })) || [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          paymentMethod: breakfast.paymentMethod ? { name: breakfast.paymentMethod.name } : null,\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n        total: calculateTotalBreakfastPrice(breakfasts, 3, breakfastTypes),\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      if (process.env.NODE_ENV === 'development') console.log('[WaiterDashboard] Saving breakfast order:', order);\r\n      await addDoc(collection(db, 'breakfastOrders'), order);\r\n      setSuccessMessage('¡Orden de desayuno guardada con éxito!');\r\n      setBreakfasts([initializeBreakfastData({ isWaitress: true })]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de desayuno:', error);\r\n      setErrorMessage('Error al guardar la orden de desayuno. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus, orderType) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Attempting to update status for orderId:', orderId, 'to', newStatus, 'with role:', role, 'type:', orderType);\r\n      const collectionName = orderType === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, orderId);\r\n      await updateDoc(orderRef, {\r\n        status: newStatus,\r\n        updatedAt: new Date(),\r\n      });\r\n      setErrorMessage(null);\r\n      setSuccessMessage(`Estado de la orden ${orderId.slice(0, 8)} actualizado a ${newStatus}`);\r\n      setShowMenu(null);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`Estado de la orden ${orderId} actualizado a ${newStatus}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado:', error);\r\n      setErrorMessage(`Error al actualizar el estado: ${error.message}. Verifica tu rol y permisos.`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    if (order.type === 'lunch') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        meals: order.meals.map(meal => ({\r\n          soup: meal.soup || null,\r\n          soupReplacement: meal.soupReplacement ? {\r\n            ...meal.soupReplacement,\r\n            replacement: meal.soupReplacement.replacement || ''\r\n          } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({\r\n            ...p,\r\n            replacement: p.replacement || ''\r\n          })) : [],\r\n          principleReplacement: meal.principleReplacement || null,\r\n          protein: meal.protein || null,\r\n          drink: meal.drink || null,\r\n          sides: meal.sides || [],\r\n          additions: Array.isArray(meal.additions) ? meal.additions : [],\r\n          paymentMethod: meal.paymentMethod || null,\r\n          tableNumber: meal.tableNumber || '',\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n          showReplacementsState: {\r\n            soup: meal.soupReplacement?.name === 'Remplazo por Sopa' && !!meal.soupReplacement?.replacement,\r\n            principle: meal.principle?.some(opt => opt.name === 'Remplazo por Principio' && !!opt.replacement) || false,\r\n          },\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing lunch order:', initializedOrder);\r\n        console.log('[WaiterDashboard] Meals count:', initializedOrder.meals.length);\r\n        console.log('[WaiterDashboard] Soup replacement:', initializedOrder.meals[0]?.soupReplacement);\r\n        console.log('[WaiterDashboard] Principle replacement:', initializedOrder.meals[0]?.principle);\r\n        console.log('[WaiterDashboard] Additions for first meal:', initializedOrder.meals[0]?.additions);\r\n      }\r\n    } else if (order.type === 'breakfast') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        breakfasts: order.breakfasts.map(breakfast => ({\r\n          type: breakfast.type || null,\r\n          broth: breakfast.broth || null,\r\n          eggs: breakfast.eggs || null,\r\n          riceBread: breakfast.riceBread || null,\r\n          drink: breakfast.drink || null,\r\n          protein: breakfast.protein || null,\r\n          additions: Array.isArray(breakfast.additions) ? breakfast.additions : [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          paymentMethod: breakfast.paymentMethod || null,\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing breakfast order:', initializedOrder);\r\n        console.log('[WaiterDashboard] Breakfasts count:', initializedOrder.breakfasts.length);\r\n        console.log('[WaiterDashboard] Additions for first breakfast:', initializedOrder.breakfasts[0]?.additions);\r\n      }\r\n    }\r\n    setShowMenu(null);\r\n  };\r\n\r\n  const handleFormChange = (index, field, value) => {\r\n    if (editingOrder.type === 'lunch') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newMeals = [...editingOrder.meals];\r\n        if (field === 'principle' || field === 'sides') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : [] };\r\n        } else if (field === 'soup' || field === 'soupReplacement' || field === 'principleReplacement' || field === 'protein' || field === 'drink' || field === 'paymentMethod') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : null };\r\n          if (field === 'soupReplacement' && value?.name === 'Remplazo por Sopa') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: true };\r\n          } else if (field === 'soupReplacement' || field === 'soup') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: false };\r\n            if (field === 'soup') {\r\n              newMeals[index].soupReplacement = null;\r\n            }\r\n          }\r\n          if (field === 'principle' && value?.some(opt => opt.name === 'Remplazo por Principio')) {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: true };\r\n          } else if (field === 'principle') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: false };\r\n          }\r\n        } else if (field === 'additions') {\r\n          newMeals[index] = { ...newMeals[index], additions: value };\r\n        } else {\r\n          newMeals[index] = { ...newMeals[index], [field]: value };\r\n        }\r\n        const updatedTotal = calculateTotal(newMeals, 3);\r\n        setEditingOrder(prev => ({ ...prev, meals: newMeals, total: updatedTotal }));\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newBreakfasts = [...editingOrder.breakfasts];\r\n        if (field === 'additions') {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], additions: value };\r\n        } else {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], [field]: value ? value : null };\r\n        }\r\n        const updatedTotal = calculateTotalBreakfastPrice(newBreakfasts, 3, breakfastTypes);\r\n        setEditingOrder(prev => ({ ...prev, breakfasts: newBreakfasts, total: updatedTotal }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (editingOrder.type === 'lunch') {\r\n      for (const [index, meal] of editingOrder.meals.entries()) {\r\n        const unconfiguredAdditions = meal.additions?.filter(\r\n          add => add.requiresReplacement && (\r\n            (add.name === 'Proteína adicional' && !add.protein) ||\r\n            (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n          )\r\n        ) || [];\r\n        if (unconfiguredAdditions.length > 0) {\r\n          setErrorMessage(`Por favor, selecciona una opción para \"${unconfiguredAdditions[0].name}\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.tableNumber && meal.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited lunch order:', editingOrder);\r\n        const orderRef = doc(db, 'tableOrders', editingOrder.id);\r\n        await updateDoc(orderRef, {\r\n          meals: editingOrder.meals.map(meal => ({\r\n            soup: meal.soup ? { name: meal.soup.name } : null,\r\n            soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n            principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n            principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n            protein: meal.protein ? { name: meal.protein.name } : null,\r\n            drink: meal.drink ? { name: meal.drink.name } : null,\r\n            sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n            additions: meal.additions ? meal.additions.map(a => ({\r\n              id: a.id,\r\n              name: a.name,\r\n              protein: a.protein || '',\r\n              replacement: a.replacement || '',\r\n              quantity: a.quantity || 1,\r\n              price: a.price || 0,\r\n            })) : [],\r\n            tableNumber: meal.tableNumber || '',\r\n            paymentMethod: meal.paymentMethod ? { name: meal.paymentMethod.name } : null,\r\n            orderType: meal.orderType || '',\r\n            notes: meal.notes || '',\r\n          })),\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotal(editingOrder.meals, 3),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Orden ${editingOrder.id} actualizada con éxito`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      for (const [index, breakfast] of editingOrder.breakfasts.entries()) {\r\n        const typeData = breakfastTypes.find(bt => bt.name === breakfast.type?.name) || { steps: ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'] };\r\n        const steps = typeData.steps || [];\r\n        const missing = [];\r\n        if (!breakfast.type?.name) missing.push('type');\r\n        steps.forEach(step => {\r\n          if (step === 'tableNumber' && !breakfast.tableNumber) missing.push('tableNumber');\r\n          else if (step === 'paymentMethod' && !breakfast.paymentMethod) missing.push('paymentMethod');\r\n          else if (step === 'orderType' && !breakfast.orderType) missing.push('orderType');\r\n          else if (!breakfast[step]) missing.push(step);\r\n        });\r\n        if (missing.length > 0) {\r\n          setErrorMessage(`Por favor, completa el campo \"${missing[0]}\" para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.tableNumber && breakfast.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited breakfast order:', editingOrder);\r\n        const orderRef = doc(db, 'breakfastOrders', editingOrder.id);\r\n        await updateDoc(orderRef, {\r\n          breakfasts: editingOrder.breakfasts.map(breakfast => ({\r\n            type: breakfast.type ? { name: breakfast.type.name } : null,\r\n            broth: breakfast.broth ? { name: breakfast.broth.name } : null,\r\n            eggs: breakfast.eggs ? { name: breakfast.eggs.name } : null,\r\n            riceBread: breakfast.riceBread ? { name: breakfast.riceBread.name } : null,\r\n            drink: breakfast.drink ? { name: breakfast.drink.name } : null,\r\n            protein: breakfast.protein ? { name: breakfast.protein.name } : null,\r\n            additions: breakfast.additions?.map(addition => ({\r\n              name: addition.name,\r\n              quantity: addition.quantity || 1,\r\n            })) || [],\r\n            tableNumber: breakfast.tableNumber || '',\r\n            paymentMethod: breakfast.paymentMethod ? { name: breakfast.paymentMethod.name } : null,\r\n            orderType: breakfast.orderType || '',\r\n            notes: breakfast.notes || '',\r\n          })),\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Orden ${editingOrder.id} actualizada con éxito`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatValue = (value) => {\r\n    if (!value) return 'N/A';\r\n    if (typeof value === 'string') return value;\r\n    if (value.name) return value.name;\r\n    return 'N/A';\r\n  };\r\n\r\n  const formatArray = (arr) => {\r\n    if (!arr || !Array.isArray(arr)) return formatValue(arr);\r\n    if (arr.length === 0) return 'N/A';\r\n    return arr.map(item => formatValue(item)).filter(v => v !== 'N/A').join(', ');\r\n  };\r\n\r\n  const statusColors = {\r\n    'Pendiente': 'bg-gray-100 text-gray-800',\r\n    'Preparando': 'bg-blue-100 text-blue-800',\r\n    'Completada': 'bg-green-100 text-green-800',\r\n    'Cancelada': 'bg-red-100 text-red-800',\r\n  };\r\n\r\n  const normalizedAdditions = useMemo(() => additions.map(add => ({\r\n    ...add,\r\n    price: add.name === 'Mojarra' ? 8000 : add.price,\r\n    requiresReplacement: add.requiresReplacement || ['Proteína adicional', 'Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name),\r\n  })).filter(add =>\r\n    add.name !== 'Arroz con pollo' &&\r\n    add.name !== 'Arroz paisa' &&\r\n    add.name !== 'Arroz tres carnes'\r\n  ), [additions]);\r\n\r\n  const getReplacementsForAdditions = (meal) => {\r\n    const selectedAdditions = meal?.additions || [];\r\n    const unconfiguredAdditions = selectedAdditions.filter(\r\n      (add) => add.requiresReplacement && (add.name === 'Proteína adicional' ? !add.protein : !add.replacement)\r\n    );\r\n    if (unconfiguredAdditions.length === 0) return [];\r\n\r\n    const firstUnconfigured = unconfiguredAdditions[0];\r\n    if (firstUnconfigured.name === 'Sopa adicional') return soups.filter(soup => soup.name !== 'Solo bandeja' && soup.name !== 'Remplazo por Sopa');\r\n    if (firstUnconfigured.name === 'Principio adicional') return principles.filter(principle =>\r\n      principle.name !== 'Remplazo por Principio' &&\r\n      !['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(principle.name)\r\n    );\r\n    if (firstUnconfigured.name === 'Proteína adicional') return proteins.filter((p) => p.name !== 'Mojarra');\r\n    if (firstUnconfigured.name === 'Bebida adicional') return drinks.filter((d) => d.name !== 'Sin bebida');\r\n    return [];\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-200 flex flex-col\">\r\n      <header className=\"bg-gray-800 text-white p-4\">\r\n        <h1 className=\"text-lg font-bold\">Gestión de Órdenes de Mesas</h1>\r\n      </header>\r\n      <main className=\"p-4 flex-grow w-full max-w-4xl mx-auto\">\r\n        <div className=\"flex border-b border-gray-300 mb-4\">\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'create' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('create')}\r\n          >\r\n            Crear Orden\r\n          </button>\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'view' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('view')}\r\n          >\r\n            Ver Órdenes\r\n          </button>\r\n        </div>\r\n        {activeTab === 'create' ? (\r\n          isOrderingDisabled || menuType === 'closed' ? (\r\n            <div className=\"flex flex-col items-center justify-center text-center bg-red-50 text-red-700 p-4 rounded-lg shadow-md\">\r\n              <h2 className=\"text-xl font-bold\">🚫 Restaurante cerrado</h2>\r\n              <p className=\"text-sm\">Los pedidos estarán disponibles nuevamente mañana.</p>\r\n            </div>\r\n          ) : menuType === 'breakfast' ? (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Desayuno disponible hasta {timeRemaining}\r\n              </p>\r\n              <BreakfastList\r\n                breakfasts={breakfasts}\r\n                setBreakfasts={setBreakfasts}\r\n                eggs={breakfastEggs}\r\n                broths={breakfastBroths}\r\n                riceBread={breakfastRiceBread}\r\n                drinks={breakfastDrinks}\r\n                additions={breakfastAdditions}\r\n                breakfastTypes={breakfastTypes}\r\n                breakfastProteins={breakfastProteins}\r\n                times={breakfastTimes}\r\n                paymentMethods={paymentMethods}\r\n                onBreakfastChange={(id, field, value) => handleBreakfastChange(setBreakfasts, id, field, value)}\r\n                onRemoveBreakfast={(id) => removeBreakfast(setBreakfasts, setSuccessMessage, id, breakfasts)}\r\n                onAddBreakfast={() => addBreakfast(setBreakfasts, setSuccessMessage, breakfasts, initializeBreakfastData({ isWaitress: true }))}\r\n                onDuplicateBreakfast={(breakfast) => duplicateBreakfast(setBreakfasts, setSuccessMessage, breakfast, breakfasts)}\r\n                incompleteBreakfastIndex={incompleteBreakfastIndex}\r\n                incompleteSlideIndex={incompleteBreakfastSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n                userRole={role}\r\n                savedAddress={{}}\r\n                isTableOrder={true}\r\n              />\r\n              <BreakfastOrderSummary\r\n                items={breakfasts}\r\n                onSendOrder={handleSendBreakfastOrder}\r\n                user={{ role: 3 }}\r\n                breakfastTypes={breakfastTypes}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Almuerzo disponible hasta {timeRemaining}\r\n              </p>\r\n              <MealList\r\n                meals={meals}\r\n                soups={soups}\r\n                soupReplacements={soupReplacements}\r\n                principles={principles}\r\n                proteins={proteins}\r\n                drinks={drinks}\r\n                sides={sides}\r\n                additions={additions}\r\n                paymentMethods={paymentMethods}\r\n                times={[]}\r\n                isTableOrder={true}\r\n                userRole={role}\r\n                onMealChange={(id, field, value) => handleMealChange(setMeals, id, field, value)}\r\n                onRemoveMeal={(id) => removeMeal(setMeals, setSuccessMessage, id, meals)}\r\n                onAddMeal={() => addMeal(setMeals, setSuccessMessage, meals, initializeMealData({}, true))}\r\n                onDuplicateMeal={(meal) => duplicateMeal(setMeals, setSuccessMessage, meal, meals)}\r\n                incompleteMealIndex={incompleteMealIndex}\r\n                incompleteSlideIndex={incompleteSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n              />\r\n              <OrderSummary\r\n                meals={meals}\r\n                onSendOrder={handleSendOrder}\r\n                calculateTotal={() => calculateTotal(meals, 3)}\r\n                isTableOrder={true}\r\n                isWaiterView={false}\r\n                userRole={3}\r\n              />\r\n            </>\r\n          )\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {orders.length === 0 ? (\r\n              <p className=\"text-center text-gray-700\">No has registrado órdenes de mesas.</p>\r\n            ) : (\r\n              orders.map(order => (\r\n                <div key={order.id} className={`p-4 rounded-lg shadow-md ${statusColors[order.status] || 'bg-white'}`}>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-sm font-semibold text-gray-800\">\r\n                      {order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo'} - Mesa {formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber)} - #{order.id.slice(-4)}\r\n                    </h2>\r\n                    <div className=\"relative\">\r\n                      <button\r\n                        onClick={() => setShowMenu(showMenu === order.id ? null : order.id)}\r\n                        className=\"text-gray-600 hover:text-gray-800 focus:outline-none\"\r\n                      >\r\n                        ⋮\r\n                      </button>\r\n                      {showMenu === order.id && (\r\n                        <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Pendiente', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Pendiente'}\r\n                          >\r\n                            Pendiente\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Preparando', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Preparando'}\r\n                          >\r\n                            Preparando\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Completada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Completada'}\r\n                          >\r\n                            Completada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Cancelada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Cancelada'}\r\n                          >\r\n                            Cancelada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleEditOrder(order)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                          >\r\n                            Editar\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {order.type === 'breakfast' ? (\r\n                    <BreakfastOrderSummary\r\n                      items={order.breakfasts}\r\n                      user={{ role: 3 }}\r\n                      breakfastTypes={breakfastTypes}\r\n                      statusClass={statusColors[order.status] || ''} // Añadir clase de estado\r\n                    />\r\n                  ) : (\r\n                    <OrderSummary\r\n                      meals={order.meals}\r\n                      isTableOrder={true}\r\n                      calculateTotal={() => order.total}\r\n                      isWaiterView={true}\r\n                      statusClass={statusColors[order.status] || ''}\r\n                      userRole={3}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n        {editingOrder && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-4 rounded-lg shadow-lg max-w-md w-full mx-4 overflow-y-auto\" style={{ maxHeight: '80vh' }}>\r\n              <h2 className=\"text-lg font-bold mb-4\">Editar Orden #{editingOrder.id.slice(-4)}</h2>\r\n              {editingOrder.type === 'lunch' ? (\r\n                editingOrder.meals.map((meal, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Almuerzo #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Sopa o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Sopa\"\r\n                          emoji=\"🥣\"\r\n                          options={soups}\r\n                          selected={meal.soup || meal.soupReplacement}\r\n                          showReplacements={meal.showReplacementsState?.soup || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={meal.soupReplacement?.replacement ? { name: meal.soupReplacement.replacement } : null}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Sopa selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, value?.name === 'Remplazo por Sopa' ? 'soupReplacement' : 'soup', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Sopa replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              soupReplacement: {\r\n                                ...newMeals[index].soupReplacement,\r\n                                name: 'Remplazo por Sopa',\r\n                                replacement: replacement?.name || ''\r\n                              }\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Principio o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Principio\"\r\n                          emoji=\"🍚\"\r\n                          options={principles}\r\n                          selected={meal.principle || meal.principleReplacement}\r\n                          showReplacements={meal.showReplacementsState?.principle || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={\r\n                            meal.principle?.find(opt => opt.name === 'Remplazo por Principio')?.replacement\r\n                              ? { name: meal.principle.find(opt => opt.name === 'Remplazo por Principio').replacement }\r\n                              : null\r\n                          }\r\n                          multiple={true}\r\n                          showConfirmButton={true}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Principio selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, 'principle', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Principio replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              principle: newMeals[index].principle?.map(opt => ({\r\n                                ...opt,\r\n                                replacement: opt.name === 'Remplazo por Principio' ? replacement?.name || '' : opt.replacement\r\n                              }))\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                          onConfirm={({ selection }) => handleFormChange(index, 'principle', selection)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={proteins}\r\n                          selected={meal.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={drinks}\r\n                          selected={meal.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Acompañamientos</label>\r\n                        <OptionSelector\r\n                          title=\"Acompañamiento\"\r\n                          emoji=\"🥗\"\r\n                          options={sides}\r\n                          selected={meal.sides}\r\n                          multiple={true}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'sides', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={meal.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={meal.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={meal.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Almuerzo #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por almuerzo)\"\r\n                          emoji=\"➕\"\r\n                          options={normalizedAdditions}\r\n                          selected={meal?.additions || []}\r\n                          multiple={true}\r\n                          showReplacements={meal?.additions?.some(\r\n                            add => add.requiresReplacement && (\r\n                              (add.name === 'Proteína adicional' && !add.protein) ||\r\n                              (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n                            )\r\n                          )}\r\n                          replacements={getReplacementsForAdditions(meal)}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for meal ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              ...add,\r\n                              quantity: add.quantity || 1,\r\n                              price: add.price || 0,\r\n                              protein: add.name === 'Proteína adicional' ? (add.protein || '') : add.protein || '',\r\n                              replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) ? (add.replacement || '') : add.replacement || '',\r\n                            })));\r\n                          }}\r\n                          onImmediateReplacementSelect={({ id: additionId, replacement }) => {\r\n                            console.log(`[WaiterDashboard] Replacement selected for meal ${index + 1}, addition ${additionId}:`, replacement);\r\n                            const updatedAdditions = (meal?.additions || []).map((add) => {\r\n                              if (add.id === additionId) {\r\n                                return {\r\n                                  ...add,\r\n                                  protein: add.name === 'Proteína adicional' ? replacement?.name || add.protein : add.protein,\r\n                                  replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name)\r\n                                    ? replacement?.name || add.replacement\r\n                                    : add.replacement,\r\n                                };\r\n                              }\r\n                              return add;\r\n                            });\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for meal ${index + 1}:`, addition);\r\n                            const existingAddition = meal?.additions?.find(a => a.id === addition.id);\r\n                            const updatedAdditions = existingAddition\r\n                              ? meal.additions.map(a => a.id === addition.id ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(meal.additions || []), { ...addition, quantity: 1, price: addition.price || 0 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions\r\n                              .map(add => add.id === additionId ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions.map(add =>\r\n                              add.id === additionId ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {meal?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este almuerzo: $\r\n                            {meal.additions.reduce((sum, item) => sum + (item?.price || 0) * (item?.quantity || 1), 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                editingOrder.breakfasts.map((breakfast, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Desayuno #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Desayuno</label>\r\n                        <OptionSelector\r\n                          title=\"Tipo\"\r\n                          emoji=\"🥞\"\r\n                          options={breakfastTypes}\r\n                          selected={breakfast.type}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'type', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Caldo</label>\r\n                        <OptionSelector\r\n                          title=\"Caldo\"\r\n                          emoji=\"🥣\"\r\n                          options={breakfastBroths}\r\n                          selected={breakfast.broth}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'broth', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Huevos</label>\r\n                        <OptionSelector\r\n                          title=\"Huevos\"\r\n                          emoji=\"🥚\"\r\n                          options={breakfastEggs}\r\n                          selected={breakfast.eggs}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'eggs', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Arroz/Pan</label>\r\n                        <OptionSelector\r\n                          title=\"Arroz/Pan\"\r\n                          emoji=\"🍞\"\r\n                          options={breakfastRiceBread}\r\n                          selected={breakfast.riceBread}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'riceBread', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={breakfastDrinks}\r\n                          selected={breakfast.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={breakfastProteins}\r\n                          selected={breakfast.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={breakfast.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={breakfast.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={breakfast.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={breakfast.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Desayuno #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por desayuno)\"\r\n                          emoji=\"➕\"\r\n                          options={breakfastAdditions}\r\n                          selected={breakfast?.additions || []}\r\n                          multiple={true}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for breakfast ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              name: add.name,\r\n                              quantity: add.quantity || 1,\r\n                            })));\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for breakfast ${index + 1}:`, addition);\r\n                            const existingAddition = breakfast?.additions?.find(a => a.name === addition.name);\r\n                            const updatedAdditions = existingAddition\r\n                              ? breakfast.additions.map(a => a.name === addition.name ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(breakfast.additions || []), { name: addition.name, quantity: 1 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions\r\n                              .map(add => add.name === additionName ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions.map(add =>\r\n                              add.name === additionName ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {breakfast?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este desayuno: $\r\n                            {breakfast.additions.reduce((sum, item) => {\r\n                              const addition = breakfastAdditions.find(a => a.name === item.name);\r\n                              return sum + (addition?.price || 0) * (item?.quantity || 1);\r\n                            }, 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <div>\r\n                <label className=\"text-xs block mb-1 font-medium\">Total (editable)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={editingOrder.total !== undefined ? editingOrder.total : (editingOrder.type === 'lunch' ? calculateTotal(editingOrder.meals, 3) : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes))}\r\n                  onChange={(e) => handleFormChange(-1, 'total', e.target.value)}\r\n                  placeholder=\"Total\"\r\n                  className=\"w-full p-2 border rounded text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2 mt-4 sticky bottom-4 bg-white py-2\">\r\n                <button\r\n                  onClick={handleSaveEdit}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\r\n                >\r\n                  Guardar\r\n                </button>\r\n                <button\r\n                  onClick={() => setEditingOrder(null)}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      <div className=\"fixed top-16 right-4 z-[10002] space-y-2 w-80 max-w-xs\">\r\n        {isLoading && <LoadingIndicator />}\r\n        {errorMessage && (\r\n          <ErrorMessage message={errorMessage} onClose={() => setErrorMessage(null)} />\r\n        )}\r\n        {successMessage && (\r\n          <SuccessMessage message={successMessage} onClose={() => setSuccessMessage(null)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaiterDashboard;"],"names":["WaiterDashboard","user","role","loading","useAuth","navigate","useNavigate","meals","setMeals","useState","initializeMealData","breakfasts","setBreakfasts","initializeBreakfastData","isWaitress","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","incompleteMealIndex","setIncompleteMealIndex","incompleteSlideIndex","setIncompleteSlideIndex","incompleteBreakfastIndex","setIncompleteBreakfastIndex","incompleteBreakfastSlideIndex","setIncompleteBreakfastSlideIndex","soups","setSoups","soupReplacements","setSoupReplacements","principles","setPrinciples","proteins","setProteins","drinks","setDrinks","sides","setSides","additions","setAdditions","paymentMethods","setPaymentMethods","breakfastEggs","setBreakfastEggs","breakfastBroths","setBreakfastBroths","breakfastRiceBread","setBreakfastRiceBread","breakfastDrinks","setBreakfastDrinks","breakfastAdditions","setBreakfastAdditions","breakfastTypes","setBreakfastTypes","breakfastProteins","setBreakfastProteins","breakfastTimes","setBreakfastTimes","isOrderingDisabled","setIsOrderingDisabled","orders","setOrders","activeTab","setActiveTab","editingOrder","setEditingOrder","showMenu","setShowMenu","menuType","setMenuType","schedules","setSchedules","breakfastStart","breakfastEnd","lunchStart","lunchEnd","timeRemaining","setTimeRemaining","useEffect","setTimeout","setters","unsubscribers","map","col","index","onSnapshot","collection","db","snapshot","data","docs","doc","id","length","error","settingsUnsubscribe","docSnapshot","exists","schedulesUnsubscribe","breakfastOrdersUnsubscribe","breakfastOrders","type","filter","order","userId","uid","sort","a","b","Date","createdAt","prev","ordersUnsubscribe","orderData","forEach","unsubscribe","updateMenuTypeAndTime","now","totalMinutes","getHours","getMinutes","menu","timeString","formatTime","minutes","hours","Math","floor","period","toString","padStart","interval","setInterval","clearInterval","timer","clearTimeout","handleStatusChange","async","orderId","newStatus","orderType","console","log","collectionName","orderRef","updateDoc","status","updatedAt","slice","message","handleFormChange","field","value","total","parseFloat","newMeals","name","showReplacementsState","soup","soupReplacement","some","opt","principle","updatedTotal","calculateTotal","newBreakfasts","calculateTotalBreakfastPrice","formatValue","statusColors","normalizedAdditions","useMemo","add","price","requiresReplacement","includes","getReplacementsForAdditions","meal","unconfiguredAdditions","protein","replacement","firstUnconfigured","p","d","_jsx","className","children","_jsxs","onClick","_Fragment","BreakfastList","eggs","broths","riceBread","times","onBreakfastChange","handleBreakfastChange","onRemoveBreakfast","removeBreakfast","onAddBreakfast","addBreakfast","onDuplicateBreakfast","breakfast","duplicateBreakfast","userRole","savedAddress","isTableOrder","BreakfastOrderSummary","items","onSendOrder","incompleteIndex","incompleteSlide","firstMissingField","_breakfast$type2","typeData","Array","isArray","find","bt","_breakfast$type","steps","missing","push","step","tableNumber","paymentMethod","broth","drink","element","document","getElementById","scrollIntoView","behavior","block","classList","remove","userEmail","email","_breakfast$additions","addition","quantity","notes","process","addDoc","MealList","onMealChange","handleMealChange","onRemoveMeal","removeMeal","onAddMeal","addMeal","onDuplicateMeal","duplicateMeal","OrderSummary","i","isCompleteRice","slideMap","principleReplacement","dispatchEvent","CustomEvent","detail","slideIndex","_meal$additions","s","isWaiterView","_order$meals","_order$meals$","_order$breakfasts","_order$breakfasts$","disabled","initializedOrder","_meal$soupReplacement","_meal$soupReplacement2","_meal$principle","handleEditOrder","statusClass","style","maxHeight","_meal$showReplacement","_meal$soupReplacement3","_meal$showReplacement2","_meal$principle2","_meal$principle2$find","_meal$additions3","_meal$additions5","OptionSelector","title","emoji","options","selected","showReplacements","replacements","selectedReplacement","multiple","onImmediateSelect","onImmediateReplacementSelect","showConfirmButton","_newMeals$index$princ","onConfirm","_ref","selection","onChange","e","target","placeholder","_ref2","additionId","updatedAdditions","onAdd","_meal$additions4","onRemove","onIncrease","reduce","sum","item","toLocaleString","_breakfast$additions4","_breakfast$additions3","additionName","undefined","entries","_meal$additions2","_breakfast$type4","_breakfast$type3","_breakfast$additions2","LoadingIndicator","ErrorMessage","onClose","SuccessMessage"],"sourceRoot":""}