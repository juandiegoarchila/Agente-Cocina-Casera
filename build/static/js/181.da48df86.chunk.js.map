{"version":3,"file":"static/js/181.da48df86.chunk.js","mappings":"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","sources":["utils/classNames.js","components/Admin/TableOrdersAdmin.js"],"sourcesContent":["// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { ArrowDownTrayIcon, ChevronLeftIcon, ChevronRightIcon, InformationCircleIcon, TrashIcon, EllipsisVerticalIcon, PencilIcon } from '@heroicons/react/24/outline';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport OrderSummary from '../OrderSummary';\r\nimport * as XLSX from 'xlsx';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { calculateTotal } from '../../utils/MealCalculations';\r\nimport { calculateTotalBreakfastPrice } from '../../utils/BreakfastLogic';\r\nimport { format } from 'date-fns';\r\n\r\nconst TableOrdersAdmin = ({ theme = 'light' }) => {\r\n  const { user, role, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [orders, setOrders] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [sortField, setSortField] = useState('createdAt');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [showMealDetails, setShowMealDetails] = useState(null);\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [orderTypeFilter, setOrderTypeFilter] = useState('all'); // 'all', 'breakfast', 'lunch'\r\n  const [breakfastTypes, setBreakfastTypes] = useState([]);\r\n  const menuRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user || role !== 2) {\r\n      setErrorMessage('Acceso denegado. Solo los administradores pueden acceder a esta página.');\r\n      setTimeout(() => navigate('/login'), 3000);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Escuchar breakfastTypes para calcular precios de desayunos\r\n    const breakfastTypesUnsubscribe = onSnapshot(collection(db, 'breakfastTypes'), (snapshot) => {\r\n      const types = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setBreakfastTypes(types);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated breakfastTypes:', types);\r\n    }, (error) => {\r\n      console.error('Error al escuchar breakfastTypes:', error);\r\n      setErrorMessage('Error al cargar tipos de desayuno. Intenta de nuevo.');\r\n    });\r\n\r\n    // Escuchar breakfastOrders\r\n    const breakfastOrdersUnsubscribe = onSnapshot(collection(db, 'breakfastOrders'), (snapshot) => {\r\n      const breakfastOrders = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        type: 'breakfast',\r\n      }));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'breakfast'), ...breakfastOrders]);\r\n      setIsLoading(false);\r\n      if (process.env.NODE_ENV === 'development') console.log('Órdenes de desayuno cargadas:', breakfastOrders);\r\n    }, (error) => {\r\n      console.error('Error al escuchar breakfastOrders:', error);\r\n      setErrorMessage('Error al cargar órdenes de desayunos. Intenta de nuevo.');\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // Escuchar tableOrders\r\n    const tableOrdersUnsubscribe = onSnapshot(collection(db, 'tableOrders'), (snapshot) => {\r\n      const tableOrders = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        type: 'lunch',\r\n      }));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'lunch'), ...tableOrders]);\r\n      setIsLoading(false);\r\n      if (process.env.NODE_ENV === 'development') console.log('Órdenes de almuerzo cargadas:', tableOrders);\r\n    }, (error) => {\r\n      console.error('Error al escuchar tableOrders:', error);\r\n      setErrorMessage('Error al cargar órdenes de mesas. Intenta de nuevo.');\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => {\r\n      breakfastTypesUnsubscribe();\r\n      breakfastOrdersUnsubscribe();\r\n      tableOrdersUnsubscribe();\r\n    };\r\n  }, [user, loading, role, navigate]);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n    if (isMenuOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isMenuOpen]);\r\n\r\n  const calculateTotals = () => {\r\n    const totals = { cash: 0, nequi: 0, daviplata: 0 };\r\n    orders.forEach(order => {\r\n      if (order.status !== 'Cancelada') {\r\n        order.meals?.forEach(meal => {\r\n          const paymentMethod = meal.paymentMethod?.name?.toLowerCase();\r\n          const portionTotal = order.total / (order.meals?.length || 1);\r\n          if (paymentMethod === 'efectivo') totals.cash += portionTotal;\r\n          else if (paymentMethod === 'nequi') totals.nequi += portionTotal;\r\n          else if (paymentMethod === 'daviplata') totals.daviplata += portionTotal;\r\n        });\r\n        order.breakfasts?.forEach(breakfast => {\r\n          const paymentMethod = breakfast.paymentMethod?.name?.toLowerCase();\r\n          const portionTotal = order.total / (order.breakfasts?.length || 1);\r\n          if (paymentMethod === 'efectivo') totals.cash += portionTotal;\r\n          else if (paymentMethod === 'nequi') totals.nequi += portionTotal;\r\n          else if (paymentMethod === 'daviplata') totals.daviplata += portionTotal;\r\n        });\r\n      }\r\n    });\r\n    return totals;\r\n  };\r\n\r\n  const totals = calculateTotals();\r\n\r\n  const filteredOrders = orders.filter(order => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    const matchesSearch = order.id.toLowerCase().includes(searchLower) ||\r\n      order.meals?.some(meal =>\r\n        meal.tableNumber?.toString().toLowerCase().includes(searchLower) ||\r\n        meal.paymentMethod?.name?.toLowerCase().includes(searchLower) ||\r\n        meal.notes?.toLowerCase().includes(searchLower)\r\n      ) ||\r\n      order.breakfasts?.some(breakfast =>\r\n        breakfast.tableNumber?.toString().toLowerCase().includes(searchLower) ||\r\n        breakfast.paymentMethod?.name?.toLowerCase().includes(searchLower) ||\r\n        breakfast.notes?.toLowerCase().includes(searchLower)\r\n      );\r\n    return matchesSearch && (orderTypeFilter === 'all' || order.type === orderTypeFilter);\r\n  });\r\n\r\n  const sortedOrders = [...filteredOrders].sort((a, b) => {\r\n    const field = sortField === 'orderNumber' ? 'id' : sortField;\r\n    const aValue = field === 'id' ? a.id : a[field] || '';\r\n    const bValue = field === 'id' ? b.id : b[field] || '';\r\n    return sortOrder === 'asc' ? (aValue > bValue ? 1 : -1) : (aValue < bValue ? 1 : -1);\r\n  });\r\n\r\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\r\n  const paginatedOrders = sortedOrders.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  const handleSort = (field) => {\r\n    if (sortField === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField === field) {\r\n      return sortOrder === 'asc' ? '↑' : '↓';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const order = orders.find(o => o.id === orderId);\r\n      const collectionName = order.type === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, orderId);\r\n      await updateDoc(orderRef, { status: newStatus, updatedAt: new Date() });\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado:', error);\r\n      setErrorMessage('Error al actualizar el estado de la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteOrder = async (orderId) => {\r\n    if (!window.confirm('¿Estás seguro de que deseas eliminar esta orden?')) return;\r\n    try {\r\n      setIsLoading(true);\r\n      const order = orders.find(o => o.id === orderId);\r\n      const collectionName = order.type === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      await deleteDoc(doc(db, collectionName, orderId));\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al eliminar orden:', error);\r\n      setErrorMessage('Error al eliminar la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    if (order.type === 'lunch') {\r\n      setEditingOrder({\r\n        ...order,\r\n        meals: order.meals.map(meal => ({\r\n          ...meal,\r\n          soup: meal.soup || null,\r\n          soupReplacement: meal.soupReplacement || null,\r\n          principle: meal.principle || [],\r\n          protein: meal.protein || null,\r\n          drink: meal.drink || null,\r\n          sides: meal.sides || [],\r\n          paymentMethod: meal.paymentMethod || null,\r\n          tableNumber: meal.tableNumber || '',\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n        })),\r\n      });\r\n    } else if (order.type === 'breakfast') {\r\n      setEditingOrder({\r\n        ...order,\r\n        breakfasts: order.breakfasts.map(breakfast => ({\r\n          type: breakfast.type || null,\r\n          broth: breakfast.broth || null,\r\n          eggs: breakfast.eggs || null,\r\n          riceBread: breakfast.riceBread || null,\r\n          drink: breakfast.drink || null,\r\n          protein: breakfast.protein || null,\r\n          additions: breakfast.additions || [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          paymentMethod: breakfast.paymentMethod || null,\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const order = orders.find(o => o.id === editingOrder.id);\r\n      const collectionName = order.type === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, editingOrder.id);\r\n      await updateDoc(orderRef, {\r\n        ...(order.type === 'lunch' ? { meals: editingOrder.meals } : { breakfasts: editingOrder.breakfasts }),\r\n        total: editingOrder.total || (order.type === 'lunch' ? calculateTotal(editingOrder.meals, role) : calculateTotalBreakfastPrice(editingOrder.breakfasts, role, breakfastTypes)),\r\n        updatedAt: new Date(),\r\n      });\r\n      setEditingOrder(null);\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al guardar edición:', error);\r\n      setErrorMessage('Error al guardar los cambios. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFormChange = (index, field, value) => {\r\n    if (field === 'total' && index === -1) {\r\n      setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n    } else if (editingOrder.type === 'lunch') {\r\n      const newMeals = [...editingOrder.meals];\r\n      if (field === 'principle' || field === 'sides') {\r\n        newMeals[index] = { ...newMeals[index], [field]: value ? value.split(', ').map(name => ({ name })) : [] };\r\n      } else if (field === 'soup' || field === 'soupReplacement' || field === 'protein' || field === 'drink' || field === 'paymentMethod') {\r\n        newMeals[index] = { ...newMeals[index], [field]: value ? { name: value } : null };\r\n      } else {\r\n        newMeals[index] = { ...newMeals[index], [field]: value };\r\n      }\r\n      setEditingOrder({ ...editingOrder, meals: newMeals });\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      const newBreakfasts = [...editingOrder.breakfasts];\r\n      if (field === 'additions') {\r\n        newBreakfasts[index] = { ...newBreakfasts[index], [field]: value ? value.split(', ').map(name => ({ name, quantity: 1 })) : [] };\r\n      } else if (field === 'type' || field === 'broth' || field === 'eggs' || field === 'riceBread' || field === 'drink' || field === 'protein' || field === 'paymentMethod') {\r\n        newBreakfasts[index] = { ...newBreakfasts[index], [field]: value ? { name: value } : null };\r\n      } else {\r\n        newBreakfasts[index] = { ...newBreakfasts[index], [field]: value };\r\n      }\r\n      setEditingOrder({ ...editingOrder, breakfasts: newBreakfasts });\r\n    }\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const data = filteredOrders.map(order => ({\r\n      'Nº Orden': order.id.slice(0, 8),\r\n      'Tipo': order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n      'Mesa': formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n      'Estado': order.status,\r\n      'Total': `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n      'Método de Pago': formatValue(order.meals?.[0]?.paymentMethod || order.breakfasts?.[0]?.paymentMethod),\r\n      'Detalles': order.type === 'lunch'\r\n        ? order.meals.map((meal, index) => `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatArray(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatArray(meal.sides)}, Notas: ${meal.notes || 'Ninguna'}`).join('; ')\r\n        : order.breakfasts.map((breakfast, index) => `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatArray(breakfast.additions)}, Notas: ${breakfast.notes || 'Ninguna'}`).join('; '),\r\n    }));\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Órdenes');\r\n    XLSX.writeFile(workbook, `ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.xlsx`);\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text('Órdenes', 14, 10);\r\n    doc.autoTable({\r\n      head: [['Nº Orden', 'Tipo', 'Mesa', 'Estado', 'Total', 'Método de Pago', 'Detalles']],\r\n      body: filteredOrders.map(order => [\r\n        order.id.slice(0, 8),\r\n        order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n        formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n        order.status,\r\n        `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n        formatValue(order.meals?.[0]?.paymentMethod || order.breakfasts?.[0]?.paymentMethod),\r\n        order.type === 'lunch'\r\n          ? order.meals.map((meal, index) => `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatArray(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatArray(meal.sides)}`).join('; ')\r\n          : order.breakfasts.map((breakfast, index) => `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatArray(breakfast.additions)}`).join('; '),\r\n      ]),\r\n    });\r\n    doc.save(`ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.pdf`);\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const csvContent = [\r\n      ['Nº Orden', 'Tipo', 'Mesa', 'Estado', 'Total', 'Método de Pago', 'Detalles'],\r\n      ...filteredOrders.map(order => [\r\n        order.id.slice(0, 8),\r\n        order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n        formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n        order.status,\r\n        `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n        formatValue(order.meals?.[0]?.paymentMethod || order.breakfasts?.[0]?.paymentMethod),\r\n        `\"${order.type === 'lunch'\r\n          ? order.meals.map((meal, index) => `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatArray(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatArray(meal.sides)}, Notas: ${meal.notes || 'Ninguna'}`).join('; ')\r\n          : order.breakfasts.map((breakfast, index) => `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatArray(breakfast.additions)}, Notas: ${breakfast.notes || 'Ninguna'}`).join('; ')}\"`,\r\n      ]),\r\n    ].map(row => row.join(',')).join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.csv`;\r\n    link.click();\r\n  };\r\n\r\n  const handleExport = (exportFunc, type) => {\r\n    exportFunc();\r\n    setErrorMessage(null);\r\n  };\r\n\r\n  const formatValue = (value) => {\r\n    if (!value) return 'N/A';\r\n    if (typeof value === 'string') return value;\r\n    if (value.name) return value.name;\r\n    return 'N/A';\r\n  };\r\n\r\n  const formatArray = (arr) => {\r\n    if (!arr || !Array.isArray(arr)) return formatValue(arr);\r\n    if (arr.length === 0) return 'N/A';\r\n    return arr.map(item => formatValue(item)).filter(v => v !== 'N/A').join(', ');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n      <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6\">Gestión de pedidos Mesas</h2>\r\n\r\n      {/* Totals Section */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6 text-sm text-gray-700 dark:text-gray-300\">\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Efectivo</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${totals.cash.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Daviplata</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${totals.daviplata.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Nequi</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${totals.nequi.toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total General</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${(totals.cash + totals.daviplata + totals.nequi).toLocaleString('es-CO')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search and Menu */}\r\n      <div className=\"flex flex-wrap justify-between items-center mb-6 gap-3 sm:gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n          placeholder=\"Buscar órdenes por ID, mesa o método de pago...\"\r\n          className={classNames(\r\n            \"p-2 sm:p-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-blue-500 w-full sm:max-w-xs shadow-sm text-sm sm:text-base transition-all duration-200\",\r\n            theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n          )}\r\n        />\r\n        <div className=\"relative z-50 flex-shrink-0\" ref={menuRef}>\r\n          <button\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            className={classNames(\r\n              \"flex items-center justify-center p-2 rounded-lg text-xs sm:text-sm font-medium transition-all duration-200\",\r\n              'focus:outline-none focus:ring-2 focus:ring-blue-500'\r\n            )}\r\n            aria-label=\"Opciones de menú\"\r\n          >\r\n            <EllipsisVerticalIcon\r\n              className={classNames(\r\n                \"w-6 h-6\",\r\n                theme === 'dark' ? 'text-gray-200 hover:text-white' : 'text-gray-700 hover:text-gray-900'\r\n              )}\r\n            />\r\n          </button>\r\n          {isMenuOpen && (\r\n            <div className={classNames(\r\n              \"absolute right-0 mt-2 w-48 rounded-lg shadow-xl z-50\",\r\n              theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-white text-gray-900'\r\n            )}>\r\n              <div className=\"py-1\">\r\n                <button\r\n                  onClick={() => { setOrderTypeFilter('breakfast'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\"\r\n                >\r\n                  Ver Desayunos\r\n                </button>\r\n                <button\r\n                  onClick={() => { setOrderTypeFilter('lunch'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\"\r\n                >\r\n                  Ver Almuerzos\r\n                </button>\r\n                <button\r\n                  onClick={() => { setOrderTypeFilter('all'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\"\r\n                >\r\n                  Ver Todos\r\n                </button>\r\n                <button\r\n                  onClick={() => { handleExport(exportToExcel, 'Excel'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\"\r\n                >\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar Excel\r\n                </button>\r\n                <button\r\n                  onClick={() => { handleExport(exportToPDF, 'PDF'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\"\r\n                >\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar PDF\r\n                </button>\r\n                <button\r\n                  onClick={() => { handleExport(exportToCSV, 'CSV'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\"\r\n                >\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar CSV\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Orders Table */}\r\n      <div className={classNames(\r\n        \"p-3 sm:p-4 rounded-2xl shadow-xl max-h-[70vh] overflow-y-auto custom-scrollbar transition-all duration-300\",\r\n        theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n      )}>\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center h-40\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-4 border-blue-500\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full text-left border-collapse text-sm\">\r\n                <thead>\r\n                  <tr className={classNames(\r\n                    \"font-semibold sticky top-0 z-10 shadow-sm\",\r\n                    theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-700'\r\n                  )}>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('orderNumber')}>\r\n                      Nº {getSortIcon('orderNumber')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b whitespace-nowrap\">Detalles</th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('meals.0.tableNumber')}>\r\n                      Mesa {getSortIcon('meals.0.tableNumber')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('meals.0.paymentMethod.name')}>\r\n                      Pago {getSortIcon('meals.0.paymentMethod.name')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('total')}>\r\n                      Total {getSortIcon('total')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('status')}>\r\n                      Estado {getSortIcon('status')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b whitespace-nowrap\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {paginatedOrders.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\r\n                        No se encontraron órdenes de mesas. Intenta ajustar tu búsqueda.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    paginatedOrders.map((order, index) => {\r\n                      const displayNumber = sortOrder === 'asc'\r\n                        ? (currentPage - 1) * itemsPerPage + index + 1\r\n                        : paginatedOrders.length - ((currentPage - 1) * itemsPerPage + index);\r\n                      const paymentDisplay = formatValue(order.meals?.[0]?.paymentMethod || order.breakfasts?.[0]?.paymentMethod);\r\n                      const statusClass = order.status === 'Pendiente' ? 'bg-yellow-500 text-black' :\r\n                                         order.status === 'Preparando' ? 'bg-blue-500 text-white' :\r\n                                         order.status === 'Completada' ? 'bg-green-500 text-white' :\r\n                                         order.status === 'Cancelada' ? 'bg-red-500 text-white' : '';\r\n\r\n                      return (\r\n                        <tr\r\n                          key={order.id}\r\n                          className={classNames(\r\n                            \"border-b transition-colors duration-150\",\r\n                            theme === 'dark' ? 'border-gray-700 hover:bg-gray-700' : 'border-gray-200 hover:bg-gray-50',\r\n                            index % 2 === 0 ? (theme === 'dark' ? 'bg-gray-750' : 'bg-gray-50') : ''\r\n                          )}\r\n                        >\r\n                          <td className=\"p-2 sm:p-3 text-gray-300\">{displayNumber}</td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300\">\r\n                            <button\r\n                              onClick={() => setShowMealDetails(order)}\r\n                              className=\"text-blue-400 hover:text-blue-300 text-xs sm:text-sm flex items-center\"\r\n                              title=\"Ver detalles de la orden\"\r\n                            >\r\n                              <InformationCircleIcon className=\"w-4 h-4 mr-1\" />\r\n                              Ver\r\n                            </button>\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">{formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber)}</td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">{paymentDisplay}</td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">${order.total?.toLocaleString('es-CO') || 'N/A'}</td>\r\n                          <td className=\"p-2 sm:p-3 whitespace-nowrap\">\r\n                            <select\r\n                              value={order.status || 'Pendiente'}\r\n                              onChange={(e) => handleStatusChange(order.id, e.target.value)}\r\n                              className={classNames(\r\n                                \"px-2 py-1 rounded-full text-xs font-semibold appearance-none cursor-pointer\",\r\n                                statusClass,\r\n                                theme === 'dark' ? 'bg-opacity-70' : 'bg-opacity-90',\r\n                                \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                              )}\r\n                            >\r\n                              <option value=\"Pendiente\">Pendiente</option>\r\n                              <option value=\"Preparando\">Preparando</option>\r\n                              <option value=\"Completada\">Completada</option>\r\n                              <option value=\"Cancelada\">Cancelada</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 whitespace-nowrap\">\r\n                            <button\r\n                              onClick={() => handleEditOrder(order)}\r\n                              className=\"text-blue-500 hover:text-blue-400 transition-colors duration-150 p-1 rounded-md mr-2\"\r\n                              title=\"Editar orden\"\r\n                              aria-label={`Editar orden ${displayNumber}`}\r\n                            >\r\n                              <PencilIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                            <button\r\n                              onClick={() => handleDeleteOrder(order.id)}\r\n                              className=\"text-red-500 hover:text-red-400 transition-colors duration-150 p-1 rounded-md\"\r\n                              title=\"Eliminar orden\"\r\n                              aria-label={`Eliminar orden ${displayNumber}`}\r\n                            >\r\n                              <TrashIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3\">\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                <span>Órdenes por página:</span>\r\n                <select\r\n                  value={itemsPerPage}\r\n                  onChange={(e) => { setItemsPerPage(Number(e.target.value)); setCurrentPage(1); }}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md border text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n                  )}\r\n                >\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                <button\r\n                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md transition-colors duration-200\",\r\n                    currentPage === 1\r\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\r\n                      : theme === 'dark' ? 'hover:bg-gray-700 text-gray-200' : 'hover:bg-gray-100 text-gray-700'\r\n                  )}\r\n                >\r\n                  <ChevronLeftIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                <span>Página {currentPage} de {totalPages}</span>\r\n                <button\r\n                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                  disabled={currentPage === totalPages}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md transition-colors duration-200\",\r\n                    currentPage === totalPages\r\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\r\n                      : theme === 'dark' ? 'hover:bg-gray-700 text-gray-200' : 'hover:bg-gray-100 text-gray-700'\r\n                  )}\r\n                >\r\n                  <ChevronRightIcon className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Meal Details Modal */}\r\n            {showMealDetails && (\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[10001]\">\r\n                <div className={classNames(\r\n                  \"p-4 sm:p-6 rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto\",\r\n                  theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900'\r\n                )}>\r\n                  <h3 className=\"text-lg font-semibold mb-4\">Detalles de la Orden #{showMealDetails.id.slice(0, 8)}</h3>\r\n                  <p className=\"text-sm mb-2\">Mesa: {showMealDetails.meals?.[0]?.tableNumber || showMealDetails.breakfasts?.[0]?.tableNumber || 'N/A'}</p>\r\n                  <p className=\"text-sm mb-2\">Estado: {showMealDetails.status}</p>\r\n                  <p className=\"text-sm mb-4\">Total: ${showMealDetails.total?.toLocaleString('es-CO') || 'N/A'}</p>\r\n                  <OrderSummary\r\n                    meals={showMealDetails.meals || showMealDetails.breakfasts}\r\n                    isTableOrder={true}\r\n                    calculateTotal={() => showMealDetails.total}\r\n                  />\r\n                  <button\r\n                    onClick={() => setShowMealDetails(null)}\r\n                    className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm\"\r\n                  >\r\n                    Cerrar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Edit Order Modal */}\r\n            {editingOrder && (\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[10001]\">\r\n                <div className={classNames(\r\n                  \"p-4 sm:p-6 rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto\",\r\n                  theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900'\r\n                )}>\r\n                  <h3 className=\"text-lg font-semibold mb-4\">Editar Orden #{editingOrder.id.slice(0, 8)}</h3>\r\n                  {editingOrder.type === 'lunch' ? (\r\n                    editingOrder.meals.map((meal, index) => (\r\n                      <div key={index} className=\"mt-2\">\r\n                        <h4 className=\"text-sm font-medium\">Almuerzo #{index + 1}</h4>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Sopa o Reemplazo</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={meal.soup?.name || meal.soupReplacement?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, meal.soup ? 'soup' : 'soupReplacement', e.target.value)}\r\n                            placeholder=\"Sopa o reemplazo\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Principio</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formatArray(meal.principle)}\r\n                            onChange={(e) => handleFormChange(index, 'principle', e.target.value)}\r\n                            placeholder=\"Principio\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Proteína</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={meal.protein?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'protein', e.target.value)}\r\n                            placeholder=\"Proteína\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Bebida</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={meal.drink?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'drink', e.target.value)}\r\n                            placeholder=\"Bebida\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Acompañamientos</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formatArray(meal.sides)}\r\n                            onChange={(e) => handleFormChange(index, 'sides', e.target.value)}\r\n                            placeholder=\"Acompañamientos\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Método de Pago</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={meal.paymentMethod?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'paymentMethod', e.target.value)}\r\n                            placeholder=\"Método de pago\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Número de Mesa</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={meal.tableNumber || ''}\r\n                            onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                            placeholder=\"Número de mesa\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Tipo de Pedido</label>\r\n                          <select\r\n                            value={meal.orderType || ''}\r\n                            onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          >\r\n                            <option value=\"\">Seleccionar</option>\r\n                            <option value=\"table\">Para mesa</option>\r\n                            <option value=\"takeaway\">Para llevar</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Notas</label>\r\n                          <textarea\r\n                            value={meal.notes || ''}\r\n                            onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                            placeholder=\"Notas\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    editingOrder.breakfasts.map((breakfast, index) => (\r\n                      <div key={index} className=\"mt-2\">\r\n                        <h4 className=\"text-sm font-medium\">Desayuno #{index + 1}</h4>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Tipo de Desayuno</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.type?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'type', e.target.value)}\r\n                            placeholder=\"Tipo de desayuno\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Caldo</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.broth?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'broth', e.target.value)}\r\n                            placeholder=\"Caldo\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Huevos</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.eggs?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'eggs', e.target.value)}\r\n                            placeholder=\"Huevos\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Arroz/Pan</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.riceBread?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'riceBread', e.target.value)}\r\n                            placeholder=\"Arroz/Pan\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Bebida</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.drink?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'drink', e.target.value)}\r\n                            placeholder=\"Bebida\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Proteína</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.protein?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'protein', e.target.value)}\r\n                            placeholder=\"Proteína\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Adiciones</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formatArray(breakfast.additions)}\r\n                            onChange={(e) => handleFormChange(index, 'additions', e.target.value)}\r\n                            placeholder=\"Adiciones\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Método de Pago</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.paymentMethod?.name || ''}\r\n                            onChange={(e) => handleFormChange(index, 'paymentMethod', e.target.value)}\r\n                            placeholder=\"Método de pago\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Número de Mesa</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={breakfast.tableNumber || ''}\r\n                            onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                            placeholder=\"Número de mesa\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Tipo de Pedido</label>\r\n                          <select\r\n                            value={breakfast.orderType || ''}\r\n                            onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          >\r\n                            <option value=\"\">Seleccionar</option>\r\n                            <option value=\"table\">Para mesa</option>\r\n                            <option value=\"takeaway\">Para llevar</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                          <label className=\"text-xs\">Notas</label>\r\n                          <textarea\r\n                            value={breakfast.notes || ''}\r\n                            onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                            placeholder=\"Notas\"\r\n                            className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  )}\r\n                  <div>\r\n                    <label className=\"text-xs block mb-1\">Total (editable)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editingOrder.total || ''}\r\n                      onChange={(e) => handleFormChange(-1, 'total', e.target.value)}\r\n                      placeholder=\"Total\"\r\n                      className=\"w-full p-2 mt-1 border rounded text-sm\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-4 flex space-x-2\">\r\n                    <button\r\n                      onClick={handleSaveEdit}\r\n                      className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\r\n                    >\r\n                      Guardar\r\n                    </button>\r\n                    <button\r\n                      onClick={() => setEditingOrder(null)}\r\n                      className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\r\n                    >\r\n                      Cancelar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"fixed top-16 right-4 z-[10002] space-y-2 w-80 max-w-xs\">\r\n        {isLoading && <LoadingIndicator />}\r\n        {errorMessage && (\r\n          <ErrorMessage message={errorMessage} onClose={() => setErrorMessage(null)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableOrdersAdmin;"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","_ref","_showMealDetails$meal","_showMealDetails$meal2","_showMealDetails$brea","_showMealDetails$brea2","_showMealDetails$tota","theme","user","role","loading","useAuth","navigate","useNavigate","orders","setOrders","useState","searchTerm","setSearchTerm","isLoading","setIsLoading","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","sortField","setSortField","sortOrder","setSortOrder","isMenuOpen","setIsMenuOpen","showMealDetails","setShowMealDetails","editingOrder","setEditingOrder","orderTypeFilter","setOrderTypeFilter","breakfastTypes","setBreakfastTypes","menuRef","useRef","useEffect","setTimeout","breakfastTypesUnsubscribe","onSnapshot","collection","db","snapshot","types","docs","map","doc","id","data","error","console","breakfastOrdersUnsubscribe","breakfastOrders","type","prev","order","tableOrdersUnsubscribe","tableOrders","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","totals","calculateTotals","cash","nequi","daviplata","forEach","_order$meals","_order$breakfasts","status","meals","meal","_meal$paymentMethod","_meal$paymentMethod$n","_order$meals2","paymentMethod","name","toLowerCase","portionTotal","total","breakfasts","breakfast","_breakfast$paymentMet","_breakfast$paymentMet2","_order$breakfasts2","filteredOrders","_order$meals3","_order$breakfasts3","searchLower","includes","some","_meal$tableNumber","_meal$paymentMethod2","_meal$paymentMethod2$","_meal$notes","tableNumber","toString","notes","_breakfast$tableNumbe","_breakfast$paymentMet3","_breakfast$paymentMet4","_breakfast$notes","sortedOrders","sort","a","b","field","aValue","bValue","totalPages","Math","ceil","paginatedOrders","slice","handleSort","getSortIcon","handleFormChange","index","value","parseFloat","newMeals","split","newBreakfasts","quantity","exportToExcel","_order$meals4","_order$meals4$","_order$breakfasts4","_order$breakfasts4$","_order$total","_order$meals5","_order$meals5$","_order$breakfasts5","_order$breakfasts5$","formatValue","toLocaleString","soup","soupReplacement","formatArray","principle","protein","drink","sides","broth","eggs","riceBread","additions","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","format","Date","exportToPDF","jsPDF","text","autoTable","head","body","_order$meals6","_order$meals6$","_order$breakfasts6","_order$breakfasts6$","_order$total2","_order$meals7","_order$meals7$","_order$breakfasts7","_order$breakfasts7$","save","exportToCSV","csvContent","_order$meals8","_order$meals8$","_order$breakfasts8","_order$breakfasts8$","_order$total3","_order$meals9","_order$meals9$","_order$breakfasts9","_order$breakfasts9$","row","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","handleExport","exportFunc","arr","isArray","item","v","_jsx","className","children","_jsxs","onChange","e","placeholder","ref","onClick","EllipsisVerticalIcon","ArrowDownTrayIcon","_Fragment","colSpan","_order$meals0","_order$meals0$","_order$breakfasts0","_order$breakfasts0$","_order$meals1","_order$meals1$","_order$breakfasts1","_order$breakfasts1$","_order$total4","displayNumber","paymentDisplay","statusClass","title","InformationCircleIcon","async","orderId","newStatus","collectionName","find","o","orderRef","updateDoc","updatedAt","handleStatusChange","orderType","handleEditOrder","PencilIcon","window","confirm","deleteDoc","handleDeleteOrder","TrashIcon","Number","max","disabled","ChevronLeftIcon","min","ChevronRightIcon","OrderSummary","isTableOrder","calculateTotal","_meal$soup","_meal$soupReplacement","_meal$protein","_meal$drink","_meal$paymentMethod3","_breakfast$type","_breakfast$broth","_breakfast$eggs","_breakfast$riceBread","_breakfast$drink","_breakfast$protein","_breakfast$paymentMet5","calculateTotalBreakfastPrice","LoadingIndicator","ErrorMessage","message","onClose"],"sourceRoot":""}