{"version":3,"file":"static/js/969.1bd4d42e.chunk.js","mappings":"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","sources":["components/Admin/AdminPage.js"],"sourcesContent":["// src/components/Admin/AdminPage.js\r\nimport React, { useState, useEffect, lazy, Suspense } from 'react'; // Asegúrate de tener lazy y Suspense aquí\r\nimport { useNavigate, Routes, Route, Link, useLocation } from 'react-router-dom';\r\nimport { db, auth } from '../../config/firebase';\r\nimport { query, collection, where, getDocs } from 'firebase/firestore';\r\nimport { signOut } from 'firebase/auth';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { Disclosure, Transition } from '@headlessui/react';\r\nimport {\r\n  Bars3Icon, XMarkIcon, ChartBarIcon, UserGroupIcon,\r\n  ClockIcon, DocumentTextIcon, CogIcon, ArrowLeftOnRectangleIcon,\r\n  BellIcon, SunIcon, MoonIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\n\r\n// Lazy load components\r\nconst Dashboard = lazy(() => import('./Dashboard'));\r\nconst MenuManagement = lazy(() => import('./MenuManagement'));\r\nconst ClosingTime = lazy(() => import('./ClosingTime'));\r\nconst OrderManagement = lazy(() => import('./OrderManagement'));\r\nconst UserManagement = lazy(() => import('./UserManagement'));\r\nconst Settings = lazy(() => import('./Settings'));\r\nconst Notifications = lazy(() => import('./Notifications'));\r\n\r\n\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { user, loading } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [adminLoading, setAdminLoading] = useState(true);\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n    const [theme, setTheme] = useState('dark');\r\n\r\nuseEffect(() => {\r\n    if (loading) return;\r\n\r\n    const checkAdminStatus = async () => {\r\n        try {\r\n            if (!user) {\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            const q = query(\r\n                collection(db, 'users'),\r\n                where('email', '==', user.email),\r\n                where('role', '==', 2)\r\n            );\r\n            const snapshot = await getDocs(q);\r\n            if (snapshot.empty) {\r\n                setError('No tienes permisos de administrador');\r\n                navigate('/login');\r\n            } else {\r\n                setIsAdmin(true);\r\n            }\r\n        } catch (err) {\r\n            if (process.env.NODE_ENV === 'development') {\r\n                console.error('Error verificando admin:', err);\r\n            }\r\n            setError('Error verificando permisos');\r\n            navigate('/login');\r\n        } finally {\r\n            setAdminLoading(false);\r\n        }\r\n    };\r\n    checkAdminStatus();\r\n}, [user, loading, navigate]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await signOut(auth);\r\n            setIsAdmin(false);\r\n            navigate('/login');\r\n        } catch (error) {\r\n            setError(`Error al cerrar sesión: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error || success) {\r\n            const timer = setTimeout(() => {\r\n                setError('');\r\n                setSuccess('');\r\n            }, 5000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [error, success]);\r\n\r\n    if (loading || adminLoading) {\r\n        return <div className=\"p-4 text-white bg-gray-900 min-h-screen flex items-center justify-center\">Verificando permisos...</div>;\r\n    }\r\n\r\n    if (!isAdmin) {\r\n        return null;\r\n    }\r\n\r\n    const navigation = [\r\n        { name: 'Dashboard', to: '/admin', icon: ChartBarIcon },\r\n        { name: 'Gestión de Menú', to: '/admin/menu', icon: DocumentTextIcon },\r\n        { name: 'Activar Hora de Cierre', to: '/admin/closing-time', icon: ClockIcon },\r\n        { name: 'Gestión de Pedidos', to: '/admin/orders', icon: DocumentTextIcon },\r\n        { name: 'Gestión de Usuarios', to: '/admin/users', icon: UserGroupIcon },\r\n        { name: 'Configuración', to: '/admin/settings', icon: CogIcon },\r\n        { name: 'Notificaciones', to: '/admin/notifications', icon: BellIcon },\r\n    ];\r\n\r\n    return (\r\n        <div className={`min-h-screen ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gray-100 text-gray-900'} flex flex-col relative`}>\r\n            {/* Header */}\r\n            <Disclosure as=\"nav\" className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'} shadow-lg fixed top-0 left-0 right-0 z-50`}>\r\n                {({ open }) => (\r\n                    <>\r\n                        <div className=\"max-w-full mx-auto px-2 sm:px-4 lg:px-8\">\r\n                            <div className=\"flex items-center justify-between h-16\">\r\n                                <div className=\"flex items-center\">\r\n                                    <button\r\n                                        onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n                                        className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none -ml-2\"\r\n                                    >\r\n                                        <span className=\"sr-only\">Toggle sidebar</span>\r\n                                        {isSidebarOpen ? (\r\n                                            <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                                        ) : (\r\n                                            <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                                        )}\r\n                                    </button>\r\n                                    <h1 className=\"text-base sm:text-lg font-semibold ml-2 sm:ml-4\">Panel de Administración</h1>\r\n                                </div>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <button\r\n                                        onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\r\n                                        className={`p-2 rounded-full ${theme === 'dark' ? 'text-yellow-400 hover:bg-gray-700' : 'text-orange-500 hover:bg-gray-300'} focus:outline-none`}\r\n                                        aria-label=\"Toggle theme\"\r\n                                    >\r\n                                        {theme === 'dark' ? (\r\n                                            <SunIcon className=\"h-6 w-6\" />\r\n                                        ) : (\r\n                                            <MoonIcon className=\"h-6 w-6\" />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Transition\r\n                            show={isSidebarOpen}\r\n                            enter=\"transition-all duration-300 ease-out\"\r\n                            enterFrom=\"-translate-x-full\"\r\n                            enterTo=\"translate-x-0\"\r\n                            leave=\"transition-all duration-300 ease-in\"\r\n                            leaveFrom=\"translate-x-0\"\r\n                            leaveTo=\"-translate-x-full\"\r\n                        >\r\n                            <Disclosure.Panel className=\"sm:hidden fixed top-0 left-0 h-full w-full bg-black/50 z-40\" onClick={() => setIsSidebarOpen(false)}>\r\n                                <div className={`h-full ${isSidebarOpen ? 'w-64' : 'w-0'} ${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'} p-4 transition-all duration-300 shadow-lg`} onClick={(e) => e.stopPropagation()}>\r\n                                    <div className=\"flex justify-between items-center mb-6\">\r\n                                        <h2 className={`text-xl font-bold ${theme === 'dark' ? 'text-gray-100' : 'text-gray-800'}`}>Cocina Casera</h2>\r\n                                        <button\r\n                                            onClick={() => setIsSidebarOpen(false)}\r\n                                            className=\"p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none\"\r\n                                        >\r\n                                            <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                                        </button>\r\n                                    </div>\r\n                                    <nav className=\"space-y-2 flex flex-col h-[calc(100vh-8rem)]\">\r\n                                        {navigation.map((item) => (\r\n                                            <Link\r\n                                                key={item.name}\r\n                                                to={item.to}\r\n                                                className={`relative flex items-center px-4 py-2 rounded-md text-sm font-medium\r\n                                                ${\r\n                                                    location.pathname === item.to\r\n                                                        ? theme === 'dark'\r\n                                                            ? 'bg-indigo-700 text-white'\r\n                                                            : 'bg-indigo-200 text-indigo-800'\r\n                                                        : theme === 'dark'\r\n                                                            ? 'text-gray-300 hover:text-white hover:bg-gray-700'\r\n                                                            : 'text-gray-700 hover:text-black hover:bg-gray-300'\r\n                                                }\r\n                                                transition-all duration-200\r\n                                            `}\r\n                                                onClick={() => setIsSidebarOpen(false)}\r\n                                            >\r\n                                                {location.pathname === item.to && (\r\n                                                    <span className={`absolute left-0 top-0 h-full w-1 ${theme === 'dark' ? 'bg-indigo-400' : 'bg-indigo-600'} rounded-l-md`} />\r\n                                                )}\r\n                                                <item.icon\r\n                                                    className={`w-6 h-6 mr-2 ${\r\n                                                        theme === 'dark' ? 'text-gray-200' : 'text-gray-700'\r\n                                                    }`}\r\n                                                />\r\n                                                <span>{item.name}</span>\r\n                                            </Link>\r\n                                        ))}\r\n                                        <button\r\n                                            onClick={handleLogout}\r\n                                            className={`mt-auto flex items-center px-4 py-2 rounded-md text-sm font-medium\r\n                                                ${theme === 'dark'\r\n                                                    ? 'text-red-300 hover:text-white hover:bg-red-700'\r\n                                                    : 'text-red-600 hover:text-red-800 hover:bg-red-200'\r\n                                                } transition-all duration-200`}\r\n                                        >\r\n                                            <ArrowLeftOnRectangleIcon\r\n                                                className={`w-6 h-6 mr-2 ${\r\n                                                    theme === 'dark' ? 'text-red-300' : 'text-red-600'\r\n                                                }`}\r\n                                            />\r\n                                            <span>Cerrar Sesión</span>\r\n                                        </button>\r\n                                    </nav>\r\n                                </div>\r\n                            </Disclosure.Panel>\r\n                        </Transition>\r\n                    </>\r\n                )}\r\n            </Disclosure>\r\n\r\n            {/* Desktop Sidebar */}\r\n            <div\r\n                className={`hidden sm:block fixed top-16 bottom-0 left-0 ${\r\n                    isSidebarOpen ? 'w-64' : 'w-16'\r\n                } ${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'} p-4 transition-all duration-300 z-40`}\r\n                onMouseEnter={() => setIsSidebarOpen(true)}\r\n                onMouseLeave={() => setIsSidebarOpen(false)}\r\n            >\r\n                <div className=\"flex justify-between items-center mb-6\">\r\n                    <h2 className={`text-xl font-bold ${theme === 'dark' ? 'text-gray-100' : 'text-gray-800'} ${isSidebarOpen ? 'block' : 'hidden'}`}>\r\n                        Cocina Casera\r\n                    </h2>\r\n                </div>\r\n                <nav className=\"space-y-2 flex flex-col h-[calc(100vh-8rem)]\">\r\n                    {navigation.map((item) => (\r\n                        <Link\r\n                            key={item.name}\r\n                            to={item.to}\r\n                            className={`relative flex items-center px-4 py-2 rounded-md text-sm font-medium min-w-[48px]\r\n                                ${\r\n                                    location.pathname === item.to\r\n                                        ? theme === 'dark'\r\n                                            ? 'bg-indigo-700 text-white'\r\n                                            : 'bg-indigo-200 text-indigo-800'\r\n                                        : isSidebarOpen\r\n                                            ? theme === 'dark'\r\n                                                ? 'text-gray-300 hover:text-white hover:bg-gray-700'\r\n                                                : 'text-gray-700 hover:text-black hover:bg-gray-300'\r\n                                            : 'justify-center'\r\n                                } transition-all duration-300`}\r\n                        >\r\n                            {location.pathname === item.to && (\r\n                                <span className={`absolute left-0 top-0 h-full w-1 ${theme === 'dark' ? 'bg-indigo-400' : 'bg-indigo-600'} rounded-l-md`} />\r\n                            )}\r\n                            <item.icon\r\n                                className={`w-6 h-6 ${isSidebarOpen ? 'mr-2' : 'mr-0'} ${\r\n                                    theme === 'dark' ? 'text-gray-200' : 'text-gray-700'\r\n                                }`}\r\n                            />\r\n                            <span className={`transition-opacity duration-200 ${isSidebarOpen ? 'opacity-100 block' : 'opacity-0 hidden'}`}>{item.name}</span>\r\n                        </Link>\r\n                    ))}\r\n                    <button\r\n                        onClick={handleLogout}\r\n                        className={`mt-auto flex items-center px-4 py-2 rounded-md text-sm font-medium min-w-[48px]\r\n                            ${isSidebarOpen\r\n                                ? theme === 'dark'\r\n                                    ? 'text-red-300 hover:text-white hover:bg-red-700'\r\n                                    : 'text-red-600 hover:text-red-800 hover:bg-red-200'\r\n                                : 'justify-center'\r\n                            } transition-all duration-300`}\r\n                    >\r\n                        <ArrowLeftOnRectangleIcon\r\n                            className={`w-6 h-6 ${isSidebarOpen ? 'mr-2' : 'mr-0'} ${\r\n                                theme === 'dark' ? 'text-red-300' : 'text-red-600'\r\n                            }`}\r\n                        />\r\n                        <span className={`transition-opacity duration-200 ${isSidebarOpen ? 'opacity-100 block' : 'opacity-0 hidden'}`}>Cerrar Sesión</span>\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n\r\n            {/* Content */}\r\n            <div\r\n                className={`flex-1 p-4 pt-20 sm:pt-20 ${\r\n                    isSidebarOpen ? 'sm:ml-64' : 'sm:ml-16'\r\n                } transition-all duration-300 min-h-screen`}\r\n            >\r\n                {error && (\r\n                    <div className=\"fixed top-24 right-4 bg-red-600 text-white p-4 rounded-lg shadow-lg z-50 max-w-xs sm:max-w-sm\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                {success && (\r\n                    <div className=\"fixed top-24 right-4 bg-green-600 text-white p-4 rounded-lg shadow-lg z-50 max-w-xs sm:max-w-sm\">\r\n                        {success}\r\n                    </div>\r\n                )}\r\n                {/* Suspense aquí para los componentes del dashboard */}\r\n                <Suspense fallback={<div className=\"text-center py-8\">Cargando sección...</div>}>\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/\"\r\n                            element={<Dashboard setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/menu\"\r\n                            element={<MenuManagement setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/closing-time\"\r\n                            element={<ClosingTime setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/orders\"\r\n                            element={<OrderManagement setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/users\"\r\n                            element={<UserManagement setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/settings\"\r\n                            element={\r\n                                <Settings setError={setError} setSuccess={setSuccess} theme={theme} setTheme={setTheme} />\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/notifications\"\r\n                            element={<Notifications setError={setError} setSuccess={setSuccess} theme={theme} />}\r\n                        />\r\n                    </Routes>\r\n                </Suspense>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;"],"names":["Dashboard","lazy","MenuManagement","ClosingTime","OrderManagement","UserManagement","Settings","Notifications","AdminPage","navigate","useNavigate","location","useLocation","user","loading","useAuth","error","setError","useState","success","setSuccess","isAdmin","setIsAdmin","adminLoading","setAdminLoading","isSidebarOpen","setIsSidebarOpen","theme","setTheme","useEffect","async","q","query","collection","db","where","email","getDocs","empty","err","process","checkAdminStatus","handleLogout","signOut","auth","message","timer","setTimeout","clearTimeout","_jsx","className","children","navigation","name","to","icon","ChartBarIcon","DocumentTextIcon","ClockIcon","UserGroupIcon","CogIcon","BellIcon","_jsxs","Disclosure","as","_ref","open","_Fragment","onClick","XMarkIcon","Bars3Icon","SunIcon","MoonIcon","Transition","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","e","stopPropagation","map","item","Link","pathname","ArrowLeftOnRectangleIcon","onMouseEnter","onMouseLeave","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}