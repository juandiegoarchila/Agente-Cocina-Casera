{"version":3,"file":"static/js/181.526ece90.chunk.js","mappings":"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","sources":["components/common/PaymentSplitEditor.js","utils/payments.js","utils/classNames.js","components/Admin/TableOrdersAdmin.js"],"sourcesContent":["// src/components/common/PaymentSplitEditor.jsx\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { classNames } from '../../utils/classNames';\r\n\r\nconst toInt = (v) => {\r\n  const n = Math.floor(Number(v || 0));\r\n  return Number.isFinite(n) ? n : 0;\r\n};\r\n\r\nconst normKey = (s) => (s || '').toString().trim().toLowerCase();\r\n\r\nconst buildMethodOptions = (catalogMethods) => {\r\n  if (Array.isArray(catalogMethods) && catalogMethods.length) {\r\n    const names = catalogMethods\r\n      .map((m) => (typeof m === 'string' ? m : (m?.name || m?.label || '')))\r\n      .filter(Boolean);\r\n    return Array.from(new Set(names));\r\n  }\r\n  return ['Efectivo', 'Nequi', 'Daviplata'];\r\n};\r\n\r\nexport default function PaymentSplitEditor({\r\n  theme = 'light',\r\n  total = 0,\r\n  value = [],\r\n  onChange,\r\n  catalogMethods = [],\r\n  disabled = false,\r\n}) {\r\n  const methods = useMemo(() => buildMethodOptions(catalogMethods), [catalogMethods]);\r\n\r\n  const [rows, setRows] = useState(() => {\r\n    const sanitized = Array.isArray(value) ? value : [];\r\n    if (sanitized.length) {\r\n      return sanitized.map((r) => ({\r\n        method: typeof r.method === 'string' ? r.method : (r?.method?.name || ''),\r\n        amount: toInt(r.amount),\r\n        note: r.note || '',\r\n      }));\r\n    }\r\n    return [{ method: 'Efectivo', amount: toInt(total), note: '' }];\r\n  });\r\n\r\n  useEffect(() => {\r\n    const sanitized = Array.isArray(value) ? value : [];\r\n    if (sanitized.length) {\r\n      setRows(\r\n        sanitized.map((r) => ({\r\n          method: typeof r.method === 'string' ? r.method : (r?.method?.name || ''),\r\n          amount: toInt(r.amount),\r\n          note: r.note || '',\r\n        }))\r\n      );\r\n    }\r\n  }, [value]);\r\n\r\n  const sum = rows.reduce((acc, r) => acc + toInt(r.amount), 0);\r\n  const diff = toInt(total) - sum;\r\n  const ok = diff === 0;\r\n\r\n  const emit = (next) => {\r\n    setRows(next);\r\n    onChange &&\r\n      onChange(\r\n        next.map((r) => ({\r\n          method: r.method,\r\n          amount: toInt(r.amount),\r\n          note: r.note || '',\r\n        }))\r\n      );\r\n  };\r\n\r\n  const handleChange = (idx, key, val) => {\r\n    const next = rows.map((r, i) => (i === idx ? { ...r, [key]: key === 'amount' ? toInt(val) : val } : r));\r\n    emit(next);\r\n  };\r\n\r\n  const addRow = () => {\r\n    const unused = methods.find((m) => !rows.some((r) => normKey(r.method) === normKey(m))) || methods[0];\r\n    const next = [...rows, { method: unused, amount: Math.max(0, diff), note: '' }];\r\n    emit(next);\r\n  };\r\n\r\n  const removeRow = (idx) => {\r\n    const next = rows.filter((_, i) => i !== idx);\r\n    emit(next.length ? next : [{ method: 'Efectivo', amount: toInt(total), note: '' }]);\r\n  };\r\n\r\n  const fill5050 = () => {\r\n    if (methods.length < 2) return;\r\n    const half = Math.floor(toInt(total) / 2);\r\n    const rest = toInt(total) - half;\r\n    emit([\r\n      { method: methods[0], amount: half, note: '' },\r\n      { method: methods[1], amount: rest, note: '' },\r\n    ]);\r\n  };\r\n\r\n  const split3 = () => {\r\n    const a = Math.floor(toInt(total) / 3);\r\n    const b = Math.floor((toInt(total) - a) / 2);\r\n    const c = toInt(total) - a - b;\r\n    emit([\r\n      { method: methods[0] || 'Efectivo', amount: a, note: '' },\r\n      { method: methods[1] || 'Nequi', amount: b, note: '' },\r\n      { method: methods[2] || 'Daviplata', amount: c, note: '' },\r\n    ]);\r\n  };\r\n\r\n  const setAllTo = (m) => {\r\n    emit([{ method: m, amount: toInt(total), note: '' }]);\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"p-3 rounded-lg border\", theme === 'dark' ? 'border-gray-600 bg-gray-800' : 'border-gray-200 bg-gray-50')}>\r\n      <div className=\"flex flex-wrap items-center justify-between gap-2 mb-2\">\r\n        <h5 className=\"font-semibold text-sm\">Dividir pago</h5>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <button type=\"button\" disabled={disabled} onClick={fill5050}\r\n            className={classNames(\"px-2 py-1 rounded text-xs border\", theme==='dark'?'border-gray-500 hover:bg-gray-700':'border-gray-300 hover:bg-white')}>\r\n            50 / 50\r\n          </button>\r\n          <button type=\"button\" disabled={disabled} onClick={split3}\r\n            className={classNames(\"px-2 py-1 rounded text-xs border\", theme==='dark'?'border-gray-500 hover:bg-gray-700':'border-gray-300 hover:bg-white')}>\r\n            1/3 cada uno\r\n          </button>\r\n          {methods.map((m) => (\r\n            <button key={m} type=\"button\" disabled={disabled} onClick={() => setAllTo(m)}\r\n              className={classNames(\"px-2 py-1 rounded text-xs border\", theme==='dark'?'border-gray-500 hover:bg-gray-700':'border-gray-300 hover:bg-white')}>\r\n              Todo {m}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        {rows.map((r, idx) => (\r\n          <div key={idx} className=\"grid grid-cols-1 sm:grid-cols-12 gap-2 items-center\">\r\n            <select\r\n              disabled={disabled}\r\n              value={r.method}\r\n              onChange={(e) => handleChange(idx, 'method', e.target.value)}\r\n              className={classNames(\"sm:col-span-4 p-2 rounded border text-sm\", theme==='dark'?'border-gray-600 bg-gray-700 text-white':'border-gray-300 bg-white')}\r\n            >\r\n              {methods.map((m) => (\r\n                <option key={m} value={m}>{m}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              disabled={disabled}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"1\"\r\n              value={r.amount}\r\n              onChange={(e) => handleChange(idx, 'amount', e.target.value)}\r\n              className={classNames(\"sm:col-span-4 p-2 rounded border text-sm\", theme==='dark'?'border-gray-600 bg-gray-700 text-white':'border-gray-300 bg-white')}\r\n              placeholder=\"Monto en COP\"\r\n            />\r\n\r\n            <input\r\n              disabled={disabled}\r\n              type=\"text\"\r\n              value={r.note || ''}\r\n              onChange={(e) => handleChange(idx, 'note', e.target.value)}\r\n              className={classNames(\"sm:col-span-3 p-2 rounded border text-sm\", theme==='dark'?'border-gray-600 bg-gray-700 text-white':'border-gray-300 bg-white')}\r\n              placeholder=\"Nota (opcional)\"\r\n            />\r\n\r\n            <div className=\"sm:col-span-1 flex justify-end\">\r\n              <button type=\"button\" disabled={disabled} onClick={() => removeRow(idx)}\r\n                className={classNames(\"px-2 py-1 rounded text-xs border\", theme==='dark'?'border-gray-500 hover:bg-gray-700':'border-gray-300 hover:bg-white')}>\r\n                ✕\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"mt-3 flex items-center justify-between text-sm\">\r\n        <button type=\"button\" disabled={disabled} onClick={addRow}\r\n          className={classNames(\"px-3 py-1 rounded border\", theme==='dark'?'border-gray-500 hover:bg-gray-700':'border-gray-300 hover:bg-white')}>\r\n          + Añadir línea\r\n        </button>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          <span>Total pedido:</span>\r\n          <strong>${toInt(total).toLocaleString('es-CO')}</strong>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-2\">\r\n        {ok ? (\r\n          <span className={classNames(\"inline-block text-xs px-2 py-1 rounded\", theme==='dark'?'bg-green-700 text-white':'bg-green-100 text-green-800')}>\r\n            ✔ Suma exacta\r\n          </span>\r\n        ) : diff > 0 ? (\r\n          <span className={classNames(\"inline-block text-xs px-2 py-1 rounded\", theme==='dark'?'bg-yellow-700 text-white':'bg-yellow-100 text-yellow-800')}>\r\n            Falta asignar ${diff.toLocaleString('es-CO')}\r\n          </span>\r\n        ) : (\r\n          <span className={classNames(\"inline-block text-xs px-2 py-1 rounded\", theme==='dark'?'bg-red-700 text-white':'bg-red-100 text-red-800')}>\r\n            Sobran ${Math.abs(diff).toLocaleString('es-CO')}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/utils/payments.js\r\n// Utilidades para normalizar métodos de pago y sumar exactamente por split o legado.\r\n\r\nconst norm = (s) => (s ?? '').toString().trim().toLowerCase();\r\n\r\nexport const normalizePaymentMethodKey = (methodLike) => {\r\n  const raw =\r\n    typeof methodLike === 'string'\r\n      ? methodLike\r\n      : methodLike?.name || methodLike?.label || methodLike?.title || methodLike?.method || methodLike?.type || methodLike?.payment || '';\r\n  const t = norm(raw);\r\n  if (t.includes('efect') || t.includes('cash')) return 'cash';\r\n  if (t.includes('nequi')) return 'nequi';\r\n  if (t.includes('davi')) return 'daviplata';\r\n  return 'other';\r\n};\r\n\r\nconst pickMethodLabel = (methodLike) => {\r\n  if (typeof methodLike === 'string') return methodLike;\r\n  return (\r\n    methodLike?.name ||\r\n    methodLike?.label ||\r\n    methodLike?.title ||\r\n    methodLike?.method ||\r\n    methodLike?.type ||\r\n    methodLike?.payment ||\r\n    'Otro'\r\n  );\r\n};\r\n\r\n/**\r\n * Extrae filas [{methodKey, amount, rawLabel}] desde una orden.\r\n * - Si existe order.payments (split), lo usa.\r\n * - Sino, detecta método legado y asigna 100% del total.\r\n * - Sino, cae en {other}.\r\n */\r\nexport const extractOrderPayments = (order) => {\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n\r\n  if (Array.isArray(order?.payments) && order.payments.length) {\r\n    return order.payments.map((p) => {\r\n      const amount = Math.floor(Number(p?.amount || 0)) || 0;\r\n      return {\r\n        methodKey: normalizePaymentMethodKey(p?.method),\r\n        amount,\r\n        rawLabel: pickMethodLabel(p?.method),\r\n      };\r\n    });\r\n  }\r\n\r\n  const legacySources = [\r\n    order?.meals?.[0]?.paymentMethod ?? order?.meals?.[0]?.payment,\r\n    order?.breakfasts?.[0]?.payment ?? order?.breakfasts?.[0]?.paymentMethod,\r\n    order?.paymentMethod ?? order?.payment,\r\n  ].filter(Boolean);\r\n\r\n  if (legacySources.length) {\r\n    const label = pickMethodLabel(legacySources[0]);\r\n    return [\r\n      {\r\n        methodKey: normalizePaymentMethodKey(legacySources[0]),\r\n        amount: total,\r\n        rawLabel: label,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return [{ methodKey: 'other', amount: total, rawLabel: 'Otro' }];\r\n};\r\n\r\n/** Texto compacto: \"Efectivo $6.000 + Nequi $6.000\" */\r\nexport const summarizePayments = (paymentsRows = []) => {\r\n  if (!Array.isArray(paymentsRows) || !paymentsRows.length) return 'Sin pago';\r\n  const agg = paymentsRows.reduce((a, r) => {\r\n    const key = r.methodKey || normalizePaymentMethodKey(r?.method);\r\n    a[key] = (a[key] || 0) + (Math.floor(Number(r.amount || 0)) || 0);\r\n    return a;\r\n  }, {});\r\n  const asText = [];\r\n  if (agg.cash) asText.push(`Efectivo $${agg.cash.toLocaleString('es-CO')}`);\r\n  if (agg.nequi) asText.push(`Nequi $${agg.nequi.toLocaleString('es-CO')}`);\r\n  if (agg.daviplata) asText.push(`Daviplata $${agg.daviplata.toLocaleString('es-CO')}`);\r\n  if (agg.other && !asText.length) asText.push(`Otro $${agg.other.toLocaleString('es-CO')}`);\r\n  return asText.join(' + ') || 'Sin pago';\r\n};\r\n\r\n/**\r\n * Valor por defecto para el editor de split:\r\n * - Si hay split → se usa tal cual\r\n * - Si hay método legado → 100% al método\r\n * - Sino → 100% Efectivo\r\n */\r\nexport const defaultPaymentsForOrder = (order) => {\r\n  const rows = extractOrderPayments(order);\r\n  if (rows?.length) return rows.map(({ methodKey, amount }) => ({ method: methodKey, amount }));\r\n  const total = Math.floor(Number(order?.total || 0)) || 0;\r\n  return [{ method: 'cash', amount: total }];\r\n};\r\n\r\n/**\r\n * Totales simples por método (para tiles/chips rápidos).\r\n * Devuelve: { cash, nequi, daviplata, other, total }\r\n */\r\nexport const sumPaymentsByMethod = (orders = []) => {\r\n  const out = { cash: 0, nequi: 0, daviplata: 0, other: 0, total: 0 };\r\n  for (const order of orders) {\r\n    const rows = extractOrderPayments(order);\r\n    for (const r of rows) {\r\n      const amt = Math.floor(Number(r.amount || 0)) || 0;\r\n      out[r.methodKey] = (out[r.methodKey] || 0) + amt;\r\n      out.total += amt;\r\n    }\r\n  }\r\n  return out;\r\n};\r\n\r\n/** Helpers de clasificación por tipo/ubicación */\r\nexport const isBreakfastOrder = (order) =>\r\n  order?.type === 'breakfast' || Array.isArray(order?.breakfasts);\r\n\r\nexport const isDeliveryOrder = (order) => {\r\n  const tag =\r\n    order?.orderType ||\r\n    order?.meals?.[0]?.orderType ||\r\n    order?.breakfasts?.[0]?.orderType ||\r\n    '';\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  const c = norm(tag);\r\n  if (collection.includes('delivery')) return true;\r\n  if (c.includes('delivery') || c.includes('domicil')) return true;\r\n  return false;\r\n};\r\n\r\nexport const isTableOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  if (collection.includes('table')) return true;\r\n  const tableNumber =\r\n    order?.meals?.[0]?.tableNumber ?? order?.breakfasts?.[0]?.tableNumber;\r\n  return !!tableNumber;\r\n};\r\n\r\n/** Consideramos \"salón\" lo hecho por mesero: mesa o llevar desde mesa/breakfast table/takeaway */\r\nexport const isSalonOrder = (order) => {\r\n  const collection = (order?.__collection || '').toLowerCase();\r\n  // Cualquier cosa que provenga de colecciones de mesa pertenece a salón\r\n  if (collection.includes('table')) return true;\r\n\r\n  // Para desayunos creados como mesa o para llevar por mesero, también cuenta como salón\r\n  const t = norm(order?.orderType || order?.breakfasts?.[0]?.orderType || '');\r\n  if (Array.isArray(order?.breakfasts) && (t.includes('table') || t.includes('takeaway') || t.includes('para llevar') || t.includes('llevar'))) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n\r\n/** Marcas típicas para saber si el domiciliario ya liquidó el efectivo */\r\nexport const isCashSettled = (order) => {\r\n  if (order?.settlement?.status && norm(order.settlement.status) === 'liquidated') return true;\r\n  if (order?.liquidated === true) return true;\r\n  if (order?.cashSettled === true) return true;\r\n  if (order?.settledAt) return true;\r\n  return false;\r\n};\r\n\r\n/** Totales por método con semántica de caja */\r\nexport const calcMethodTotalsAll = (orders = [], tableOrders = [], breakfastOrders = []) => {\r\n  const acc = {\r\n    nequiTotal: 0,\r\n    daviplataTotal: 0,\r\n    nequiPendiente: 0,\r\n    daviplatasPendiente: 0,\r\n    cashSalon: 0,\r\n    cashClientesSettled: 0,\r\n    cashClientesPendiente: 0,\r\n    totalLiquidado: 0,\r\n    totalPendiente: 0,\r\n    totalDomicilios: 0,\r\n    totalSalon: 0\r\n  };\r\n\r\n  const accumulate = (list = []) => {\r\n    for (const o of list) {\r\n      const rows = extractOrderPayments(o);\r\n      const isSalon = isSalonOrder(o);\r\n      \r\n      // Para cada método de pago en la orden\r\n      for (const r of rows) {\r\n        const amt = Math.floor(Number(r?.amount || 0)) || 0;\r\n        if (amt <= 0) continue;\r\n\r\n        if (isSalon) {\r\n          // Los pagos de salón siempre se suman al total\r\n          acc.totalSalon += amt;\r\n          if (r.methodKey === 'cash') acc.cashSalon += amt;\r\n          else if (r.methodKey === 'nequi') acc.nequiTotal += amt;\r\n          else if (r.methodKey === 'daviplata') acc.daviplataTotal += amt;\r\n          acc.totalLiquidado += amt;\r\n        } else {\r\n          // Para domicilios\r\n          acc.totalDomicilios += amt;\r\n          \r\n          // Depende del estado de liquidación\r\n          if (r.methodKey === 'cash') {\r\n            if (o?.settled || o?.paymentSettled?.cash) {\r\n              acc.cashClientesSettled += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.cashClientesPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n          else if (r.methodKey === 'nequi') {\r\n            if (o?.settled || o?.paymentSettled?.nequi) {\r\n              acc.nequiTotal += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.nequiPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n          else if (r.methodKey === 'daviplata') {\r\n            if (o?.settled || o?.paymentSettled?.daviplata) {\r\n              acc.daviplataTotal += amt;\r\n              acc.totalLiquidado += amt;\r\n            } else {\r\n              acc.daviplatasPendiente += amt;\r\n              acc.totalPendiente += amt;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  accumulate(orders);\r\n  accumulate(tableOrders);\r\n  accumulate(breakfastOrders);\r\n\r\n  acc.cashCaja = acc.cashSalon + acc.cashClientesSettled;\r\n  \r\n  return acc;\r\n};\r\n","// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}","// src/components/Admin/TableOrdersAdmin.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\nimport { classNames } from '../../utils/classNames';\r\nimport {\r\n  ArrowDownTrayIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  InformationCircleIcon,\r\n  TrashIcon,\r\n  EllipsisVerticalIcon,\r\n  PencilIcon\r\n} from '@heroicons/react/24/outline';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport OrderSummary from '../OrderSummary';\r\nimport OptionSelector from '../OptionSelector';\r\nimport * as XLSX from 'xlsx';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { calculateTotal } from '../../utils/MealCalculations';\r\nimport { calculateTotalBreakfastPrice } from '../../utils/BreakfastLogic';\r\nimport { format } from 'date-fns';\r\n\r\n// === NUEVO: pagos\r\nimport PaymentSplitEditor from '../common/PaymentSplitEditor';\r\nimport { summarizePayments, sumPaymentsByMethod, defaultPaymentsForOrder } from '../../utils/payments';\r\n\r\n// ===== Helpers para buscar por nombre y asegurar estructura =====\r\nconst normalizeName = (s) => (s || '').replace(/\\s*NUEVO\\s*$/i, '').trim();\r\n\r\nconst byName = (list, value) => {\r\n  if (!value) return null;\r\n  const name = typeof value === 'string' ? value : value?.name;\r\n  return list.find((o) => normalizeName(o.name) === normalizeName(name)) || null;\r\n};\r\n\r\nconst manyByName = (list, arr) =>\r\n  Array.isArray(arr) ? arr.map((v) => byName(list, v)).filter(Boolean) : [];\r\n\r\nconst ensureAddress = (addr = {}, fallback = {}) => ({\r\n  address: addr.address ?? fallback.address ?? '',\r\n  phoneNumber: addr.phoneNumber ?? fallback.phoneNumber ?? '',\r\n  addressType: addr.addressType ?? fallback.addressType ?? '',\r\n  localName: addr.localName ?? fallback.localName ?? '',\r\n  unitDetails: addr.unitDetails ?? fallback.unitDetails ?? '',\r\n  recipientName: addr.recipientName ?? fallback.recipientName ?? '',\r\n});\r\n\r\n// ===== Helpers NUEVOS / ROBUSTOS para pago =====\r\nconst formatValue = (value) => {\r\n  if (!value) return 'N/A';\r\n  if (typeof value === 'string') return value;\r\n  const candidates = [\r\n    value.name, value.label, value.title, value.method, value.type, value.payment, value.value,\r\n    value?.method?.name, value?.payment?.name, value?.value?.name, value?.type?.name\r\n  ].filter((v) => typeof v === 'string' && v.trim());\r\n  return candidates[0] || 'N/A';\r\n};\r\n\r\n// Devuelve raw pago desde la orden\r\nconst getOrderPaymentRaw = (order) =>\r\n  order?.meals?.[0]?.paymentMethod ??\r\n  order?.breakfasts?.[0]?.payment ??\r\n  order?.breakfasts?.[0]?.paymentMethod ??\r\n  order?.payment ??\r\n  order?.paymentMethod ??\r\n  null;\r\n\r\nconst getOrderPaymentText = (order) => formatValue(getOrderPaymentRaw(order));\r\n\r\nconst normalizePaymentKey = (raw) =>\r\n  (typeof raw === 'string' ? raw : formatValue(raw)).toLowerCase().trim();\r\n\r\n// === NUEVO: mostrar solo método(s) sin montos ===\r\nconst displayPaymentLabel = (val) => {\r\n  const raw = (typeof val === 'string' ? val : val?.name || val?.label || val?.method || val?.type || '').toString().trim().toLowerCase();\r\n  if (!raw) return '';\r\n  if (raw.includes('efect') || raw.includes('cash')) return 'Efectivo';\r\n  if (raw.includes('nequi')) return 'Nequi';\r\n  if (raw.includes('davi')) return 'Daviplata';\r\n  return '';\r\n};\r\n\r\nconst paymentMethodsOnly = (order) => {\r\n  if (Array.isArray(order?.payments) && order.payments.length) {\r\n    const names = order.payments\r\n      .map((p) => displayPaymentLabel(typeof p.method === 'string' ? p.method : p?.method?.name || p?.method))\r\n      .filter(Boolean);\r\n    return [...new Set(names)].join(' + ') || 'Sin pago';\r\n  }\r\n  return displayPaymentLabel(getOrderPaymentRaw(order)) || 'Sin pago';\r\n};\r\n\r\n\r\nconst TableOrdersAdmin = ({ theme = 'light' }) => {\r\n  const { user, role, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [sortField, setSortField] = useState('createdAt');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [showMealDetails, setShowMealDetails] = useState(null);\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [orderTypeFilter, setOrderTypeFilter] = useState('all'); // 'all', 'breakfast', 'lunch'\r\n  const [breakfastTypes, setBreakfastTypes] = useState([]);\r\n  const menuRef = useRef(null);\r\n\r\n  // Catálogos almuerzo\r\n  const [soups, setSoups] = useState([]);\r\n  const [soupReplacements, setSoupReplacements] = useState([]);\r\n  const [principles, setPrinciples] = useState([]);\r\n  const [menuProteins, setMenuProteins] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [additions, setAdditions] = useState([]);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n\r\n  // Catálogos desayuno\r\n  const [breakfastEggs, setBreakfastEggs] = useState([]);\r\n  const [breakfastBroths, setBreakfastBroths] = useState([]);\r\n  const [breakfastRiceBread, setBreakfastRiceBread] = useState([]);\r\n  const [breakfastDrinks, setBreakfastDrinks] = useState([]);\r\n  const [breakfastAdditions, setBreakfastAdditions] = useState([]);\r\n  const [breakfastProteins, setBreakfastProteins] = useState([]);\r\n\r\n  // --- Auth & carga inicial\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user || role !== 2) {\r\n      setErrorMessage('Acceso denegado. Solo los administradores pueden acceder a esta página.');\r\n      setTimeout(() => navigate('/login'), 3000);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Tipos de desayuno\r\n    const breakfastTypesUnsubscribe = onSnapshot(\r\n      collection(db, 'breakfastTypes'),\r\n      (snapshot) => {\r\n        const types = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setBreakfastTypes(types);\r\n      },\r\n      (error) => {\r\n        console.error('Error al escuchar breakfastTypes:', error);\r\n        setErrorMessage('Error al cargar tipos de desayuno. Intenta de nuevo.');\r\n      }\r\n    );\r\n\r\n    // Órdenes desayuno\r\n    const breakfastOrdersUnsubscribe = onSnapshot(\r\n      collection(db, 'breakfastOrders'),\r\n      (snapshot) => {\r\n        const breakfastOrders = snapshot.docs.map((doc) => ({\r\n          id: doc.id, ...doc.data(), type: 'breakfast', __collection: 'breakfastOrders', // <-- NUEVO\r\n        }));\r\n        setOrders((prev) => [\r\n          ...prev.filter((order) => order.type !== 'breakfast'),\r\n          ...breakfastOrders,\r\n        ]);\r\n        setIsLoading(false);\r\n      },\r\n      (error) => {\r\n        console.error('Error al escuchar breakfastOrders:', error);\r\n        setErrorMessage('Error al cargar órdenes de desayunos. Intenta de nuevo.');\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n\r\n    // Órdenes mesa\r\n    const tableOrdersUnsubscribe = onSnapshot(\r\n      collection(db, 'tableOrders'),\r\n      (snapshot) => {\r\n        const tableOrders = snapshot.docs.map((doc) => ({\r\n          id: doc.id, ...doc.data(), type: 'lunch', __collection: 'tableOrders', // <-- NUEVO\r\n        }));\r\n        setOrders((prev) => [\r\n          ...prev.filter((order) => order.type !== 'lunch'),\r\n          ...tableOrders,\r\n        ]);\r\n        setIsLoading(false);\r\n      },\r\n      (error) => {\r\n        console.error('Error al escuchar tableOrders:', error);\r\n        setErrorMessage('Error al cargar órdenes de mesas. Intenta de nuevo.');\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      breakfastTypesUnsubscribe();\r\n      breakfastOrdersUnsubscribe();\r\n      tableOrdersUnsubscribe();\r\n    };\r\n  }, [user, loading, role, navigate]);\r\n\r\n  // Escucha catálogos para OptionSelector\r\n  useEffect(() => {\r\n    const unsubs = [];\r\n    const listen = (name, setter) => {\r\n      const u = onSnapshot(collection(db, name), (snap) => {\r\n        setter(snap.docs.map((d) => ({ id: d.id, ...d.data() })));\r\n      });\r\n      unsubs.push(u);\r\n    };\r\n\r\n    // Almuerzo\r\n    listen('soups', setSoups);\r\n    listen('soupReplacements', setSoupReplacements);\r\n    listen('principles', setPrinciples);\r\n    listen('proteins', setMenuProteins);\r\n    listen('drinks', setDrinks);\r\n    listen('sides', setSides);\r\n    listen('additions', setAdditions);\r\n    listen('paymentMethods', setPaymentMethods);\r\n\r\n    // Desayuno\r\n    listen('breakfastEggs', setBreakfastEggs);\r\n    listen('breakfastBroths', setBreakfastBroths);\r\n    listen('breakfastRiceBread', setBreakfastRiceBread);\r\n    listen('breakfastDrinks', setBreakfastDrinks);\r\n    listen('breakfastAdditions', setBreakfastAdditions);\r\n    listen('breakfastProteins', setBreakfastProteins);\r\n\r\n    return () => unsubs.forEach((u) => u && u());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n    if (isMenuOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isMenuOpen]);\r\n\r\n  // ====== Totales usando split de pagos (con fallback legacy) ======\r\n  const totals = sumPaymentsByMethod(orders);\r\n\r\n  // ===== Filtro/búsqueda (incluye pago) =====\r\n  const filteredOrders = orders.filter((order) => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n\r\n    const matchesSearch =\r\n      order.id.toLowerCase().includes(searchLower) ||\r\n      // Almuerzos\r\n      order.meals?.some((meal) => {\r\n        const payText = normalizePaymentKey(meal.paymentMethod ?? '');\r\n        return (\r\n          meal.tableNumber?.toString().toLowerCase().includes(searchLower) ||\r\n          payText.includes(searchLower) ||\r\n          meal.notes?.toLowerCase().includes(searchLower)\r\n        );\r\n      }) ||\r\n      // Desayunos\r\n      order.breakfasts?.some((breakfast) => {\r\n        const payText = normalizePaymentKey(breakfast.payment ?? breakfast.paymentMethod ?? '');\r\n        return (\r\n          breakfast.tableNumber?.toString().toLowerCase().includes(searchLower) ||\r\n          payText.includes(searchLower) ||\r\n          breakfast.notes?.toLowerCase().includes(searchLower)\r\n        );\r\n      }) ||\r\n      // Búsqueda por método en split\r\nnormalizePaymentKey(typeof p.method === 'string' ? p.method : p?.method?.name).includes(searchLower)\r\n    return matchesSearch && (orderTypeFilter === 'all' || order.type === orderTypeFilter);\r\n  });\r\n\r\n  // ===== Ordenamiento simple =====\r\n  const sortedOrders = [...filteredOrders].sort((a, b) => {\r\n    const field = sortField === 'orderNumber' ? 'id' : sortField;\r\n    const aValue = field === 'id' ? a.id : a[field] || '';\r\n    const bValue = field === 'id' ? b.id : b[field] || '';\r\n    return sortOrder === 'asc' ? (aValue > bValue ? 1 : -1) : (aValue < bValue ? 1 : -1);\r\n  });\r\n\r\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\r\n  const paginatedOrders = sortedOrders.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  const handleSort = (field) => {\r\n    if (sortField === field) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField === field) {\r\n      return sortOrder === 'asc' ? '↑' : '↓';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const order = orders.find((o) => o.id === orderId);\r\n      const collectionName = order.type === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, orderId);\r\n      await updateDoc(orderRef, { status: newStatus, updatedAt: new Date() });\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado:', error);\r\n      setErrorMessage('Error al actualizar el estado de la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteOrder = async (orderId) => {\r\n    if (!window.confirm('¿Estás seguro de que deseas eliminar esta orden?')) return;\r\n    try {\r\n      setIsLoading(true);\r\n      const order = orders.find((o) => o.id === orderId);\r\n      const collectionName = order.type === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      await deleteDoc(doc(db, collectionName, orderId));\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al eliminar orden:', error);\r\n      setErrorMessage('Error al eliminar la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    setEditingOrder(order);\r\n  };\r\n\r\n  // Hidratación para OptionSelector\r\n  const hydratedRef = useRef(null);\r\n  useEffect(() => {\r\n    if (!editingOrder) { hydratedRef.current = null; return; }\r\n\r\n    const catalogsLoaded =\r\n      soups.length || principles.length || menuProteins.length || drinks.length || sides.length || additions.length ||\r\n      breakfastTypes.length || breakfastBroths.length || breakfastEggs.length || breakfastRiceBread.length ||\r\n      breakfastDrinks.length || breakfastAdditions.length || breakfastProteins.length || paymentMethods.length;\r\n\r\n    if (!catalogsLoaded) return;\r\n    if (hydratedRef.current === editingOrder.id) return;\r\n\r\n    const isBreakfast = Array.isArray(editingOrder.breakfasts);\r\n    const fallbackAddress = editingOrder.address || {};\r\n\r\n    if (isBreakfast) {\r\n      const breakfasts = (editingOrder.breakfasts || []).map((b) => ({\r\n        type: byName(breakfastTypes, b.type),\r\n        broth: byName(breakfastBroths, b.broth),\r\n        eggs: byName(breakfastEggs, b.eggs),\r\n        riceBread: byName(breakfastRiceBread, b.riceBread),\r\n        drink: byName(breakfastDrinks, b.drink),\r\n        protein: byName(breakfastProteins, b.protein),\r\n        additions: Array.isArray(b.additions)\r\n          ? b.additions\r\n              .map((a) => {\r\n                const full = byName(breakfastAdditions, a);\r\n                return full ? { ...full, quantity: a.quantity || 1, price: full.price ?? a.price ?? 0 } : null;\r\n              })\r\n              .filter(Boolean)\r\n          : [],\r\n        cutlery: !!b.cutlery,\r\n        time: typeof b.time === 'string' ? b.time : b.time?.name || '',\r\n        address: ensureAddress(b.address, fallbackAddress),\r\n        notes: b.notes || '',\r\n        paymentMethod: byName(paymentMethods, b.payment || b.paymentMethod),\r\n        orderType: b.orderType || '',\r\n        tableNumber: b.tableNumber || '',\r\n      }));\r\n      setEditingOrder((prev) => ({ ...prev, type: 'breakfast', breakfasts }));\r\n    } else {\r\n      const meals = (editingOrder.meals || []).map((m) => ({\r\n        soup: byName(soups, m.soup),\r\n        soupReplacement: byName(soupReplacements, m.soupReplacement),\r\n        principle: manyByName(principles, m.principle),\r\n        protein: byName(menuProteins, m.protein),\r\n        drink: byName(drinks, m.drink),\r\n        sides: manyByName(sides, m.sides),\r\n        additions: Array.isArray(m.additions)\r\n          ? m.additions\r\n              .map((a) => {\r\n                const full = byName(additions, a);\r\n                return full ? { ...full, quantity: a.quantity || 1, price: a.price ?? full.price ?? 0 } : null;\r\n              })\r\n              .filter(Boolean)\r\n          : [],\r\n        cutlery: !!m.cutlery,\r\n        time: typeof m.time === 'string' ? m.time : m.time?.name || '',\r\n        address: ensureAddress(m.address, fallbackAddress),\r\n        notes: m.notes || '',\r\n        paymentMethod: m.paymentMethod ? byName(paymentMethods, m.paymentMethod) : null,\r\n        orderType: m.orderType || '',\r\n        tableNumber: m.tableNumber || '',\r\n      }));\r\n      setEditingOrder((prev) => ({ ...prev, type: 'lunch', meals }));\r\n    }\r\n\r\n    hydratedRef.current = editingOrder.id;\r\n  }, [\r\n    editingOrder,\r\n    soups, soupReplacements, principles, menuProteins, drinks, sides, additions, paymentMethods,\r\n    breakfastTypes, breakfastBroths, breakfastEggs, breakfastRiceBread, breakfastDrinks, breakfastAdditions, breakfastProteins\r\n  ]);\r\n\r\n  // Recalcular total en vivo\r\n  useEffect(() => {\r\n    if (!editingOrder) return;\r\n\r\n    if (Array.isArray(editingOrder.meals)) {\r\nconst newTotal = Number(calculateTotal(editingOrder.meals, 3) || 0);      if ((editingOrder.total || 0) !== newTotal) {\r\n        setEditingOrder((prev) => ({ ...prev, total: newTotal }));\r\n      }\r\n    } else if (Array.isArray(editingOrder.breakfasts)) {\r\n      const newTotal = Number(calculateTotalBreakfastPrice(editingOrder.breakfasts, role, breakfastTypes) || 0);\r\n      if ((editingOrder.total || 0) !== newTotal) {\r\n        setEditingOrder((prev) => ({ ...prev, total: newTotal }));\r\n      }\r\n    }\r\n  }, [editingOrder?.meals, editingOrder?.breakfasts, role, breakfastTypes]); // eslint-disable-line\r\n\r\n  const setMealField = (i, key, value) => {\r\n    setEditingOrder((prev) => {\r\n      const list = [...(prev.meals || [])];\r\n      const row = { ...(list[i] || {}) };\r\n\r\n      if (key === 'soup') {\r\n        row.soup = value || null;\r\n        row.soupReplacement = null;\r\n      } else if (key === 'soupReplacement') {\r\n        row.soupReplacement = value || null;\r\n        row.soup = null;\r\n      } else if (key.includes('.')) {\r\n        const [p, c] = key.split('.');\r\n        row[p] = { ...(row[p] || {}), [c]: value };\r\n      } else {\r\n        row[key] = value;\r\n      }\r\n\r\n      list[i] = row;\r\n      return { ...prev, meals: list };\r\n    });\r\n  };\r\n\r\n  const setBreakfastField = (i, key, value) => {\r\n    setEditingOrder((prev) => {\r\n      const list = [...(prev.breakfasts || [])];\r\n      const row = { ...(list[i] || {}) };\r\n      if (key.includes('.')) {\r\n        const [p, c] = key.split('.');\r\n        row[p] = { ...(row[p] || {}), [c]: value };\r\n      } else {\r\n        row[key] = value;\r\n      }\r\n      list[i] = row;\r\n      return { ...prev, breakfasts: list };\r\n    });\r\n  };\r\n\r\n  const setEditingTotal = (value) => {\r\n    setEditingOrder((prev) => ({ ...prev, total: Number(value) || 0 }));\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const isBreakfast = Array.isArray(editingOrder.breakfasts);\r\n      const collectionName = isBreakfast ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, editingOrder.id);\r\n\r\n      const newTotal = isBreakfast\r\n        ? Number(calculateTotalBreakfastPrice(editingOrder.breakfasts, role, breakfastTypes) || 0)\r\n        : Number(calculateTotal(editingOrder.meals, role) || 0);\r\n\r\n      const payments = Array.isArray(editingOrder.payments) && editingOrder.payments.length\r\n        ? editingOrder.payments.map((p) => ({\r\n            method: (typeof p.method === 'string' ? p.method : p?.method?.name || ''),\r\n            amount: Math.floor(Number(p.amount || 0)) || 0,\r\n            note: p.note || '',\r\n          }))\r\n        : defaultPaymentsForOrder({ ...editingOrder, total: newTotal });\r\n\r\n      const sum = payments.reduce((a, b) => a + (b.amount || 0), 0);\r\n      if (sum !== newTotal) {\r\n        alert(`La suma de pagos (${sum.toLocaleString('es-CO')}) no coincide con el total (${newTotal.toLocaleString('es-CO')}). Ajústala antes de guardar.`);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const payload = isBreakfast\r\n        ? { breakfasts: editingOrder.breakfasts }\r\n        : { meals: editingOrder.meals };\r\n\r\n      await updateDoc(orderRef, {\r\n        ...payload,\r\n        payments,\r\n        total: newTotal,\r\n        updatedAt: new Date(),\r\n      });\r\n\r\n      setEditingOrder(null);\r\n      setErrorMessage(null);\r\n    } catch (error) {\r\n      console.error('Error al guardar edición:', error);\r\n      setErrorMessage('Error al guardar los cambios. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // ===== Exportaciones =====\r\n  const exportToExcel = () => {\r\n    const data = filteredOrders.map((order) => {\r\n      const paymentText = (Array.isArray(order.payments) && order.payments.length)\r\n        ? summarizePayments(order.payments)\r\n        : getOrderPaymentText(order);\r\n\r\n      return {\r\n        'Nº Orden': order.id.slice(0, 8),\r\n        'Tipo': order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n        'Mesa': formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n        'Estado': order.status,\r\n        'Total': `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n        'Método de Pago': paymentText,\r\n        'Detalles':\r\n          order.type === 'lunch'\r\n            ? order.meals\r\n                .map((meal, index) =>\r\n                  `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatValue(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatValue(meal.sides)}, Notas: ${meal.notes || 'Ninguna'}`\r\n                )\r\n                .join('; ')\r\n            : order.breakfasts\r\n                .map((breakfast, index) =>\r\n                  `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatValue(breakfast.additions)}, Notas: ${breakfast.notes || 'Ninguna'}`\r\n                )\r\n                .join('; '),\r\n      };\r\n    });\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Órdenes');\r\n    XLSX.writeFile(workbook, `ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.xlsx`);\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const docx = new jsPDF();\r\n    docx.text('Órdenes', 14, 10);\r\n    docx.autoTable({\r\n      head: [['Nº Orden', 'Tipo', 'Mesa', 'Estado', 'Total', 'Método de Pago', 'Detalles']],\r\n      body: filteredOrders.map((order) => {\r\n        const paymentText = (Array.isArray(order.payments) && order.payments.length)\r\n          ? summarizePayments(order.payments)\r\n          : getOrderPaymentText(order);\r\n\r\n        return [\r\n          order.id.slice(0, 8),\r\n          order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n          formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n          order.status,\r\n          `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n          paymentText,\r\n          order.type === 'lunch'\r\n            ? order.meals\r\n                .map((meal, index) =>\r\n                  `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatValue(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatValue(meal.sides)}`\r\n                )\r\n                .join('; ')\r\n            : order.breakfasts\r\n                .map((breakfast, index) =>\r\n                  `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatValue(breakfast.additions)}`\r\n                )\r\n                .join('; '),\r\n        ];\r\n      }),\r\n    });\r\n    docx.save(`ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.pdf`);\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const rows = [\r\n      ['Nº Orden', 'Tipo', 'Mesa', 'Estado', 'Total', 'Método de Pago', 'Detalles'],\r\n      ...filteredOrders.map((order) => {\r\n        const paymentText = (Array.isArray(order.payments) && order.payments.length)\r\n          ? summarizePayments(order.payments)\r\n          : getOrderPaymentText(order);\r\n\r\n        return [\r\n          order.id.slice(0, 8),\r\n          order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo',\r\n          formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber),\r\n          order.status,\r\n          `$${order.total?.toLocaleString('es-CO') || 'N/A'}`,\r\n          paymentText,\r\n          `${\r\n            order.type === 'lunch'\r\n              ? order.meals\r\n                  .map((meal, index) =>\r\n                    `Almuerzo #${index + 1}: Sopa: ${formatValue(meal.soup || meal.soupReplacement)}, Principio: ${formatValue(meal.principle)}, Proteína: ${formatValue(meal.protein)}, Bebida: ${formatValue(meal.drink)}, Acompañamientos: ${formatValue(meal.sides)}, Notas: ${meal.notes || 'Ninguna'}`\r\n                  )\r\n                  .join('; ')\r\n              : order.breakfasts\r\n                  .map((breakfast, index) =>\r\n                    `Desayuno #${index + 1}: Tipo: ${formatValue(breakfast.type)}, Caldo: ${formatValue(breakfast.broth)}, Huevos: ${formatValue(breakfast.eggs)}, Arroz/Pan: ${formatValue(breakfast.riceBread)}, Bebida: ${formatValue(breakfast.drink)}, Proteína: ${formatValue(breakfast.protein)}, Adiciones: ${formatValue(breakfast.additions)}, Notas: ${breakfast.notes || 'Ninguna'}`\r\n                  )\r\n                  .join('; ')\r\n          }`,\r\n        ];\r\n      }),\r\n    ];\r\n    const csvContent = rows.map((r) => r.map((cell) => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `ordenes_${orderTypeFilter}_${format(new Date(), 'yyyy-MM-dd_HH-mm-ss')}.csv`;\r\n    link.click();\r\n  };\r\n\r\n  const handleExport = (exportFunc) => {\r\n    exportFunc();\r\n    setErrorMessage(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n      <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6\">Gestión de pedidos Mesas</h2>\r\n\r\n      {/* Totals Section */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6 text-sm text-gray-700 dark:text-gray-300\">\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Efectivo</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${Math.floor(totals.cash).toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Daviplata</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${Math.floor(totals.daviplata).toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total Nequi</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${Math.floor(totals.nequi).toLocaleString('es-CO')}</p>\r\n        </div>\r\n        <div className={classNames(\"p-3 sm:p-4 rounded-lg shadow-sm\", theme === 'dark' ? 'bg-gray-700' : 'bg-gray-100')}>\r\n          <p className=\"font-semibold text-sm sm:text-base\">Total General</p>\r\n          <p className=\"text-lg sm:text-xl font-bold\">${Math.floor(totals.cash + totals.daviplata + totals.nequi).toLocaleString('es-CO')}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search and Menu */}\r\n      <div className=\"flex flex-wrap justify-between items-center mb-6 gap-3 sm:gap-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Buscar órdenes por ID, mesa o método de pago...\"\r\n          className={classNames(\r\n            \"p-2 sm:p-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-blue-500 w-full sm:max-w-xs shadow-sm text-sm sm:text-base transition-all duration-200\",\r\n            theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n          )}\r\n        />\r\n        <div className=\"relative z-50 flex-shrink-0\" ref={menuRef}>\r\n          <button\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            className={classNames(\r\n              \"flex items-center justify-center p-2 rounded-lg text-xs sm:text-sm font-medium transition-all duration-200\",\r\n              'focus:outline-none focus:ring-2 focus:ring-blue-500'\r\n            )}\r\n            aria-label=\"Opciones de menú\"\r\n          >\r\n            <EllipsisVerticalIcon\r\n              className={classNames(\r\n                \"w-6 h-6\",\r\n                theme === 'dark' ? 'text-gray-200 hover:text-white' : 'text-gray-700 hover:text-gray-900'\r\n              )}\r\n            />\r\n          </button>\r\n          {isMenuOpen && (\r\n            <div\r\n              className={classNames(\r\n                \"absolute right-0 mt-2 w-48 rounded-lg shadow-xl z-50\",\r\n                theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-white text-gray-900'\r\n              )}\r\n            >\r\n              <div className=\"py-1\">\r\n                <button onClick={() => { setOrderTypeFilter('breakfast'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\">\r\n                  Ver Desayunos\r\n                </button>\r\n                <button onClick={() => { setOrderTypeFilter('lunch'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\">\r\n                  Ver Almuerzos\r\n                </button>\r\n                <button onClick={() => { setOrderTypeFilter('all'); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200\">\r\n                  Ver Todos\r\n                </button>\r\n                <button onClick={() => { handleExport(exportToExcel); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\">\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar Excel\r\n                </button>\r\n                <button onClick={() => { handleExport(exportToPDF); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\">\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar PDF\r\n                </button>\r\n                <button onClick={() => { handleExport(exportToCSV); setIsMenuOpen(false); }}\r\n                  className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600 transition-all duration-200 flex items-center\">\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4 mr-2\" />\r\n                  Exportar CSV\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Orders Table */}\r\n      <div className={classNames(\r\n        \"p-3 sm:p-4 rounded-2xl shadow-xl max-h-[70vh] overflow-y-auto custom-scrollbar transition-all duration-300\",\r\n        theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n      )}>\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center h-40\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-4 border-blue-500\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full text-left border-collapse text-sm\">\r\n                <thead>\r\n                  <tr className={classNames(\r\n                    \"font-semibold sticky top-0 z-10 shadow-sm\",\r\n                    theme === 'dark' ? 'bg-gray-700 text-gray-200' : 'bg-gray-100 text-gray-700'\r\n                  )}>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('orderNumber')}>\r\n                      Nº {getSortIcon('orderNumber')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b whitespace-nowrap\">Detalles</th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('meals.0.tableNumber')}>\r\n                      Mesa {getSortIcon('meals.0.tableNumber')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('meals.0.paymentMethod.name')}>\r\n                      Pago {getSortIcon('meals.0.paymentMethod.name')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('total')}>\r\n                      Total {getSortIcon('total')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('status')}>\r\n                      Estado {getSortIcon('status')}\r\n                    </th>\r\n                    <th className=\"p-2 sm:p-3 border-b whitespace-nowrap\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {paginatedOrders.length === 0 ? (\r\n                    <tr>\r\n                      <td colSpan=\"7\" className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\r\n                        No se encontraron órdenes de mesas. Intenta ajustar tu búsqueda.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    paginatedOrders.map((order, index) => {\r\n                      const displayNumber =\r\n                        sortOrder === 'asc'\r\n                          ? (currentPage - 1) * itemsPerPage + index + 1\r\n                          : paginatedOrders.length - ((currentPage - 1) * itemsPerPage + index);\r\n\r\n                  const paymentDisplay = paymentMethodsOnly(order);\r\n\r\n                      const statusClass =\r\n                        order.status === 'Pendiente'\r\n                          ? 'bg-yellow-500 text-black'\r\n                          : order.status === 'Preparando'\r\n                          ? 'bg-blue-500 text-white'\r\n                          : order.status === 'Completada'\r\n                          ? 'bg-green-500 text-white'\r\n                          : order.status === 'Cancelada'\r\n                          ? 'bg-red-500 text-white'\r\n                          : '';\r\n\r\n                      return (\r\n                        <tr\r\n                          key={order.id}\r\n                          className={classNames(\r\n                            \"border-b transition-colors.duration-150\",\r\n                            theme === 'dark' ? 'border-gray-700 hover:bg-gray-700' : 'border-gray-200 hover:bg-gray-50',\r\n                            index % 2 === 0 ? (theme === 'dark' ? 'bg-gray-750' : 'bg-gray-50') : ''\r\n                          )}\r\n                        >\r\n                          <td className=\"p-2 sm:p-3 text-gray-300\">{displayNumber}</td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300\">\r\n                            <button\r\n                              onClick={() => setShowMealDetails(order)}\r\n                              className=\"text-blue-400 hover:text-blue-300 text-xs sm:text-sm flex items-center\"\r\n                              title=\"Ver detalles de la orden\"\r\n                            >\r\n                              <InformationCircleIcon className=\"w-4 h-4 mr-1\" />\r\n                              Ver\r\n                            </button>\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">\r\n                            {formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber)}\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">{paymentDisplay}</td>\r\n                          <td className=\"p-2 sm:p-3 text-gray-300 whitespace-nowrap\">\r\n                            ${order.total?.toLocaleString('es-CO') || 'N/A'}\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 whitespace-nowrap\">\r\n                            <select\r\n                              value={order.status || 'Pendiente'}\r\n                              onChange={(e) => handleStatusChange(order.id, e.target.value)}\r\n                              className={classNames(\r\n                                \"px-2 py-1 rounded-full text-xs font-semibold appearance-none cursor-pointer\",\r\n                                statusClass,\r\n                                theme === 'dark' ? 'bg-opacity-70' : 'bg-opacity-90',\r\n                                \"focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                              )}\r\n                            >\r\n                              <option value=\"Pendiente\">Pendiente</option>\r\n                              <option value=\"Preparando\">Preparando</option>\r\n                              <option value=\"Completada\">Completada</option>\r\n                              <option value=\"Cancelada\">Cancelada</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"p-2 sm:p-3 whitespace-nowrap\">\r\n                            <button\r\n                              onClick={() => handleEditOrder(order)}\r\n                              className=\"text-blue-500 hover:text-blue-400 transition-colors duration-150 p-1 rounded-md mr-2\"\r\n                              title=\"Editar orden\"\r\n                              aria-label={`Editar orden ${displayNumber}`}\r\n                            >\r\n                              <PencilIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                            <button\r\n                              onClick={() => handleDeleteOrder(order.id)}\r\n                              className=\"text-red-500 hover:text-red-400 transition-colors duration-150 p-1 rounded-md\"\r\n                              title=\"Eliminar orden\"\r\n                              aria-label={`Eliminar orden ${displayNumber}`}\r\n                            >\r\n                              <TrashIcon className=\"w-5 h-5\" />\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3\">\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                <span>Órdenes por página:</span>\r\n                <select\r\n                  value={itemsPerPage}\r\n                  onChange={(e) => { setItemsPerPage(Number(e.target.value)); setCurrentPage(1); }}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md border text-sm\",\r\n                    theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n                  )}\r\n                >\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"flex.items-center gap-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                <button\r\n                  onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage === 1}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md transition-colors duration-200\",\r\n                    currentPage === 1\r\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\r\n                      : theme === 'dark' ? 'hover:bg-gray-700 text-gray-200' : 'hover:bg-gray-100 text-gray-700'\r\n                  )}\r\n                >\r\n                  <ChevronLeftIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                <span>Página {currentPage} de {totalPages}</span>\r\n                <button\r\n                  onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                  disabled={currentPage === totalPages}\r\n                  className={classNames(\r\n                    \"p-2 rounded-md transition-colors duration-200\",\r\n                    currentPage === totalPages\r\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\r\n                      : theme === 'dark' ? 'hover:bg-gray-700 text-gray-200' : 'hover:bg-gray-100 text-gray-700'\r\n                  )}\r\n                >\r\n                  <ChevronRightIcon className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Meal Details Modal */}\r\n            {showMealDetails && (\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[10001]\">\r\n                <div className={classNames(\r\n                    \"p-4 sm:p-6 rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto\",\r\n                    theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900'\r\n                  )}>\r\n                  <h3 className=\"text-lg font-semibold mb-4\">Detalles de la Orden #{showMealDetails.id.slice(0, 8)}</h3>\r\n                  <p className=\"text-sm mb-2\">\r\n                    Mesa: {showMealDetails.meals?.[0]?.tableNumber || showMealDetails.breakfasts?.[0]?.tableNumber || 'N/A'}\r\n                  </p>\r\n                  <p className=\"text-sm mb-2\">Estado: {showMealDetails.status}</p>\r\n                  <p className=\"text-sm mb-4\">Total: ${showMealDetails.total?.toLocaleString('es-CO') || 'N/A'}</p>\r\n                  <OrderSummary\r\n                    meals={showMealDetails.meals || showMealDetails.breakfasts}\r\n                    isTableOrder={true}\r\n                    calculateTotal={() => showMealDetails.total}\r\n                  />\r\n                  <button\r\n                    onClick={() => setShowMealDetails(null)}\r\n                    className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm\"\r\n                  >\r\n                    Cerrar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Edit Order Modal con OptionSelector y Split de Pagos */}\r\n            {editingOrder && (\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[10001]\">\r\n                <div className={classNames(\r\n                    \"p-4 sm:p-6 rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto\",\r\n                    theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-white text-gray-900'\r\n                  )}>\r\n                  <h3 className=\"text-lg font-semibold mb-4\">\r\n                    Editar Orden #{editingOrder.id.slice(0, 8)}\r\n                  </h3>\r\n\r\n                  {/* === Desayuno === */}\r\n                  {Array.isArray(editingOrder.breakfasts) ? (\r\n                    editingOrder.breakfasts.map((b, index) => (\r\n                      <div key={index} className=\"mb-6 p-4 border rounded-md border-gray-200 dark:border-gray-700\">\r\n                        <h4 className=\"text-sm font-medium mb-2\">Desayuno #{index + 1}</h4>\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Tipo</label>\r\n                            <OptionSelector\r\n                              title=\"Tipo\" emoji=\"🥞\" options={breakfastTypes}\r\n                              selected={b.type || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'type', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Caldo</label>\r\n                            <OptionSelector\r\n                              title=\"Caldo\" emoji=\"🥣\" options={breakfastBroths}\r\n                              selected={b.broth || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'broth', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium.mb-1\">Huevos</label>\r\n                            <OptionSelector\r\n                              title=\"Huevos\" emoji=\"🥚\" options={breakfastEggs}\r\n                              selected={b.eggs || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'eggs', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Arroz/Pan</label>\r\n                            <OptionSelector\r\n                              title=\"Arroz/Pan\" emoji=\"🍞\" options={breakfastRiceBread}\r\n                              selected={b.riceBread || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'riceBread', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Bebida</label>\r\n                            <OptionSelector\r\n                              title=\"Bebida\" emoji=\"🥤\" options={breakfastDrinks}\r\n                              selected={b.drink || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'drink', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Proteína</label>\r\n                            <OptionSelector\r\n                              title=\"Proteína\" emoji=\"🍖\" options={breakfastProteins}\r\n                              selected={b.protein || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'protein', v)}\r\n                            />\r\n                          </div>\r\n                          <div className=\"sm:col-span-2\">\r\n                            <label className=\"block.text-xs font-medium mb-1\">Adiciones</label>\r\n                            <OptionSelector\r\n                              title=\"Adiciones\" emoji=\"➕\" options={breakfastAdditions}\r\n                              selected={b.additions || []} multiple={true}\r\n                              onImmediateSelect={(sel) =>\r\n                                setBreakfastField(\r\n                                  index,\r\n                                  'additions',\r\n                                  sel.map((a) => ({ name: a.name, quantity: a.quantity || 1, price: a.price || 0 }))\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Operativos */}\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Método de Pago</label>\r\n                            <OptionSelector\r\n                              title=\"Método de Pago\" emoji=\"💳\" options={paymentMethods}\r\n                              selected={b.paymentMethod || null} multiple={false}\r\n                              onImmediateSelect={(v) => setBreakfastField(index, 'paymentMethod', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Número de Mesa</label>\r\n                            <input\r\n                              type=\"text\" value={b.tableNumber || ''}\r\n                              onChange={(e) => setBreakfastField(index, 'tableNumber', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text-white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Tipo de Pedido</label>\r\n                            <select\r\n                              value={b.orderType || ''}\r\n                              onChange={(e) => setBreakfastField(index, 'orderType', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text-white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            >\r\n                              <option value=\"\">Seleccionar</option>\r\n                              <option value=\"table\">Para mesa</option>\r\n                              <option value=\"takeaway\">Para llevar</option>\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"sm:col-span-2\">\r\n                            <label className=\"block text-xs font-medium mb-1\">Notas</label>\r\n                            <input\r\n                              type=\"text\" value={b.notes || ''} onChange={(e) => setBreakfastField(index, 'notes', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text-white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    // === Almuerzo ===\r\n                    editingOrder.meals?.map((m, index) => (\r\n                      <div key={index} className=\"mb-6 p-4 border rounded-md border-gray-200 dark:border-gray-700\">\r\n                        <h4 className=\"text-sm font-medium mb-2\">Almuerzo #{index + 1}</h4>\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Sopa (excluyente con Reemplazo)</label>\r\n                            <OptionSelector\r\n                              title=\"Sopa\" emoji=\"🥣\" options={soups}\r\n                              selected={m.soup || null} multiple={false}\r\n                              onImmediateSelect={(v) => setMealField(index, 'soup', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Reemplazo (ej: Solo bandeja)</label>\r\n                            <OptionSelector\r\n                              title=\"Reemplazo\" emoji=\"🚫\" options={soupReplacements}\r\n                              selected={m.soupReplacement || null} multiple={false}\r\n                              onImmediateSelect={(v) => setMealField(index, 'soupReplacement', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Principio</label>\r\n                            <OptionSelector\r\n                              title=\"Principio\" emoji=\"🍚\" options={principles}\r\n                              selected={m.principle || []} multiple={true} showConfirmButton={true}\r\n                              onImmediateSelect={(sel) => setMealField(index, 'principle', sel)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Proteína</label>\r\n                            <OptionSelector\r\n                              title=\"Proteína\" emoji=\"🍖\" options={menuProteins}\r\n                              selected={m.protein || null} multiple={false}\r\n                              onImmediateSelect={(v) => setMealField(index, 'protein', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Bebida</label>\r\n                            <OptionSelector\r\n                              title=\"Bebida\" emoji=\"🥤\" options={drinks}\r\n                              selected={m.drink || null} multiple={false}\r\n                              onImmediateSelect={(v) => setMealField(index, 'drink', v)}\r\n                            />\r\n                          </div>\r\n                          <div className=\"sm:col-span-2\">\r\n                            <label className=\"block text-xs font-medium mb-1\">Acompañamientos</label>\r\n                            <OptionSelector\r\n                              title=\"Acompañamientos\" emoji=\"🥗\" options={sides}\r\n                              selected={m.sides || []} multiple={true}\r\n                              onImmediateSelect={(sel) => setMealField(index, 'sides', sel)}\r\n                            />\r\n                          </div>\r\n                          <div className=\"sm:col-span-2\">\r\n                            <label className=\"block text-xs font-medium mb-1\">Adiciones</label>\r\n                            <OptionSelector\r\n                              title=\"Adiciones\" emoji=\"➕\" options={additions}\r\n                              selected={m.additions || []} multiple={true}\r\n                              onImmediateSelect={(sel) =>\r\n                                setMealField(\r\n                                  index,\r\n                                  'additions',\r\n                                  sel.map((a) => ({\r\n                                    id: a.id,\r\n                                    name: a.name,\r\n                                    price: a.price || 0,\r\n                                    protein: a.protein || '',\r\n                                    replacement: a.replacement || '',\r\n                                    quantity: a.quantity || 1,\r\n                                  }))\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Operativos */}\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Método de Pago (legacy)</label>\r\n                            <OptionSelector\r\n                              title=\"Método de Pago\" emoji=\"💳\" options={paymentMethods}\r\n                              selected={m.paymentMethod || null} multiple={false}\r\n                              onImmediateSelect={(v) => setMealField(index, 'paymentMethod', v)}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Número de Mesa</label>\r\n                            <input\r\n                              type=\"text\" value={m.tableNumber || ''} onChange={(e) => setMealField(index, 'tableNumber', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text.white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-xs font-medium mb-1\">Tipo de Pedido</label>\r\n                            <select\r\n                              value={m.orderType || ''} onChange={(e) => setMealField(index, 'orderType', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text.white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            >\r\n                              <option value=\"\">Seleccionar</option>\r\n                              <option value=\"table\">Para mesa</option>\r\n                              <option value=\"takeaway\">Para llevar</option>\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"sm:col-span-2\">\r\n                            <label className=\"block text-xs font-medium mb-1\">Notas</label>\r\n                            <input\r\n                              type=\"text\" value={m.notes || ''} onChange={(e) => setMealField(index, 'notes', e.target.value)}\r\n                              className={classNames(\r\n                                \"w-full p-2 rounded-md border text-sm\",\r\n                                theme === 'dark'\r\n                                  ? 'border-gray-600 bg-gray-700 text.white'\r\n                                  : 'border-gray-200 bg-white text-gray-900',\r\n                                \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                              )}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  )}\r\n\r\n                  {/* Total y acciones */}\r\n                  <div>\r\n                    <label className=\"text-xs block mb-1\">Total (se recalcula automáticamente)</label>\r\n                    <input\r\n                      type=\"number\" value={editingOrder.total || 0}\r\n                      onChange={(e) => setEditingTotal(e.target.value)} placeholder=\"Total\"\r\n                      className={classNames(\r\n                        \"w-full p-2 mt-1 border rounded text-sm\",\r\n                        theme === 'dark'\r\n                          ? 'border-gray-600 bg-gray-700 text-white'\r\n                          : 'border-gray-200 bg-white text-gray-900'\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Split de Pagos */}\r\n                  <div className=\"mt-4\">\r\n                    <PaymentSplitEditor\r\n                      theme={theme}\r\n                      total={editingOrder.total || 0}\r\n                      value={\r\n                        Array.isArray(editingOrder.payments) && editingOrder.payments.length\r\n                          ? editingOrder.payments\r\n                          : defaultPaymentsForOrder(editingOrder)\r\n                      }\r\n                      catalogMethods={paymentMethods}\r\n                      onChange={(rows) => {\r\n                        setEditingOrder((prev) => ({ ...prev, payments: rows }));\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-4 flex space-x-2\">\r\n                    <button onClick={handleSaveEdit} className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\">\r\n                      Guardar\r\n                    </button>\r\n                    <button onClick={() => setEditingOrder(null)} className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\">\r\n                      Cancelar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"fixed top-16 right-4 z-[10002] space-y-2 w-80 max-w-xs\">\r\n        {isLoading && <LoadingIndicator />}\r\n        {errorMessage && <ErrorMessage message={errorMessage} onClose={() => setErrorMessage(null)} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableOrdersAdmin;\r\n"],"names":["toInt","v","n","Math","floor","Number","isFinite","normKey","s","toString","trim","toLowerCase","buildMethodOptions","catalogMethods","Array","isArray","length","names","map","m","name","label","filter","Boolean","from","Set","PaymentSplitEditor","_ref","theme","total","value","onChange","disabled","methods","useMemo","rows","setRows","useState","sanitized","r","_r$method","method","amount","note","useEffect","_r$method2","sum","reduce","acc","diff","ok","emit","next","handleChange","idx","key","val","i","_jsxs","className","classNames","children","_jsx","type","onClick","fill5050","half","rest","split3","a","b","c","setAllTo","e","target","min","step","placeholder","_","removeRow","addRow","unused","find","some","max","toLocaleString","abs","norm","normalizePaymentMethodKey","methodLike","raw","title","payment","t","includes","pickMethodLabel","extractOrderPayments","order","_order$meals$0$paymen","_order$meals","_order$meals$","_order$meals2","_order$meals2$","_order$breakfasts$0$p","_order$breakfasts","_order$breakfasts$","_order$breakfasts2","_order$breakfasts2$","_order$paymentMethod","payments","p","methodKey","rawLabel","legacySources","meals","paymentMethod","breakfasts","summarizePayments","paymentsRows","arguments","undefined","agg","asText","cash","push","nequi","daviplata","other","join","defaultPaymentsForOrder","sumPaymentsByMethod","orders","out","amt","isSalonOrder","_order$breakfasts5","_order$breakfasts5$","__collection","orderType","calcMethodTotalsAll","tableOrders","breakfastOrders","nequiTotal","daviplataTotal","nequiPendiente","daviplatasPendiente","cashSalon","cashClientesSettled","cashClientesPendiente","totalLiquidado","totalPendiente","totalDomicilios","totalSalon","accumulate","list","o","isSalon","_o$paymentSettled","settled","paymentSettled","_o$paymentSettled2","_o$paymentSettled3","cashCaja","_len","classes","_key","normalizeName","replace","byName","manyByName","arr","ensureAddress","_addr$address","_ref2","_addr$phoneNumber","_ref3","_addr$addressType","_ref4","_addr$localName","_ref5","_addr$unitDetails","_ref6","_addr$recipientName","addr","fallback","address","phoneNumber","addressType","localName","unitDetails","recipientName","formatValue","_value$method","_value$payment","_value$value","_value$type","getOrderPaymentRaw","_ref7","_ref8","_ref9","_ref0","getOrderPaymentText","normalizePaymentKey","displayPaymentLabel","_ref1","_showMealDetails$meal","_showMealDetails$meal2","_showMealDetails$brea","_showMealDetails$brea2","_showMealDetails$tota","_editingOrder$meals","user","role","loading","useAuth","navigate","useNavigate","setOrders","searchTerm","setSearchTerm","isLoading","setIsLoading","errorMessage","setErrorMessage","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","sortField","setSortField","sortOrder","setSortOrder","isMenuOpen","setIsMenuOpen","showMealDetails","setShowMealDetails","editingOrder","setEditingOrder","orderTypeFilter","setOrderTypeFilter","breakfastTypes","setBreakfastTypes","menuRef","useRef","soups","setSoups","soupReplacements","setSoupReplacements","principles","setPrinciples","menuProteins","setMenuProteins","drinks","setDrinks","sides","setSides","additions","setAdditions","paymentMethods","setPaymentMethods","breakfastEggs","setBreakfastEggs","breakfastBroths","setBreakfastBroths","breakfastRiceBread","setBreakfastRiceBread","breakfastDrinks","setBreakfastDrinks","breakfastAdditions","setBreakfastAdditions","breakfastProteins","setBreakfastProteins","setTimeout","breakfastTypesUnsubscribe","onSnapshot","collection","db","snapshot","types","docs","doc","id","data","error","console","breakfastOrdersUnsubscribe","prev","tableOrdersUnsubscribe","unsubs","listen","setter","u","snap","d","forEach","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","totals","filteredOrders","_order$breakfasts3","_p","_p$method2","searchLower","meal","_meal$paymentMethod","_meal$tableNumber","_meal$notes","payText","tableNumber","notes","breakfast","_ref10","_breakfast$payment","_breakfast$tableNumbe","_breakfast$notes","sortedOrders","sort","field","aValue","bValue","totalPages","ceil","paginatedOrders","slice","handleSort","getSortIcon","hydratedRef","isBreakfast","fallbackAddress","_b$time","broth","eggs","riceBread","drink","protein","_ref11","_full$price","full","quantity","price","cutlery","time","_m$time","soup","soupReplacement","principle","_ref12","_a$price","newTotal","calculateTotal","calculateTotalBreakfastPrice","setMealField","row","split","setBreakfastField","exportToExcel","_order$meals3","_order$meals3$","_order$breakfasts4","_order$breakfasts4$","_order$total","paymentText","status","index","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","format","Date","exportToPDF","docx","jsPDF","text","autoTable","head","body","_order$meals4","_order$meals4$","_order$total2","save","exportToCSV","csvContent","_order$meals5","_order$meals5$","_order$breakfasts6","_order$breakfasts6$","_order$total3","cell","String","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","handleExport","exportFunc","ref","EllipsisVerticalIcon","ArrowDownTrayIcon","_Fragment","colSpan","_order$meals6","_order$meals6$","_order$breakfasts7","_order$breakfasts7$","_order$total4","displayNumber","paymentDisplay","_p$method","paymentMethodsOnly","statusClass","InformationCircleIcon","async","orderId","newStatus","collectionName","orderRef","updateDoc","updatedAt","handleStatusChange","handleEditOrder","PencilIcon","window","confirm","deleteDoc","handleDeleteOrder","TrashIcon","ChevronLeftIcon","ChevronRightIcon","OrderSummary","isTableOrder","OptionSelector","emoji","options","selected","multiple","onImmediateSelect","sel","showConfirmButton","replacement","setEditingTotal","_p$method3","alert","payload","LoadingIndicator","ErrorMessage","message","onClose"],"sourceRoot":""}