{"version":3,"file":"static/js/26.21303ee4.chunk.js","mappings":"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","sources":["components/Waiter/WaiterDashboard.js"],"sourcesContent":["// src/components/Waiter/WaiterDashboard.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { db } from '../../config/firebase';\r\nimport { collection, onSnapshot, addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport MealList from '../MealList';\r\nimport BreakfastList from '../BreakfastList';\r\nimport OrderSummary from '../OrderSummary';\r\nimport BreakfastOrderSummary from '../BreakfastOrderSummary';\r\nimport LoadingIndicator from '../LoadingIndicator';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport SuccessMessage from '../SuccessMessage';\r\nimport OptionSelector from '../OptionSelector';\r\nimport { initializeMealData, handleMealChange, addMeal, duplicateMeal, removeMeal } from '../../utils/MealLogic';\r\nimport { calculateTotal } from '../../utils/MealCalculations';\r\nimport {\r\n  initializeBreakfastData,\r\n  handleBreakfastChange,\r\n  addBreakfast,\r\n  duplicateBreakfast,\r\n  removeBreakfast,\r\n  calculateTotalBreakfastPrice\r\n} from '../../utils/BreakfastLogic';\r\n\r\nconst WaiterDashboard = () => {\r\n  const { user, role, loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [meals, setMeals] = useState([initializeMealData({}, true)]);\r\n  const [breakfasts, setBreakfasts] = useState([initializeBreakfastData({ isWaitress: true })]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [incompleteMealIndex, setIncompleteMealIndex] = useState(null);\r\n  const [incompleteSlideIndex, setIncompleteSlideIndex] = useState(null);\r\n  const [incompleteBreakfastIndex, setIncompleteBreakfastIndex] = useState(null);\r\n  const [incompleteBreakfastSlideIndex, setIncompleteBreakfastSlideIndex] = useState(null);\r\n  const [soups, setSoups] = useState([]);\r\n  const [soupReplacements, setSoupReplacements] = useState([]);\r\n  const [principles, setPrinciples] = useState([]);\r\n  const [proteins, setProteins] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n  const [sides, setSides] = useState([]);\r\n  const [additions, setAdditions] = useState([]);\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [breakfastEggs, setBreakfastEggs] = useState([]);\r\n  const [breakfastBroths, setBreakfastBroths] = useState([]);\r\n  const [breakfastRiceBread, setBreakfastRiceBread] = useState([]);\r\n  const [breakfastDrinks, setBreakfastDrinks] = useState([]);\r\n  const [breakfastAdditions, setBreakfastAdditions] = useState([]);\r\n  const [breakfastTypes, setBreakfastTypes] = useState([]);\r\n  const [breakfastProteins, setBreakfastProteins] = useState([]);\r\n  const [breakfastTimes, setBreakfastTimes] = useState([]);\r\n  const [isOrderingDisabled, setIsOrderingDisabled] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('create');\r\n  const [editingOrder, setEditingOrder] = useState(null);\r\n  const [showMenu, setShowMenu] = useState(null);\r\n  const [menuType, setMenuType] = useState('closed');\r\n  const [schedules, setSchedules] = useState({\r\n    breakfastStart: 420, // 07:00\r\n    breakfastEnd: 631,   // 10:31\r\n    lunchStart: 632,     // 10:32\r\n    lunchEnd: 950,       // 15:50\r\n  });\r\n  const [timeRemaining, setTimeRemaining] = useState('');\r\n\r\n  // ---------- UTIL: normaliza cualquier estructura de método de pago a un string ----------\r\n  const normalizePayment = (val) => {\r\n    if (!val) return '';\r\n    if (typeof val === 'string') return val.trim();\r\n    if (typeof val === 'object') {\r\n      return (val.name || val.label || val.value || val.method || '').toString().trim();\r\n    }\r\n    return '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) {\r\n      setErrorMessage('Por favor, inicia sesión para continuar.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n    if (role !== 3) {\r\n      setErrorMessage('Acceso denegado. Solo las meseras pueden acceder a esta página.');\r\n      setTimeout(() => navigate('/staffhub'), 3000);\r\n      return;\r\n    }\r\n  }, [user, loading, role, navigate]);\r\n\r\n  useEffect(() => {\r\n    const collectionsArr = [\r\n      'soups', 'soupReplacements', 'principles', 'proteins', 'drinks', 'sides', 'additions', 'paymentMethods',\r\n      'breakfastEggs', 'breakfastBroths', 'breakfastRiceBread', 'breakfastDrinks', 'breakfastAdditions',\r\n      'breakfastTypes', 'breakfastProteins', 'breakfastTimes'\r\n    ];\r\n    const setters = [\r\n      setSoups, setSoupReplacements, setPrinciples, setProteins, setDrinks, setSides, setAdditions, setPaymentMethods,\r\n      setBreakfastEggs, setBreakfastBroths, setBreakfastRiceBread, setBreakfastDrinks, setBreakfastAdditions,\r\n      setBreakfastTypes, setBreakfastProteins, setBreakfastTimes\r\n    ];\r\n    const unsubscribers = collectionsArr.map((col, index) => onSnapshot(collection(db, col), (snapshot) => {\r\n      const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setters[index](data);\r\n      if (process.env.NODE_ENV === 'development') console.log(`Updated ${col}:`, data);\r\n      if (data.length === 0) {\r\n        setErrorMessage(\r\n          process.env.NODE_ENV !== 'production'\r\n            ? `La colección ${col} está vacía. Agrega datos desde /admin.`\r\n            : 'Algunas opciones no están disponibles. Intenta de nuevo más tarde.'\r\n        );\r\n      }\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error(`Error al escuchar ${col}:`, error);\r\n      setErrorMessage(\r\n        process.env.NODE_ENV === 'production'\r\n          ? 'No se pudieron cargar las opciones. Intenta de nuevo más tarde.'\r\n          : `Error al cargar datos de ${col}. Revisa la consola para más detalles.`\r\n      );\r\n    }));\r\n\r\n    const settingsUnsubscribe = onSnapshot(doc(db, 'settings', 'global'), (docSnapshot) => {\r\n      setIsOrderingDisabled(docSnapshot.exists() ? docSnapshot.data().isOrderingDisabled || false : false);\r\n    }, (error) => {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al escuchar settings/global:', error);\r\n      setErrorMessage('Error al cargar configuración. Intenta de nuevo más tarde.');\r\n    });\r\n\r\n    const schedulesUnsubscribe = onSnapshot(doc(db, 'settings', 'schedules'), (docSnapshot) => {\r\n      if (docSnapshot.exists()) {\r\n        const data = docSnapshot.data();\r\n        setSchedules({\r\n          breakfastStart: data.breakfastStart || 420,\r\n          breakfastEnd: data.breakfastEnd || 631,\r\n          lunchStart: data.lunchStart || 632,\r\n          lunchEnd: data.lunchEnd || 950,\r\n        });\r\n      }\r\n    });\r\n\r\n    const breakfastOrdersUnsubscribe = onSnapshot(collection(db, 'breakfastOrders'), (snapshot) => {\r\n      const breakfastOrders = snapshot.docs\r\n        .map(docu => ({ id: docu.id, ...docu.data(), type: 'breakfast' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'breakfast'), ...breakfastOrders]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated breakfast orders:', breakfastOrders);\r\n    });\r\n\r\n    const ordersUnsubscribe = onSnapshot(collection(db, 'tableOrders'), (snapshot) => {\r\n      const orderData = snapshot.docs\r\n        .map(docu => ({ id: docu.id, ...docu.data(), type: 'lunch' }))\r\n        .filter(order => order.userId === user?.uid)\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      setOrders(prev => [...prev.filter(order => order.type !== 'lunch'), ...orderData]);\r\n      if (process.env.NODE_ENV === 'development') console.log('Updated waiter orders:', orderData);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribers.forEach(unsubscribe => unsubscribe());\r\n      settingsUnsubscribe();\r\n      schedulesUnsubscribe();\r\n      breakfastOrdersUnsubscribe();\r\n      ordersUnsubscribe();\r\n    };\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const updateMenuTypeAndTime = () => {\r\n      const now = new Date();\r\n      const totalMinutes = now.getHours() * 60 + now.getMinutes();\r\n      let menu = 'closed';\r\n      let timeString = '';\r\n\r\n      const formatTime = (minutes) => {\r\n        const hours = Math.floor(minutes / 60);\r\n        const mins = minutes % 60;\r\n        const period = hours >= 12 ? 'PM' : 'AM';\r\n        const adjustedHours = hours % 12 || 12;\r\n        return `${adjustedHours}:${mins.toString().padStart(2, '0')} ${period}`;\r\n      };\r\n\r\n      if (totalMinutes >= schedules.breakfastStart && totalMinutes <= schedules.breakfastEnd) {\r\n        menu = 'breakfast';\r\n        timeString = formatTime(schedules.breakfastEnd);\r\n      } else if (totalMinutes >= schedules.lunchStart && totalMinutes <= schedules.lunchEnd) {\r\n        menu = 'lunch';\r\n        timeString = formatTime(schedules.lunchEnd);\r\n      }\r\n\r\n      setMenuType(menu);\r\n      setTimeRemaining(timeString);\r\n    };\r\n\r\n    updateMenuTypeAndTime();\r\n    const interval = setInterval(updateMenuTypeAndTime, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [schedules]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      const timer = setTimeout(() => setErrorMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => setSuccessMessage(null), 10000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage]);\r\n\r\n  const handleSendOrder = async () => {\r\n    let incompleteMealIdx = null;\r\n    let incompleteSlideIdx = null;\r\n    let firstMissingField = '';\r\n\r\n    for (let i = 0; i < meals.length; i++) {\r\n      const meal = meals[i];\r\n      const isCompleteRice = Array.isArray(meal?.principle) && meal.principle.some(p => ['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(p.name));\r\n      const missing = [];\r\n      const slideMap = {\r\n        'Sopa o reemplazo de sopa': 0,\r\n        'Principio': 1,\r\n        'Proteína': 2,\r\n        'Bebida': 3,\r\n        'Acompañamientos': 4,\r\n        'Mesa': 5,\r\n        'Método de pago': 6,\r\n        'Tipo de pedido': 7,\r\n      };\r\n\r\n      if (!meal?.soup && !meal?.soupReplacement) missing.push('Sopa o reemplazo de sopa');\r\n      if (!meal?.principle && !meal?.principleReplacement) missing.push('Principio');\r\n      if (!isCompleteRice && !meal?.protein) missing.push('Proteína');\r\n      if (!meal?.drink) missing.push('Bebida');\r\n      if (!isCompleteRice && (!meal?.sides || meal.sides.length === 0)) missing.push('Acompañamientos');\r\n      if (!meal?.tableNumber) missing.push('Mesa');\r\n      // <-- aceptar payment o paymentMethod\r\n      if (!meal?.paymentMethod && !meal?.payment) missing.push('Método de pago');\r\n      if (!meal?.orderType) missing.push('Tipo de pedido');\r\n\r\n      if (missing.length > 0) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`Meal ${i + 1} is incomplete. Missing fields:`, missing);\r\n          console.log(`Meal ${i + 1} data:`, meal);\r\n        }\r\n        incompleteMealIdx = i;\r\n        firstMissingField = missing[0];\r\n        incompleteSlideIdx = slideMap[firstMissingField] || 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (incompleteMealIdx !== null) {\r\n      setIncompleteMealIndex(incompleteMealIdx);\r\n      setIncompleteSlideIndex(incompleteSlideIdx);\r\n      setErrorMessage(`Por favor, completa el campo \"${firstMissingField}\" para el Almuerzo #${incompleteMealIdx + 1}.`);\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`meal-item-${incompleteMealIdx}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n          element.dispatchEvent(new CustomEvent('updateSlide', { detail: { slideIndex: incompleteSlideIdx } }));\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n    try {\r\n      const mappedMeals = meals.map(meal => {\r\n        const pm = normalizePayment(meal.payment || meal.paymentMethod);\r\n        return {\r\n          soup: meal.soup ? { name: meal.soup.name } : null,\r\n          soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n          principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n          protein: meal.protein ? { name: meal.protein.name } : null,\r\n          drink: meal.drink ? { name: meal.drink.name } : null,\r\n          sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n          additions: meal.additions?.map(addition => ({\r\n            id: addition.id,\r\n            name: addition.name,\r\n            protein: addition.protein || '',\r\n            replacement: addition.replacement || '',\r\n            quantity: addition.quantity || 1,\r\n            price: addition.price || 0,\r\n          })) || [],\r\n          tableNumber: meal.tableNumber || '',\r\n          // --- pago como string + objeto de compatibilidad ---\r\n          payment: pm || '',\r\n          paymentMethod: pm ? { name: pm } : null,\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n        };\r\n      });\r\n\r\n      const orderPaymentTop = (() => {\r\n        const uniques = [...new Set(mappedMeals.map(m => m.payment).filter(Boolean))];\r\n        return uniques.length === 1 ? uniques[0] : '';\r\n      })();\r\n\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        meals: mappedMeals,\r\n        payment: orderPaymentTop, // útil para totales/filtros rápidos\r\n        total: calculateTotal(meals, 3),\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      console.log('[WaiterDashboard] Saving order with meals:', order.meals);\r\n      await addDoc(collection(db, 'tableOrders'), order);\r\n      setSuccessMessage('¡Orden de mesa guardada con éxito!');\r\n      setMeals([initializeMealData({}, true)]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de mesa:', error);\r\n      setErrorMessage('Error al guardar la orden. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendBreakfastOrder = async () => {\r\n    let incompleteIndex = null;\r\n    let incompleteSlide = null;\r\n    let firstMissingField = '';\r\n\r\n    breakfasts.forEach((breakfast, index) => {\r\n      const typeData = Array.isArray(breakfastTypes) ? breakfastTypes.find(bt => bt.name === breakfast.type?.name) : null;\r\n      const steps = typeData ? typeData.steps || [] : ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'];\r\n      const missing = [];\r\n\r\n      if (!breakfast.type?.name) missing.push('type');\r\n      steps.forEach(step => {\r\n        if (step === 'tableNumber') {\r\n          if (!breakfast.tableNumber) missing.push('tableNumber');\r\n        } else if (step === 'paymentMethod') {\r\n          // aceptar payment o paymentMethod\r\n          if (!breakfast.payment && !breakfast.paymentMethod) missing.push('paymentMethod');\r\n        } else if (step === 'orderType') {\r\n          if (!breakfast.orderType) missing.push('orderType');\r\n        } else if (!breakfast[step]) {\r\n          missing.push(step);\r\n        }\r\n      });\r\n\r\n      if (missing.length > 0 && incompleteIndex === null) {\r\n        incompleteIndex = index;\r\n        firstMissingField = missing[0];\r\n        const slideMap = {\r\n          type: 0,\r\n          broth: 1,\r\n          eggs: 2,\r\n          riceBread: 3,\r\n          drink: 4,\r\n          protein: 5,\r\n          tableNumber: 6,\r\n          paymentMethod: 7,\r\n          orderType: 8,\r\n        };\r\n        incompleteSlide = slideMap[firstMissingField] || 0;\r\n      }\r\n    });\r\n\r\n    if (incompleteIndex !== null) {\r\n      setIncompleteBreakfastIndex(incompleteIndex);\r\n      setIncompleteBreakfastSlideIndex(incompleteSlide);\r\n      setErrorMessage(\r\n        `Por favor, completa el campo \"${firstMissingField}\" para el Desayuno #${incompleteIndex + 1}.`\r\n      );\r\n      setTimeout(() => {\r\n        const element = document.getElementById(`breakfast-item-${breakfasts[incompleteIndex].id}`);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n          element.classList.add('highlight-incomplete');\r\n          setTimeout(() => element.classList.remove('highlight-incomplete'), 3000);\r\n        }\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const mappedBreakfasts = breakfasts.map(b => {\r\n        const pm = normalizePayment(b.payment || b.paymentMethod);\r\n        return {\r\n          type: b.type ? { name: b.type.name } : null,\r\n          broth: b.broth ? { name: b.broth.name } : null,\r\n          eggs: b.eggs ? { name: b.eggs.name } : null,\r\n          riceBread: b.riceBread ? { name: b.riceBread.name } : null,\r\n          drink: b.drink ? { name: b.drink.name } : null,\r\n          protein: b.protein ? { name: b.protein.name } : null,\r\n          additions: b.additions?.map(addition => ({\r\n            name: addition.name,\r\n            quantity: addition.quantity || 1,\r\n          })) || [],\r\n          tableNumber: b.tableNumber || '',\r\n          // --- pago como string + objeto de compatibilidad ---\r\n          payment: pm || '',\r\n          paymentMethod: pm ? { name: pm } : null,\r\n          orderType: b.orderType || '',\r\n          notes: b.notes || '',\r\n        };\r\n      });\r\n\r\n      const orderPaymentTop = (() => {\r\n        const uniques = [...new Set(mappedBreakfasts.map(m => m.payment).filter(Boolean))];\r\n        return uniques.length === 1 ? uniques[0] : '';\r\n      })();\r\n\r\n      const order = {\r\n        userId: user.uid,\r\n        userEmail: user.email || `waiter_${user.uid}@example.com`,\r\n        breakfasts: mappedBreakfasts,\r\n        payment: orderPaymentTop, // útil para totales/filtros rápidos\r\n        total: calculateTotalBreakfastPrice(breakfasts, 3, breakfastTypes),\r\n        status: 'Pendiente',\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n      if (process.env.NODE_ENV === 'development') console.log('[WaiterDashboard] Saving breakfast order:', order);\r\n      await addDoc(collection(db, 'breakfastOrders'), order);\r\n      setSuccessMessage('¡Orden de desayuno guardada con éxito!');\r\n      setBreakfasts([initializeBreakfastData({ isWaitress: true })]);\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV === 'development') console.error('Error al guardar la orden de desayuno:', error);\r\n      setErrorMessage('Error al guardar la orden de desayuno. Intenta de nuevo.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus, orderType) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Attempting to update status for orderId:', orderId, 'to', newStatus, 'with role:', role, 'type:', orderType);\r\n      const collectionName = orderType === 'breakfast' ? 'breakfastOrders' : 'tableOrders';\r\n      const orderRef = doc(db, collectionName, orderId);\r\n      await updateDoc(orderRef, {\r\n        status: newStatus,\r\n        updatedAt: new Date(),\r\n      });\r\n      setErrorMessage(null);\r\n      setSuccessMessage(`Estado de la orden ${orderId.slice(0, 8)} actualizado a ${newStatus}`);\r\n      setShowMenu(null);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`Estado de la orden ${orderId} actualizado a ${newStatus}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado:', error);\r\n      setErrorMessage(`Error al actualizar el estado: ${error.message}. Verifica tu rol y permisos.`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOrder = (order) => {\r\n    if (order.type === 'lunch') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        meals: order.meals.map(meal => ({\r\n          soup: meal.soup || null,\r\n          soupReplacement: meal.soupReplacement ? {\r\n            ...meal.soupReplacement,\r\n            replacement: meal.soupReplacement.replacement || ''\r\n          } : null,\r\n          principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({\r\n            ...p,\r\n            replacement: p.replacement || ''\r\n          })) : [],\r\n          principleReplacement: meal.principleReplacement || null,\r\n          protein: meal.protein || null,\r\n          drink: meal.drink || null,\r\n          sides: meal.sides || [],\r\n          additions: Array.isArray(meal.additions) ? meal.additions : [],\r\n          // --- aseguramos que el selector vea un objeto {name} aunque haya string guardado\r\n          paymentMethod: meal.paymentMethod || (meal.payment ? { name: meal.payment } : null),\r\n          payment: meal.payment || normalizePayment(meal.paymentMethod),\r\n          tableNumber: meal.tableNumber || '',\r\n          orderType: meal.orderType || '',\r\n          notes: meal.notes || '',\r\n          showReplacementsState: {\r\n            soup: meal.soupReplacement?.name === 'Remplazo por Sopa' && !!meal.soupReplacement?.replacement,\r\n            principle: meal.principle?.some(opt => opt.name === 'Remplazo por Principio' && !!opt.replacement) || false,\r\n          },\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing lunch order:', initializedOrder);\r\n      }\r\n    } else if (order.type === 'breakfast') {\r\n      const initializedOrder = {\r\n        ...order,\r\n        breakfasts: order.breakfasts.map(breakfast => ({\r\n          type: breakfast.type || null,\r\n          broth: breakfast.broth || null,\r\n          eggs: breakfast.eggs || null,\r\n          riceBread: breakfast.riceBread || null,\r\n          drink: breakfast.drink || null,\r\n          protein: breakfast.protein || null,\r\n          additions: Array.isArray(breakfast.additions) ? breakfast.additions : [],\r\n          tableNumber: breakfast.tableNumber || '',\r\n          // --- idem\r\n          paymentMethod: breakfast.paymentMethod || (breakfast.payment ? { name: breakfast.payment } : null),\r\n          payment: breakfast.payment || normalizePayment(breakfast.paymentMethod),\r\n          orderType: breakfast.orderType || '',\r\n          notes: breakfast.notes || '',\r\n        })),\r\n      };\r\n      setEditingOrder(initializedOrder);\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[WaiterDashboard] Editing breakfast order:', initializedOrder);\r\n      }\r\n    }\r\n    setShowMenu(null);\r\n  };\r\n\r\n  const handleFormChange = (index, field, value) => {\r\n    if (!editingOrder) return;\r\n\r\n    if (editingOrder.type === 'lunch') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newMeals = [...editingOrder.meals];\r\n        if (field === 'principle' || field === 'sides') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : [] };\r\n        } else if (field === 'soup' || field === 'soupReplacement' || field === 'principleReplacement' || field === 'protein' || field === 'drink' || field === 'paymentMethod') {\r\n          newMeals[index] = { ...newMeals[index], [field]: value ? value : null };\r\n          if (field === 'paymentMethod') {\r\n            newMeals[index].payment = normalizePayment(value);\r\n          }\r\n          if (field === 'soupReplacement' && value?.name === 'Remplazo por Sopa') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: true };\r\n          } else if (field === 'soupReplacement' || field === 'soup') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, soup: false };\r\n            if (field === 'soup') {\r\n              newMeals[index].soupReplacement = null;\r\n            }\r\n          }\r\n          if (field === 'principle' && value?.some(opt => opt.name === 'Remplazo por Principio')) {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: true };\r\n          } else if (field === 'principle') {\r\n            newMeals[index].showReplacementsState = { ...newMeals[index].showReplacementsState, principle: false };\r\n          }\r\n        } else if (field === 'additions') {\r\n          newMeals[index] = { ...newMeals[index], additions: value };\r\n        } else {\r\n          newMeals[index] = { ...newMeals[index], [field]: value };\r\n        }\r\n        const updatedTotal = calculateTotal(newMeals, 3);\r\n        setEditingOrder(prev => ({ ...prev, meals: newMeals, total: updatedTotal }));\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      if (field === 'total' && index === -1) {\r\n        setEditingOrder(prev => ({ ...prev, total: parseFloat(value) || 0 }));\r\n        console.log(`[WaiterDashboard] Updated total: ${value}`);\r\n      } else {\r\n        const newBreakfasts = [...editingOrder.breakfasts];\r\n        if (field === 'additions') {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], additions: value };\r\n        } else {\r\n          newBreakfasts[index] = { ...newBreakfasts[index], [field]: value ? value : null };\r\n          if (field === 'paymentMethod') {\r\n            newBreakfasts[index].payment = normalizePayment(value);\r\n          }\r\n        }\r\n        const updatedTotal = calculateTotalBreakfastPrice(newBreakfasts, 3, breakfastTypes);\r\n        setEditingOrder(prev => ({ ...prev, breakfasts: newBreakfasts, total: updatedTotal }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (!editingOrder) return;\r\n\r\n    if (editingOrder.type === 'lunch') {\r\n      for (const [index, meal] of editingOrder.meals.entries()) {\r\n        const unconfiguredAdditions = meal.additions?.filter(\r\n          add => add.requiresReplacement && (\r\n            (add.name === 'Proteína adicional' && !add.protein) ||\r\n            (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n          )\r\n        ) || [];\r\n        if (unconfiguredAdditions.length > 0) {\r\n          setErrorMessage(`Por favor, selecciona una opción para \"${unconfiguredAdditions[0].name}\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!meal.tableNumber && meal.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Almuerzo #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited lunch order:', editingOrder);\r\n        const orderRef = doc(db, 'tableOrders', editingOrder.id);\r\n        const mappedMeals = editingOrder.meals.map(meal => {\r\n          const pm = normalizePayment(meal.payment || meal.paymentMethod);\r\n          return {\r\n            soup: meal.soup ? { name: meal.soup.name } : null,\r\n            soupReplacement: meal.soupReplacement ? { name: meal.soupReplacement.name, replacement: meal.soupReplacement.replacement || '' } : null,\r\n            principle: Array.isArray(meal.principle) ? meal.principle.map(p => ({ name: p.name, replacement: p.replacement || '' })) : [],\r\n            principleReplacement: meal.principleReplacement ? { name: meal.principleReplacement.name } : null,\r\n            protein: meal.protein ? { name: meal.protein.name } : null,\r\n            drink: meal.drink ? { name: meal.drink.name } : null,\r\n            sides: Array.isArray(meal.sides) ? meal.sides.map(s => ({ name: s.name })) : [],\r\n            additions: meal.additions ? meal.additions.map(a => ({\r\n              id: a.id,\r\n              name: a.name,\r\n              protein: a.protein || '',\r\n              replacement: a.replacement || '',\r\n              quantity: a.quantity || 1,\r\n              price: a.price || 0,\r\n            })) : [],\r\n            tableNumber: meal.tableNumber || '',\r\n            payment: pm || '',\r\n            paymentMethod: pm ? { name: pm } : null,\r\n            orderType: meal.orderType || '',\r\n            notes: meal.notes || '',\r\n          };\r\n        });\r\n        const orderPaymentTop = (() => {\r\n          const uniques = [...new Set(mappedMeals.map(m => m.payment).filter(Boolean))];\r\n          return uniques.length === 1 ? uniques[0] : '';\r\n        })();\r\n\r\n        await updateDoc(orderRef, {\r\n          meals: mappedMeals,\r\n          payment: orderPaymentTop,\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotal(editingOrder.meals, 3),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    } else if (editingOrder.type === 'breakfast') {\r\n      for (const [index, breakfast] of editingOrder.breakfasts.entries()) {\r\n        const typeData = breakfastTypes.find(bt => bt.name === breakfast.type?.name) || { steps: ['type', 'eggs', 'broth', 'riceBread', 'drink', 'protein'] };\r\n        const steps = typeData.steps || [];\r\n        const missing = [];\r\n        if (!breakfast.type?.name) missing.push('type');\r\n        steps.forEach(step => {\r\n          if (step === 'tableNumber' && !breakfast.tableNumber) missing.push('tableNumber');\r\n          else if (step === 'paymentMethod' && !breakfast.payment && !breakfast.paymentMethod) missing.push('paymentMethod');\r\n          else if (step === 'orderType' && !breakfast.orderType) missing.push('orderType');\r\n          else if (!breakfast[step]) missing.push(step);\r\n        });\r\n        if (missing.length > 0) {\r\n          setErrorMessage(`Por favor, completa el campo \"${missing[0]}\" para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.orderType) {\r\n          setErrorMessage(`El tipo de pedido es obligatorio para el Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n        if (!breakfast.tableNumber && breakfast.orderType === 'table') {\r\n          setErrorMessage(`El número de mesa es obligatorio para pedidos \"Para mesa\" en Desayuno #${index + 1}.`);\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        setIsLoading(true);\r\n        console.log('[WaiterDashboard] Saving edited breakfast order:', editingOrder);\r\n        const orderRef = doc(db, 'breakfastOrders', editingOrder.id);\r\n\r\n        const mappedBreakfasts = editingOrder.breakfasts.map(b => {\r\n          const pm = normalizePayment(b.payment || b.paymentMethod);\r\n          return {\r\n            type: b.type ? { name: b.type.name } : null,\r\n            broth: b.broth ? { name: b.broth.name } : null,\r\n            eggs: b.eggs ? { name: b.eggs.name } : null,\r\n            riceBread: b.riceBread ? { name: b.riceBread.name } : null,\r\n            drink: b.drink ? { name: b.drink.name } : null,\r\n            protein: b.protein ? { name: b.protein.name } : null,\r\n            additions: b.additions?.map(addition => ({\r\n              name: addition.name,\r\n              quantity: addition.quantity || 1,\r\n            })) || [],\r\n            tableNumber: b.tableNumber || '',\r\n            payment: pm || '',\r\n            paymentMethod: pm ? { name: pm } : null,\r\n            orderType: b.orderType || '',\r\n            notes: b.notes || '',\r\n          };\r\n        });\r\n\r\n        const orderPaymentTop = (() => {\r\n          const uniques = [...new Set(mappedBreakfasts.map(m => m.payment).filter(Boolean))];\r\n          return uniques.length === 1 ? uniques[0] : '';\r\n        })();\r\n\r\n        await updateDoc(orderRef, {\r\n          breakfasts: mappedBreakfasts,\r\n          payment: orderPaymentTop,\r\n          total: editingOrder.total !== undefined ? editingOrder.total : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes),\r\n          updatedAt: new Date(),\r\n        });\r\n        setEditingOrder(null);\r\n        setSuccessMessage(`Orden ${editingOrder.id.slice(0, 8)} actualizada con éxito`);\r\n      } catch (error) {\r\n        console.error('Error al guardar edición:', error);\r\n        setErrorMessage(`Error al guardar los cambios: ${error.message}. Verifica tu rol y permisos.`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatValue = (value) => {\r\n    if (!value) return 'N/A';\r\n    if (typeof value === 'string') return value;\r\n    if (value.name) return value.name;\r\n    return 'N/A';\r\n  };\r\n\r\n  const formatArray = (arr) => {\r\n    if (!arr || !Array.isArray(arr)) return formatValue(arr);\r\n    if (arr.length === 0) return 'N/A';\r\n    return arr.map(item => formatValue(item)).filter(v => v !== 'N/A').join(', ');\r\n  };\r\n\r\n  const statusColors = {\r\n    'Pendiente': 'bg-gray-100 text-gray-800',\r\n    'Preparando': 'bg-blue-100 text-blue-800',\r\n    'Completada': 'bg-green-100 text-green-800',\r\n    'Cancelada': 'bg-red-100 text-red-800',\r\n  };\r\n\r\n  const normalizedAdditions = useMemo(() => additions.map(add => ({\r\n    ...add,\r\n    price: add.name === 'Mojarra' ? 8000 : add.price,\r\n    requiresReplacement: add.requiresReplacement || ['Proteína adicional', 'Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name),\r\n  })).filter(add =>\r\n    add.name !== 'Arroz con pollo' &&\r\n    add.name !== 'Arroz paisa' &&\r\n    add.name !== 'Arroz tres carnes'\r\n  ), [additions]);\r\n\r\n  const getReplacementsForAdditions = (meal) => {\r\n    const selectedAdditions = meal?.additions || [];\r\n    const unconfiguredAdditions = selectedAdditions.filter(\r\n      (add) => add.requiresReplacement && (add.name === 'Proteína adicional' ? !add.protein : !add.replacement)\r\n    );\r\n    if (unconfiguredAdditions.length === 0) return [];\r\n\r\n    const firstUnconfigured = unconfiguredAdditions[0];\r\n    if (firstUnconfigured.name === 'Sopa adicional') return soups.filter(soup => soup.name !== 'Solo bandeja' && soup.name !== 'Remplazo por Sopa');\r\n    if (firstUnconfigured.name === 'Principio adicional') return principles.filter(principle =>\r\n      principle.name !== 'Remplazo por Principio' &&\r\n      !['Arroz con pollo', 'Arroz paisa', 'Arroz tres carnes'].includes(principle.name)\r\n    );\r\n    if (firstUnconfigured.name === 'Proteína adicional') return proteins.filter((p) => p.name !== 'Mojarra');\r\n    if (firstUnconfigured.name === 'Bebida adicional') return drinks.filter((d) => d.name !== 'Sin bebida');\r\n    return [];\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-200 flex flex-col\">\r\n      <header className=\"bg-gray-800 text-white p-4\">\r\n        <h1 className=\"text-lg font-bold\">Gestión de Órdenes de Mesas</h1>\r\n      </header>\r\n      <main className=\"p-4 flex-grow w-full max-w-4xl mx-auto\">\r\n        <div className=\"flex border-b border-gray-300 mb-4\">\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'create' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('create')}\r\n          >\r\n            Crear Orden\r\n          </button>\r\n          <button\r\n            className={`px-4 py-2 text-sm font-medium ${activeTab === 'view' ? 'border-b-2 border-blue-500 text-blue-500' : 'text-gray-600'}`}\r\n            onClick={() => setActiveTab('view')}\r\n          >\r\n            Ver Órdenes\r\n          </button>\r\n        </div>\r\n        {activeTab === 'create' ? (\r\n          isOrderingDisabled || menuType === 'closed' ? (\r\n            <div className=\"flex flex-col items-center justify-center text-center bg-red-50 text-red-700 p-4 rounded-lg shadow-md\">\r\n              <h2 className=\"text-xl font-bold\">🚫 Restaurante cerrado</h2>\r\n              <p className=\"text-sm\">Los pedidos estarán disponibles nuevamente mañana.</p>\r\n            </div>\r\n          ) : menuType === 'breakfast' ? (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Desayuno disponible hasta {timeRemaining}\r\n              </p>\r\n              <BreakfastList\r\n                breakfasts={breakfasts}\r\n                setBreakfasts={setBreakfasts}\r\n                eggs={breakfastEggs}\r\n                broths={breakfastBroths}\r\n                riceBread={breakfastRiceBread}\r\n                drinks={breakfastDrinks}\r\n                additions={breakfastAdditions}\r\n                breakfastTypes={breakfastTypes}\r\n                breakfastProteins={breakfastProteins}\r\n                times={breakfastTimes}\r\n                paymentMethods={paymentMethods}\r\n                onBreakfastChange={(id, field, value) => handleBreakfastChange(setBreakfasts, id, field, value)}\r\n                onRemoveBreakfast={(id) => removeBreakfast(setBreakfasts, setSuccessMessage, id, breakfasts)}\r\n                onAddBreakfast={() => addBreakfast(setBreakfasts, setSuccessMessage, breakfasts, initializeBreakfastData({ isWaitress: true }))}\r\n                onDuplicateBreakfast={(breakfast) => duplicateBreakfast(setBreakfasts, setSuccessMessage, breakfast, breakfasts)}\r\n                incompleteBreakfastIndex={incompleteBreakfastIndex}\r\n                incompleteSlideIndex={incompleteBreakfastSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n                userRole={role}\r\n                savedAddress={{}}\r\n                isTableOrder={true}\r\n              />\r\n              <BreakfastOrderSummary\r\n                items={breakfasts}\r\n                onSendOrder={handleSendBreakfastOrder}\r\n                user={{ role: 3 }}\r\n                breakfastTypes={breakfastTypes}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"text-center text-gray-700 mb-4 text-sm bg-white p-3 rounded-lg shadow-sm\">\r\n                Toma pedidos rápido. Almuerzo disponible hasta {timeRemaining}\r\n              </p>\r\n              <MealList\r\n                meals={meals}\r\n                soups={soups}\r\n                soupReplacements={soupReplacements}\r\n                principles={principles}\r\n                proteins={proteins}\r\n                drinks={drinks}\r\n                sides={sides}\r\n                additions={additions}\r\n                paymentMethods={paymentMethods}\r\n                times={[]}\r\n                isTableOrder={true}\r\n                userRole={role}\r\n                onMealChange={(id, field, value) => handleMealChange(setMeals, id, field, value)}\r\n                onRemoveMeal={(id) => removeMeal(setMeals, setSuccessMessage, id, meals)}\r\n                onAddMeal={() => addMeal(setMeals, setSuccessMessage, meals, initializeMealData({}, true))}\r\n                onDuplicateMeal={(meal) => duplicateMeal(setMeals, setSuccessMessage, meal, meals)}\r\n                incompleteMealIndex={incompleteMealIndex}\r\n                incompleteSlideIndex={incompleteSlideIndex}\r\n                isOrderingDisabled={isOrderingDisabled}\r\n              />\r\n              <OrderSummary\r\n                meals={meals}\r\n                onSendOrder={handleSendOrder}\r\n                calculateTotal={() => calculateTotal(meals, 3)}\r\n                isTableOrder={true}\r\n                isWaiterView={false}\r\n                userRole={3}\r\n              />\r\n            </>\r\n          )\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {orders.length === 0 ? (\r\n              <p className=\"text-center text-gray-700\">No has registrado órdenes de mesas.</p>\r\n            ) : (\r\n              orders.map(order => (\r\n                <div key={order.id} className={`p-4 rounded-lg shadow-md ${statusColors[order.status] || 'bg-white'}`}>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-sm font-semibold text-gray-800\">\r\n                      {order.type === 'breakfast' ? 'Desayuno' : 'Almuerzo'} - Mesa {formatValue(order.meals?.[0]?.tableNumber || order.breakfasts?.[0]?.tableNumber)} - #{order.id.slice(-4)}\r\n                    </h2>\r\n                    <div className=\"relative\">\r\n                      <button\r\n                        onClick={() => setShowMenu(showMenu === order.id ? null : order.id)}\r\n                        className=\"text-gray-600 hover:text-gray-800 focus:outline-none\"\r\n                      >\r\n                        ⋮\r\n                      </button>\r\n                      {showMenu === order.id && (\r\n                        <div className=\"absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Pendiente', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Pendiente'}\r\n                          >\r\n                            Pendiente\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Preparando', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Preparando'}\r\n                          >\r\n                            Preparando\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Completada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Completada'}\r\n                          >\r\n                            Completada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleStatusChange(order.id, 'Cancelada', order.type)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 disabled:bg-gray-200\"\r\n                            disabled={order.status === 'Cancelada'}\r\n                          >\r\n                            Cancelada\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleEditOrder(order)}\r\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                          >\r\n                            Editar\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {order.type === 'breakfast' ? (\r\n                    <BreakfastOrderSummary\r\n                      items={order.breakfasts}\r\n                      user={{ role: 3 }}\r\n                      breakfastTypes={breakfastTypes}\r\n                      statusClass={statusColors[order.status] || ''} // Añadir clase de estado\r\n                    />\r\n                  ) : (\r\n                    <OrderSummary\r\n                      meals={order.meals}\r\n                      isTableOrder={true}\r\n                      calculateTotal={() => order.total}\r\n                      isWaiterView={true}\r\n                      statusClass={statusColors[order.status] || ''}\r\n                      userRole={3}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n        {editingOrder && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-4 rounded-lg shadow-lg max-w-md w-full mx-4 overflow-y-auto\" style={{ maxHeight: '80vh' }}>\r\n              <h2 className=\"text-lg font-bold mb-4\">Editar Orden #{editingOrder.id.slice(-4)}</h2>\r\n              {editingOrder.type === 'lunch' ? (\r\n                editingOrder.meals.map((meal, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Almuerzo #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Sopa o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Sopa\"\r\n                          emoji=\"🥣\"\r\n                          options={soups}\r\n                          selected={meal.soup || meal.soupReplacement}\r\n                          showReplacements={meal.showReplacementsState?.soup || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={meal.soupReplacement?.replacement ? { name: meal.soupReplacement.replacement } : null}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Sopa selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, value?.name === 'Remplazo por Sopa' ? 'soupReplacement' : 'soup', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Sopa replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              soupReplacement: {\r\n                                ...newMeals[index].soupReplacement,\r\n                                name: 'Remplazo por Sopa',\r\n                                replacement: replacement?.name || ''\r\n                              }\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Principio o Reemplazo</label>\r\n                        <OptionSelector\r\n                          title=\"Principio\"\r\n                          emoji=\"🍚\"\r\n                          options={principles}\r\n                          selected={meal.principle || meal.principleReplacement}\r\n                          showReplacements={meal.showReplacementsState?.principle || false}\r\n                          replacements={soupReplacements.filter(opt => opt.name !== 'Remplazo por Sopa' && opt.name !== 'Solo bandeja')}\r\n                          selectedReplacement={\r\n                            meal.principle?.find(opt => opt.name === 'Remplazo por Principio')?.replacement\r\n                              ? { name: meal.principle.find(opt => opt.name === 'Remplazo por Principio').replacement }\r\n                              : null\r\n                          }\r\n                          multiple={true}\r\n                          showConfirmButton={true}\r\n                          onImmediateSelect={(value) => {\r\n                            console.log(`[WaiterDashboard] Principio selected for meal ${index + 1}:`, value);\r\n                            handleFormChange(index, 'principle', value);\r\n                          }}\r\n                          onImmediateReplacementSelect={(replacement) => {\r\n                            console.log(`[WaiterDashboard] Principio replacement selected for meal ${index + 1}:`, replacement);\r\n                            const newMeals = [...editingOrder.meals];\r\n                            newMeals[index] = {\r\n                              ...newMeals[index],\r\n                              principle: newMeals[index].principle?.map(opt => ({\r\n                                ...opt,\r\n                                replacement: opt.name === 'Remplazo por Principio' ? replacement?.name || '' : opt.replacement\r\n                              }))\r\n                            };\r\n                            setEditingOrder(prev => ({ ...prev, meals: newMeals }));\r\n                          }}\r\n                          onConfirm={({ selection }) => handleFormChange(index, 'principle', selection)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={proteins}\r\n                          selected={meal.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={drinks}\r\n                          selected={meal.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Acompañamientos</label>\r\n                        <OptionSelector\r\n                          title=\"Acompañamiento\"\r\n                          emoji=\"🥗\"\r\n                          options={sides}\r\n                          selected={meal.sides}\r\n                          multiple={true}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'sides', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={meal.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={meal.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={meal.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={meal.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Almuerzo #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por almuerzo)\"\r\n                          emoji=\"➕\"\r\n                          options={normalizedAdditions}\r\n                          selected={meal?.additions || []}\r\n                          multiple={true}\r\n                          showReplacements={meal?.additions?.some(\r\n                            add => add.requiresReplacement && (\r\n                              (add.name === 'Proteína adicional' && !add.protein) ||\r\n                              (['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) && !add.replacement)\r\n                            )\r\n                          )}\r\n                          replacements={getReplacementsForAdditions(meal)}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for meal ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              ...add,\r\n                              quantity: add.quantity || 1,\r\n                              price: add.price || 0,\r\n                              protein: add.name === 'Proteína adicional' ? (add.protein || '') : add.protein || '',\r\n                              replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name) ? (add.replacement || '') : add.replacement || '',\r\n                            })));\r\n                          }}\r\n                          onImmediateReplacementSelect={({ id: additionId, replacement }) => {\r\n                            console.log(`[WaiterDashboard] Replacement selected for meal ${index + 1}, addition ${additionId}:`, replacement);\r\n                            const updatedAdditions = (meal?.additions || []).map((add) => {\r\n                              if (add.id === additionId) {\r\n                                return {\r\n                                  ...add,\r\n                                  protein: add.name === 'Proteína adicional' ? replacement?.name || add.protein : add.protein,\r\n                                  replacement: ['Sopa adicional', 'Principio adicional', 'Bebida adicional'].includes(add.name)\r\n                                    ? replacement?.name || add.replacement\r\n                                    : add.replacement,\r\n                                };\r\n                              }\r\n                              return add;\r\n                            });\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for meal ${index + 1}:`, addition);\r\n                            const existingAddition = meal?.additions?.find(a => a.id === addition.id);\r\n                            const updatedAdditions = existingAddition\r\n                              ? meal.additions.map(a => a.id === addition.id ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(meal.additions || []), { ...addition, quantity: 1, price: addition.price || 0 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions\r\n                              .map(add => add.id === additionId ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionId) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionId} for meal ${index + 1}`);\r\n                            const updatedAdditions = meal.additions.map(add =>\r\n                              add.id === additionId ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {meal?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este almuerzo: $\r\n                            {meal.additions.reduce((sum, item) => sum + (item?.price || 0) * (item?.quantity || 1), 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                editingOrder.breakfasts.map((breakfast, index) => (\r\n                  <div key={index} className=\"mb-4\">\r\n                    <h3 className=\"text-sm font-medium mb-2\">Desayuno #{index + 1}</h3>\r\n                    <div className=\"grid grid-cols-1 gap-2\">\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Desayuno</label>\r\n                        <OptionSelector\r\n                          title=\"Tipo\"\r\n                          emoji=\"🥞\"\r\n                          options={breakfastTypes}\r\n                          selected={breakfast.type}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'type', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Caldo</label>\r\n                        <OptionSelector\r\n                          title=\"Caldo\"\r\n                          emoji=\"🥣\"\r\n                          options={breakfastBroths}\r\n                          selected={breakfast.broth}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'broth', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Huevos</label>\r\n                        <OptionSelector\r\n                          title=\"Huevos\"\r\n                          emoji=\"🥚\"\r\n                          options={breakfastEggs}\r\n                          selected={breakfast.eggs}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'eggs', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Arroz/Pan</label>\r\n                        <OptionSelector\r\n                          title=\"Arroz/Pan\"\r\n                          emoji=\"🍞\"\r\n                          options={breakfastRiceBread}\r\n                          selected={breakfast.riceBread}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'riceBread', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Bebida</label>\r\n                        <OptionSelector\r\n                          title=\"Bebida\"\r\n                          emoji=\"🥤\"\r\n                          options={breakfastDrinks}\r\n                          selected={breakfast.drink}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'drink', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Proteína</label>\r\n                        <OptionSelector\r\n                          title=\"Proteína\"\r\n                          emoji=\"🍖\"\r\n                          options={breakfastProteins}\r\n                          selected={breakfast.protein}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'protein', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Método de Pago</label>\r\n                        <OptionSelector\r\n                          title=\"Método de Pago\"\r\n                          emoji=\"💳\"\r\n                          options={paymentMethods}\r\n                          selected={breakfast.paymentMethod}\r\n                          multiple={false}\r\n                          onImmediateSelect={(value) => handleFormChange(index, 'paymentMethod', value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Número de Mesa</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={breakfast.tableNumber || ''}\r\n                          onChange={(e) => handleFormChange(index, 'tableNumber', e.target.value)}\r\n                          placeholder=\"Número de mesa\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Tipo de Pedido</label>\r\n                        <select\r\n                          value={breakfast.orderType || ''}\r\n                          onChange={(e) => handleFormChange(index, 'orderType', e.target.value)}\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        >\r\n                          <option value=\"\">Seleccionar</option>\r\n                          <option value=\"table\">Para mesa</option>\r\n                          <option value=\"takeaway\">Para llevar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs block mb-1 font-medium\">Notas</label>\r\n                        <textarea\r\n                          value={breakfast.notes || ''}\r\n                          onChange={(e) => handleFormChange(index, 'notes', e.target.value)}\r\n                          placeholder=\"Notas\"\r\n                          className=\"w-full p-2 border rounded text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-xs font-medium text-gray-700 mb-1\">➕ Adiciones para Desayuno #{index + 1} (opcional)</h4>\r\n                        <OptionSelector\r\n                          title=\"Adiciones (por desayuno)\"\r\n                          emoji=\"➕\"\r\n                          options={breakfastAdditions}\r\n                          selected={breakfast?.additions || []}\r\n                          multiple={true}\r\n                          onImmediateSelect={(selection) => {\r\n                            console.log(`[WaiterDashboard] Additions selected for breakfast ${index + 1}:`, selection);\r\n                            handleFormChange(index, 'additions', selection.map(add => ({\r\n                              name: add.name,\r\n                              quantity: add.quantity || 1,\r\n                            })));\r\n                          }}\r\n                          onAdd={(addition) => {\r\n                            console.log(`[WaiterDashboard] Adding addition for breakfast ${index + 1}:`, addition);\r\n                            const existingAddition = breakfast?.additions?.find(a => a.name === addition.name);\r\n                            const updatedAdditions = existingAddition\r\n                              ? breakfast.additions.map(a => a.name === addition.name ? { ...a, quantity: (a.quantity || 1) + 1 } : a)\r\n                              : [...(breakfast.additions || []), { name: addition.name, quantity: 1 }];\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onRemove={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Removing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions\r\n                              .map(add => add.name === additionName ? { ...add, quantity: (add.quantity || 1) - 1 } : add)\r\n                              .filter(add => add.quantity > 0);\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                          onIncrease={(additionName) => {\r\n                            console.log(`[WaiterDashboard] Increasing addition ${additionName} for breakfast ${index + 1}`);\r\n                            const updatedAdditions = breakfast.additions.map(add =>\r\n                              add.name === additionName ? { ...add, quantity: (add.quantity || 1) + 1 } : add\r\n                            );\r\n                            handleFormChange(index, 'additions', updatedAdditions);\r\n                          }}\r\n                        />\r\n                        {breakfast?.additions?.length > 0 && (\r\n                          <div className=\"mt-2 text-sm font-semibold text-gray-700\">\r\n                            Total Adiciones de este desayuno: $\r\n                            {breakfast.additions.reduce((sum, item) => {\r\n                              const addition = breakfastAdditions.find(a => a.name === item.name);\r\n                              return sum + (addition?.price || 0) * (item?.quantity || 1);\r\n                            }, 0).toLocaleString('es-CO')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <div>\r\n                <label className=\"text-xs block mb-1 font-medium\">Total (editable)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={editingOrder.total !== undefined ? editingOrder.total : (editingOrder.type === 'lunch' ? calculateTotal(editingOrder.meals, 3) : calculateTotalBreakfastPrice(editingOrder.breakfasts, 3, breakfastTypes))}\r\n                  onChange={(e) => handleFormChange(-1, 'total', e.target.value)}\r\n                  placeholder=\"Total\"\r\n                  className=\"w-full p-2 border rounded text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2 mt-4 sticky bottom-4 bg-white py-2\">\r\n                <button\r\n                  onClick={handleSaveEdit}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\r\n                >\r\n                  Guardar\r\n                </button>\r\n                <button\r\n                  onClick={() => setEditingOrder(null)}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      <div className=\"fixed top-16 right-4 z-[10002] space-y-2 w-80 max-w-xs\">\r\n        {isLoading && <LoadingIndicator />}\r\n        {errorMessage && (\r\n          <ErrorMessage message={errorMessage} onClose={() => setErrorMessage(null)} />\r\n        )}\r\n        {successMessage && (\r\n          <SuccessMessage message={successMessage} onClose={() => setSuccessMessage(null)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaiterDashboard;\r\n"],"names":["WaiterDashboard","user","role","loading","useAuth","navigate","useNavigate","meals","setMeals","useState","initializeMealData","breakfasts","setBreakfasts","initializeBreakfastData","isWaitress","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","incompleteMealIndex","setIncompleteMealIndex","incompleteSlideIndex","setIncompleteSlideIndex","incompleteBreakfastIndex","setIncompleteBreakfastIndex","incompleteBreakfastSlideIndex","setIncompleteBreakfastSlideIndex","soups","setSoups","soupReplacements","setSoupReplacements","principles","setPrinciples","proteins","setProteins","drinks","setDrinks","sides","setSides","additions","setAdditions","paymentMethods","setPaymentMethods","breakfastEggs","setBreakfastEggs","breakfastBroths","setBreakfastBroths","breakfastRiceBread","setBreakfastRiceBread","breakfastDrinks","setBreakfastDrinks","breakfastAdditions","setBreakfastAdditions","breakfastTypes","setBreakfastTypes","breakfastProteins","setBreakfastProteins","breakfastTimes","setBreakfastTimes","isOrderingDisabled","setIsOrderingDisabled","orders","setOrders","activeTab","setActiveTab","editingOrder","setEditingOrder","showMenu","setShowMenu","menuType","setMenuType","schedules","setSchedules","breakfastStart","breakfastEnd","lunchStart","lunchEnd","timeRemaining","setTimeRemaining","normalizePayment","val","trim","name","label","value","method","toString","useEffect","setTimeout","setters","unsubscribers","map","col","index","onSnapshot","collection","db","snapshot","data","docs","doc","id","length","error","settingsUnsubscribe","docSnapshot","exists","schedulesUnsubscribe","breakfastOrdersUnsubscribe","breakfastOrders","docu","type","filter","order","userId","uid","sort","a","b","Date","createdAt","prev","ordersUnsubscribe","orderData","forEach","unsubscribe","updateMenuTypeAndTime","now","totalMinutes","getHours","getMinutes","menu","timeString","formatTime","minutes","hours","Math","floor","period","padStart","interval","setInterval","clearInterval","timer","clearTimeout","handleStatusChange","async","orderId","newStatus","orderType","console","log","collectionName","orderRef","updateDoc","status","updatedAt","slice","message","handleFormChange","field","total","parseFloat","newMeals","payment","showReplacementsState","soup","soupReplacement","some","opt","principle","updatedTotal","calculateTotal","newBreakfasts","calculateTotalBreakfastPrice","formatValue","statusColors","normalizedAdditions","useMemo","add","price","requiresReplacement","includes","getReplacementsForAdditions","meal","unconfiguredAdditions","protein","replacement","firstUnconfigured","p","d","_jsx","className","children","_jsxs","onClick","_Fragment","BreakfastList","eggs","broths","riceBread","times","onBreakfastChange","handleBreakfastChange","onRemoveBreakfast","removeBreakfast","onAddBreakfast","addBreakfast","onDuplicateBreakfast","breakfast","duplicateBreakfast","userRole","savedAddress","isTableOrder","BreakfastOrderSummary","items","onSendOrder","incompleteIndex","incompleteSlide","firstMissingField","_breakfast$type2","typeData","Array","isArray","find","bt","_breakfast$type","steps","missing","push","step","tableNumber","paymentMethod","broth","drink","element","document","getElementById","scrollIntoView","behavior","block","classList","remove","mappedBreakfasts","_b$additions","pm","addition","quantity","notes","orderPaymentTop","uniques","Set","m","Boolean","userEmail","email","process","addDoc","MealList","onMealChange","handleMealChange","onRemoveMeal","removeMeal","onAddMeal","addMeal","onDuplicateMeal","duplicateMeal","OrderSummary","incompleteMealIdx","incompleteSlideIdx","i","isCompleteRice","slideMap","principleReplacement","dispatchEvent","CustomEvent","detail","slideIndex","mappedMeals","_meal$additions","s","isWaiterView","_order$meals","_order$meals$","_order$breakfasts","_order$breakfasts$","disabled","initializedOrder","_meal$soupReplacement","_meal$soupReplacement2","_meal$principle","handleEditOrder","statusClass","style","maxHeight","_meal$showReplacement","_meal$soupReplacement3","_meal$showReplacement2","_meal$principle2","_meal$principle2$find","_meal$additions3","_meal$additions5","OptionSelector","title","emoji","options","selected","showReplacements","replacements","selectedReplacement","multiple","onImmediateSelect","onImmediateReplacementSelect","showConfirmButton","_newMeals$index$princ","onConfirm","_ref","selection","onChange","e","target","placeholder","_ref2","additionId","updatedAdditions","onAdd","_meal$additions4","onRemove","onIncrease","reduce","sum","item","toLocaleString","_breakfast$additions2","_breakfast$additions","additionName","undefined","entries","_meal$additions2","_breakfast$type4","_breakfast$type3","_b$additions2","LoadingIndicator","ErrorMessage","onClose","SuccessMessage"],"sourceRoot":""}