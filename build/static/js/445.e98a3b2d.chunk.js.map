{"version":3,"file":"static/js/445.e98a3b2d.chunk.js","mappings":"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","sources":["components/Admin/UserManagement.js","utils/classNames.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { Dialog, Transition, Menu } from '@headlessui/react';\r\nimport { XMarkIcon, PencilIcon, TrashIcon, InformationCircleIcon, EllipsisVerticalIcon, PlusIcon } from '@heroicons/react/24/outline';\r\nimport { ChevronUpIcon, ChevronDownIcon } from '@heroicons/react/20/solid';\r\nimport { db, auth } from '../../config/firebase';\r\nimport { collection, onSnapshot, updateDoc, doc, deleteDoc, query, where, orderBy, limit, getDocs, runTransaction, addDoc } from 'firebase/firestore';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { classNames } from '../../utils/classNames';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n// Reused and slightly enhanced from OrderManagement\r\nconst cleanText = (text) => {\r\n  if (text == null) return '';\r\n  if (typeof text === 'string') return text.replace(' NUEVO', '').trim();\r\n  if (typeof text === 'boolean') return text.toString();\r\n  if (typeof text === 'object' && text !== null && 'name' in text) return String(text.name).replace(' NUEVO', '').trim();\r\n  return String(text).replace(' NUEVO', '').trim();\r\n};\r\n\r\nconst getAddressDisplay = (address) => {\r\n  if (!address?.address) return 'Sin dirección';\r\n  let display = address.address;\r\n  switch (address.addressType) {\r\n    case 'school': if (address.recipientName) display += ` (Recibe: ${cleanText(address.recipientName)})`; break;\r\n    case 'complex': if (address.unitDetails) display += ` (${cleanText(address.unitDetails)})`; break;\r\n    case 'shop': if (address.localName) display += ` (${cleanText(address.localName)})`; break;\r\n    default: break;\r\n  }\r\n  return display;\r\n};\r\n\r\n// New utility for debouncing search input\r\nconst debounce = (func, delay) => {\r\n  let timeout;\r\n  return function (...args) {\r\n    const context = this;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(context, args), delay);\r\n  };\r\n};\r\n\r\n// Define role map for easier display and conversion\r\nconst ROLE_MAP = {\r\n  1: 'Cliente',\r\n  2: 'Administrador',\r\n  3: 'Mesero',\r\n  4: 'Domiciliario',\r\n};\r\n\r\nconst UserManagement = ({ setError, setSuccess, theme }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [editUserForm, setEditUserForm] = useState({ email: '', role: 1, totalOrders: 0 });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showUserDetailsModal, setShowUserDetailsModal] = useState(null);\r\n  const [showCreateUserModal, setShowCreateUserModal] = useState(false);\r\n  const [createUserForm, setCreateUserForm] = useState({ email: '', password: '', role: 1, totalOrders: 0 });\r\n  const [pagination, setPagination] = useState({ currentPage: 1, itemsPerPage: 10 });\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n\r\n  const debouncedSetSearchTerm = useCallback(\r\n    debounce((value) => setSearchTerm(value), 300),\r\n    []\r\n  );\r\n\r\n  const sortedAndFilteredUsers = useMemo(() => {\r\n    let currentUsers = users;\r\n\r\n    if (searchTerm) {\r\n      currentUsers = currentUsers.filter(user =>\r\n        user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        user.address.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        ROLE_MAP[`${user.role}`]?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (sortColumn) {\r\n      currentUsers = [...currentUsers].sort((a, b) => {\r\n        let valA, valB;\r\n\r\n        switch (sortColumn) {\r\n          case 'email':\r\n            valA = a.email.toLowerCase();\r\n            valB = b.email.toLowerCase();\r\n            break;\r\n          case 'address':\r\n            valA = a.address.toLowerCase();\r\n            valB = b.address.toLowerCase();\r\n            break;\r\n          case 'role':\r\n            valA = a.role;\r\n            valB = b.role;\r\n            break;\r\n          case 'totalOrders':\r\n            valA = a.totalOrders || 0;\r\n            valB = b.totalOrders || 0;\r\n            break;\r\n          case 'number':\r\n          default:\r\n            valA = a.number;\r\n            valB = b.number;\r\n            break;\r\n        }\r\n\r\n        if (valA < valB) return sortOrder === 'asc' ? -1 : 1;\r\n        if (valA > valB) return sortOrder === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return currentUsers;\r\n  }, [users, searchTerm, sortColumn, sortOrder]);\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredUsers.length / pagination.itemsPerPage);\r\n  const paginatedUsers = useMemo(() => {\r\n    const startIndex = (pagination.currentPage - 1) * pagination.itemsPerPage;\r\n    const endIndex = startIndex + pagination.itemsPerPage;\r\n    return sortedAndFilteredUsers.slice(startIndex, endIndex);\r\n  }, [sortedAndFilteredUsers, pagination.currentPage, pagination.itemsPerPage]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const usersCollectionRef = collection(db, 'users');\r\n    const unsubscribe = onSnapshot(usersCollectionRef, async (snapshot) => {\r\n      try {\r\n        const usersData = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          createdAt: doc.data().createdAt || { seconds: 0 },\r\n        }));\r\n\r\n        usersData.sort((a, b) => {\r\n          const timeA = a.createdAt?.seconds || 0;\r\n          const timeB = b.createdAt?.seconds || 0;\r\n          return timeA - timeB;\r\n        });\r\n\r\n        const usersWithAddresses = await Promise.all(\r\n          usersData.map(async (user, index) => {\r\n            try {\r\n              const ordersQuery = query(\r\n                collection(db, 'orders'),\r\n                where('userId', '==', user.id),\r\n                orderBy('createdAt', 'desc'),\r\n                limit(1)\r\n              );\r\n              const orderSnapshot = await getDocs(ordersQuery);\r\n              let address = 'Sin pedidos';\r\n              if (!orderSnapshot.empty) {\r\n                const orderData = orderSnapshot.docs?.[0]?.data();\r\n                address = getAddressDisplay(orderData?.meals?.[0]?.address);\r\n              }\r\n              return {\r\n                ...user,\r\n                number: index + 1,\r\n                address,\r\n              };\r\n            } catch (error) {\r\n              console.error(`Error fetching address for user ${user.id}:`, error.message);\r\n              return {\r\n                ...user,\r\n                number: index + 1,\r\n                address: 'Error al cargar dirección',\r\n              };\r\n            }\r\n          })\r\n        );\r\n\r\n        setUsers(usersWithAddresses);\r\n        setFetchError(null);\r\n      } catch (error) {\r\n        console.error('Error in UserManagement onSnapshot:', error);\r\n        setError(`Error al cargar usuarios: ${error.message}`);\r\n        setFetchError(error.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }, (error) => {\r\n      console.error('onSnapshot listener error:', error);\r\n      setError(`Error al cargar usuarios: ${error.message}`);\r\n      setFetchError(error.message);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [setError]);\r\n\r\n  const handleEditUser = useCallback((user) => {\r\n    setEditingUser(user);\r\n    setEditUserForm({\r\n      email: user.email || '',\r\n      role: user.role || 1,\r\n      totalOrders: user.totalOrders || 0,\r\n    });\r\n  }, []);\r\n\r\n  const handleSaveEdit = useCallback(async () => {\r\n    if (!editingUser) return;\r\n    setIsLoading(true);\r\n    try {\r\n      await runTransaction(db, async (transaction) => {\r\n        const userRef = doc(db, 'users', editingUser.id);\r\n        transaction.update(userRef, {\r\n          email: editUserForm.email.trim(),\r\n          role: Number(editUserForm.role),\r\n          totalOrders: Number(editUserForm.totalOrders),\r\n        });\r\n      });\r\n      setEditingUser(null);\r\n      setSuccess('Usuario actualizado con éxito.');\r\n    } catch (error) {\r\n      console.error('Error al guardar usuario:', error);\r\n      setError(`Error al actualizar usuario: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [editingUser, editUserForm, setSuccess, setError]);\r\n\r\n  const handleDeleteUser = useCallback(async (userId) => {\r\n    if (!window.confirm('¿Estás seguro de que quieres eliminar este usuario? Esta acción es irreversible.')) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      await deleteDoc(doc(db, 'users', userId));\r\n      setSuccess('Usuario eliminado con éxito.');\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuario:', error);\r\n      setError(`Error al eliminar usuario: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [setSuccess, setError]);\r\n\r\n  const handleCreateUser = useCallback(async () => {\r\n    if (!createUserForm.email.trim()) {\r\n      setError('El email es obligatorio.');\r\n      return;\r\n    }\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(createUserForm.email)) {\r\n      setError('Por favor, ingresa un email válido.');\r\n      return;\r\n    }\r\n    if (!createUserForm.password || createUserForm.password.length < 6) {\r\n      setError('La contraseña debe tener al menos 6 caracteres.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      // Verificar si el email ya existe en Firestore\r\n      const q = query(collection(db, 'users'), where('email', '==', createUserForm.email.trim()));\r\n      const querySnapshot = await getDocs(q);\r\n      if (!querySnapshot.empty) {\r\n        setError('El email ya está registrado.');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Crear usuario en Firebase Authentication\r\n      const userCredential = await createUserWithEmailAndPassword(auth, createUserForm.email.trim(), createUserForm.password);\r\n      const userId = userCredential.user.uid;\r\n\r\n      // Crear usuario en Firestore con el mismo ID\r\n      await runTransaction(db, async (transaction) => {\r\n        const userRef = doc(db, 'users', userId);\r\n        transaction.set(userRef, {\r\n          email: createUserForm.email.trim(),\r\n          role: Number(createUserForm.role),\r\n          totalOrders: Number(createUserForm.totalOrders) || 0,\r\n          createdAt: new Date(),\r\n        });\r\n      });\r\n\r\n      setCreateUserForm({ email: '', password: '', role: 1, totalOrders: 0 });\r\n      setShowCreateUserModal(false);\r\n      setSuccess('Usuario creado con éxito.');\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      setError(`Error al crear usuario: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [createUserForm, setSuccess, setError]);\r\n\r\n  const handlePageChange = useCallback((newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPagination(prev => ({ ...prev, currentPage: newPage }));\r\n    }\r\n  }, [totalPages]);\r\n\r\n  const handleItemsPerPageChange = useCallback((e) => {\r\n    setPagination({ currentPage: 1, itemsPerPage: Number(e.target.value) });\r\n  }, []);\r\n\r\n  const handleSort = useCallback((columnName) => {\r\n    if (sortColumn === columnName) {\r\n      setSortOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\r\n    } else {\r\n      setSortColumn(columnName);\r\n      setSortOrder('asc');\r\n    }\r\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\r\n  }, [sortColumn]);\r\n\r\n  const getSortIcon = useCallback((columnName) => {\r\n    if (sortColumn === columnName) {\r\n      return sortOrder === 'asc' ? (\r\n        <ChevronUpIcon className=\"w-4 h-4 inline-block ml-1\" />\r\n      ) : (\r\n        <ChevronDownIcon className=\"w-4 h-4 inline-block ml-1\" />\r\n      );\r\n    }\r\n    return null;\r\n  }, [sortColumn, sortOrder]);\r\n\r\n  // --- Export Functions ---\r\n  const getExportData = useCallback(() => {\r\n    return sortedAndFilteredUsers.map(user => ({\r\n      'Nº': user.number,\r\n      'Email': user.email,\r\n      'Dirección': user.address,\r\n      'Rol': ROLE_MAP[`${user.role}`],\r\n      'Pedidos': user.totalOrders || 0,\r\n      'ID de Usuario': user.id,\r\n      'Registrado Desde': user.createdAt?.seconds ? new Date(user.createdAt.seconds * 1000).toLocaleDateString('es-CO') : 'N/A',\r\n    }));\r\n  }, [sortedAndFilteredUsers]);\r\n\r\n  const exportToExcel = useCallback(() => {\r\n    const data = getExportData();\r\n    if (data.length === 0) {\r\n      setError('No hay datos para exportar a Excel.');\r\n      return;\r\n    }\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Usuarios\");\r\n    XLSX.writeFile(wb, \"usuarios.xlsx\");\r\n    setSuccess('Usuarios exportados a Excel con éxito.');\r\n  }, [getExportData, setSuccess, setError]);\r\n\r\n  const exportToPDF = useCallback(() => {\r\n    const data = getExportData();\r\n    if (data.length === 0) {\r\n      setError('No hay datos para exportar a PDF.');\r\n      return;\r\n    }\r\n    const doc = new jsPDF();\r\n    const head = [Object.keys(data?.[0] || {})];\r\n    const body = data.map(row => Object.values(row));\r\n\r\n    doc.autoTable({\r\n      head: head,\r\n      body: body,\r\n      startY: 20,\r\n      theme: 'grid',\r\n      styles: {\r\n        fontSize: 8,\r\n        cellPadding: 2,\r\n      },\r\n      headStyles: {\r\n        fillColor: [20, 83, 136],\r\n        textColor: [255, 255, 255],\r\n        fontStyle: 'bold',\r\n      },\r\n      alternateRowStyles: {\r\n        fillColor: [240, 240, 240]\r\n      },\r\n      margin: { top: 10, left: 10, right: 10, bottom: 10 },\r\n    });\r\n\r\n    doc.save(\"usuarios.pdf\");\r\n    setSuccess('Usuarios exportados a PDF con éxito.');\r\n  }, [getExportData, setSuccess, setError]);\r\n\r\n  const previewTable = useCallback(() => {\r\n    const exportData = getExportData();\r\n    if (exportData.length === 0) {\r\n      setError('No hay datos para previsualizar.');\r\n      return;\r\n    }\r\n\r\n    const printWindow = window.open('', '_blank');\r\n    if (!printWindow) {\r\n      setError('Pop-ups bloqueados. Por favor, permita pop-ups para previsualizar.');\r\n      return;\r\n    }\r\n\r\n    let tableHtml = `\r\n      <html>\r\n      <head>\r\n        <title>Previsualización de Usuarios</title>\r\n        <style>\r\n          body { font-family: Arial, sans-serif; margin: 20px; }\r\n          h1 { text-align: center; margin-bottom: 20px; }\r\n          table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }\r\n          th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\r\n          th { background-color: #f2f2f2; }\r\n          @media print {\r\n            body { margin: 0; }\r\n            table { font-size: 10pt; }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <h1>Reporte de Usuarios</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              ${Object.keys(exportData?.[0] || {}).map(key => `<th>${key}</th>`).join('')}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${exportData.map(row => `\r\n              <tr>\r\n                ${Object.values(row).map(value => `<td>${value}</td>`).join('')}\r\n              </tr>\r\n            `).join('')}\r\n          </tbody>\r\n        </table>\r\n      </body>\r\n      </html>\r\n    `;\r\n\r\n    printWindow.document.write(tableHtml);\r\n    printWindow.document.close();\r\n    printWindow.focus();\r\n  }, [getExportData, setError]);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-4 py-6\">\r\n      <h2 className=\"text-xl sm:text-2xl font-bold mb-6 text-gray-900 dark:text-gray-100\">Gestión de Usuarios</h2>\r\n      {fetchError && (\r\n        <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded-lg dark:bg-red-900 dark:text-red-200\">\r\n          Error al cargar datos: {fetchError}\r\n        </div>\r\n      )}\r\n\r\n      {/* Contenedor principal que contendrá los grupos de elementos */}\r\n      <div className=\"flex flex-wrap items-center gap-3 mb-4\">\r\n        {/* Contenedor para el input del buscador y el botón de menú */}\r\n        <div className=\"flex items-center w-full min-w-0 flex-grow\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Buscar por email, dirección o rol...\"\r\n            onChange={(e) => debouncedSetSearchTerm(e.target.value)}\r\n            className={classNames(\r\n              \"p-2 rounded-md border flex-grow w-full max-w-[30rem]\",\r\n              theme === 'dark' ? 'bg-gray-700 border-gray-600 text-gray-100' : 'bg-white border-gray-300 text-gray-900',\r\n              \"focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\r\n            )}\r\n            aria-label=\"Buscar usuarios\"\r\n          />\r\n\r\n          <Menu as=\"div\" className=\"relative inline-block text-left z-20 flex-shrink-0 -ml-px\">\r\n            <div>\r\n              <Menu.Button\r\n                className={classNames(\r\n                  \"inline-flex justify-center text-sm font-medium rounded-md\",\r\n                  theme === 'dark' ? 'text-gray-300 hover:text-gray-100' : 'text-gray-700 hover:text-gray-900',\r\n                  \"p-1 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\r\n                  \"pr-2\"\r\n                )}\r\n                aria-label=\"Opciones de exportación\"\r\n              >\r\n                <EllipsisVerticalIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n              </Menu.Button>\r\n            </div>\r\n\r\n            <Transition\r\n              as={React.Fragment}\r\n              enter=\"transition ease-out duration-100\"\r\n              enterFrom=\"transform opacity-0 scale-95\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-75\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Menu.Items className={classNames(\r\n                \"absolute right-0 mt-2 w-48 origin-top-right divide-y divide-gray-100 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\r\n                theme === 'dark' ? 'bg-gray-700 divide-gray-600' : 'bg-white divide-gray-100'\r\n              )}>\r\n                <div className=\"py-1\">\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        onClick={() => setShowCreateUserModal(true)}\r\n                        className={classNames(\r\n                          active ? (theme === 'dark' ? 'bg-gray-600 text-gray-100' : 'bg-gray-100 text-gray-900') : (theme === 'dark' ? 'text-gray-300' : 'text-gray-700'),\r\n                          'flex items-center px-4 py-2 text-sm w-full text-left'\r\n                        )}\r\n                      >\r\n                        <PlusIcon className=\"w-5 h-5 mr-2\" />\r\n                        Agregar Usuario\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        onClick={exportToExcel}\r\n                        className={classNames(\r\n                          active ? (theme === 'dark' ? 'bg-gray-600 text-gray-100' : 'bg-gray-100 text-gray-900') : (theme === 'dark' ? 'text-gray-300' : 'text-gray-700'),\r\n                          'block px-4 py-2 text-sm w-full text-left'\r\n                        )}\r\n                      >\r\n                        Exportar a Excel\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        onClick={exportToPDF}\r\n                        className={classNames(\r\n                          active ? (theme === 'dark' ? 'bg-gray-600 text-gray-100' : 'bg-gray-100 text-gray-900') : (theme === 'dark' ? 'text-gray-300' : 'text-gray-700'),\r\n                          'block px-4 py-2 text-sm w-full text-left'\r\n                        )}\r\n                      >\r\n                        Exportar a PDF\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        onClick={previewTable}\r\n                        className={classNames(\r\n                          active ? (theme === 'dark' ? 'bg-gray-600 text-gray-100' : 'bg-gray-100 text-gray-900') : (theme === 'dark' ? 'text-gray-300' : 'text-gray-700'),\r\n                          'block px-4 py-2 text-sm w-full text-left'\r\n                        )}\r\n                      >\r\n                        Previsualizar\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                </div>\r\n              </Menu.Items>\r\n            </Transition>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classNames(\r\n        \"p-4 sm:p-6 rounded-2xl shadow-xl max-h-[70vh] overflow-y-auto custom-scrollbar\",\r\n        theme === 'dark' ? 'bg-gray-800' : 'bg-white'\r\n      )}>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full text-left border-collapse text-xs sm:text-sm\">\r\n            <thead>\r\n              <tr className={classNames(\r\n                \"font-semibold sticky top-0 z-10\",\r\n                theme === 'dark' ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700'\r\n              )}>\r\n                <th className=\"p-2 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('number')}>\r\n                  Nº {getSortIcon('number')}\r\n                </th>\r\n                <th className=\"p-2 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('email')}>\r\n                  Email {getSortIcon('email')}\r\n                </th>\r\n                <th className=\"p-2 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('address')}>\r\n                  Dirección {getSortIcon('address')}\r\n                </th>\r\n                <th className=\"p-2 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('role')}>\r\n                  Rol {getSortIcon('role')}\r\n                </th>\r\n                <th className=\"p-2 border-b cursor-pointer whitespace-nowrap\" onClick={() => handleSort('totalOrders')}>\r\n                  Pedidos {getSortIcon('totalOrders')}\r\n                </th>\r\n                <th className=\"p-2 border-b whitespace-nowrap\">Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\r\n                    <div className=\"flex justify-center items-center\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\r\n                      <span className=\"ml-3\">Cargando usuarios...</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : paginatedUsers.length === 0 && !fetchError ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\r\n                    No se encontraron usuarios.\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                paginatedUsers.map((user) => (\r\n                  <tr\r\n                    key={user.id}\r\n                    className={classNames(\r\n                      \"border-b transition-colors duration-150\",\r\n                      theme === 'dark' ? 'border-gray-700 hover:bg-gray-700' : 'border-gray-200 hover:bg-gray-50',\r\n                      user.number % 2 === 0 ? (theme === 'dark' ? 'bg-gray-750' : 'bg-gray-50') : ''\r\n                    )}\r\n                  >\r\n                    <td className=\"p-2 text-gray-900 dark:text-gray-300\">{user.number}</td>\r\n                    <td className=\"p-2 text-gray-900 dark:text-gray-300 font-medium\">{user.email}</td>\r\n                    <td className=\"p-2 text-gray-900 dark:text-gray-300 max-w-[150px] sm:max-w-[250px] overflow-hidden text-ellipsis whitespace-nowrap\" title={user.address}>\r\n                      {user.address}\r\n                    </td>\r\n                    <td className=\"p-2 text-gray-900 dark:text-gray-300\">\r\n                      <span className={classNames(\r\n                        \"px-2 py-1 rounded-full text-xs font-semibold\",\r\n                        user.role === 2 ? 'bg-purple-200 text-purple-800 dark:bg-purple-800 dark:text-purple-200' :\r\n                        user.role === 3 ? 'bg-green-200 text-green-800 dark:bg-green-800 dark:text-green-200' :\r\n                        user.role === 4 ? 'bg-orange-200 text-orange-800 dark:bg-orange-800 dark:text-orange-200' :\r\n                        'bg-blue-200 text-blue-800 dark:bg-blue-800 dark:text-blue-200'\r\n                      )}>\r\n                        {ROLE_MAP[`${user.role}`] || 'Desconocido'}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"p-2 text-gray-900 dark:text-gray-300\">{user.totalOrders || 0}</td>\r\n                    <td className=\"p-2 flex space-x-1 items-center\">\r\n                      <button\r\n                        onClick={() => handleEditUser(user)}\r\n                        className=\"text-blue-500 hover:text-blue-400 p-1 rounded-md transition-colors duration-150\"\r\n                        title=\"Editar usuario\"\r\n                        aria-label={`Editar usuario ${user.email}`}\r\n                      >\r\n                        <PencilIcon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteUser(user.id)}\r\n                        className=\"text-red-500 hover:text-red-400 p-1 rounded-md transition-colors duration-150\"\r\n                        title=\"Eliminar usuario\"\r\n                        aria-label={`Eliminar usuario ${user.email}`}\r\n                      >\r\n                        <TrashIcon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setShowUserDetailsModal(user)}\r\n                        className=\"text-gray-500 hover:text-gray-400 p-1 rounded-md transition-colors duration-150\"\r\n                        title=\"Ver detalles del usuario\"\r\n                        aria-label=\"Ver detalles del usuario\"\r\n                      >\r\n                        <InformationCircleIcon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Pagination Controls */}\r\n        {sortedAndFilteredUsers.length > 0 && (\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-center mt-6 gap-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">Usuarios por página:</span>\r\n              <select\r\n                value={pagination.itemsPerPage}\r\n                onChange={handleItemsPerPageChange}\r\n                className={classNames(\r\n                  \"p-1 sm:p-2 rounded-lg border text-sm\",\r\n                  theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-300 bg-white text-gray-900'\r\n                )}\r\n                aria-label=\"Seleccionar número de usuarios por página\"\r\n              >\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={30}>30</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => handlePageChange(pagination.currentPage - 1)}\r\n                disabled={pagination.currentPage === 1}\r\n                className={classNames(\r\n                  \"p-2 rounded-lg transition-all duration-200\",\r\n                  pagination.currentPage === 1 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                )}\r\n                aria-label=\"Página anterior\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\r\n                </svg>\r\n              </button>\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                Página {pagination.currentPage} de {totalPages}\r\n              </span>\r\n              <button\r\n                onClick={() => handlePageChange(pagination.currentPage + 1)}\r\n                disabled={pagination.currentPage === totalPages}\r\n                className={classNames(\r\n                  \"p-2 rounded-lg transition-all duration-200\",\r\n                  pagination.currentPage === totalPages ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                )}\r\n                aria-label=\"Página siguiente\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Create User Modal */}\r\n      <Transition show={showCreateUserModal} as={React.Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setShowCreateUserModal(false)}>\r\n          <Transition.Child\r\n            as={React.Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={React.Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-md p-6 rounded-lg shadow-xl max-h-[80vh] overflow-y-auto\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <Dialog.Title className=\"text-lg font-medium\">\r\n                    Crear Nuevo Usuario\r\n                  </Dialog.Title>\r\n                  <button\r\n                    onClick={() => setShowCreateUserModal(false)}\r\n                    className=\"text-gray-500 hover:text-gray-400 dark:hover:text-gray-300\"\r\n                    aria-label=\"Cerrar modal\"\r\n                  >\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n                <form onSubmit={(e) => { e.preventDefault(); handleCreateUser(); }}>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label htmlFor=\"create-email-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Email</label>\r\n                      <input\r\n                        id=\"create-email-input\"\r\n                        type=\"email\"\r\n                        value={createUserForm.email}\r\n                        onChange={e => setCreateUserForm({ ...createUserForm, email: e.target.value })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                        placeholder=\"Ej: usuario@ejemplo.com\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"create-password-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Contraseña</label>\r\n                      <input\r\n                        id=\"create-password-input\"\r\n                        type=\"password\"\r\n                        value={createUserForm.password}\r\n                        onChange={e => setCreateUserForm({ ...createUserForm, password: e.target.value })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                        placeholder=\"Mínimo 6 caracteres\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"create-role-select\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Rol</label>\r\n                      <select\r\n                        id=\"create-role-select\"\r\n                        value={createUserForm.role}\r\n                        onChange={e => setCreateUserForm({ ...createUserForm, role: Number(e.target.value) })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                      >\r\n                        <option value={1}>Cliente</option>\r\n                        <option value={2}>Administrador</option>\r\n                        <option value={3}>Mesero</option>\r\n                        <option value={4}>Domiciliario</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"create-total-orders-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Pedidos</label>\r\n                      <input\r\n                        id=\"create-total-orders-input\"\r\n                        type=\"number\"\r\n                        value={createUserForm.totalOrders}\r\n                        onChange={e => setCreateUserForm({ ...createUserForm, totalOrders: Number(e.target.value) })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex justify-end gap-2\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setShowCreateUserModal(false)}\r\n                        className={classNames(\r\n                          \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\",\r\n                          theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'\r\n                        )}\r\n                      >\r\n                        Cancelar\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classNames(\r\n                          \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\",\r\n                          isLoading ? 'bg-gray-400 cursor-not-allowed' : theme === 'dark' ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\r\n                        )}\r\n                      >\r\n                        {isLoading ? 'Creando...' : 'Crear'}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n\r\n      {/* Edit User Modal */}\r\n      <Transition show={editingUser !== null} as={React.Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setEditingUser(null)}>\r\n          <Transition.Child\r\n            as={React.Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={React.Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-md p-6 rounded-lg shadow-xl max-h-[80vh] overflow-y-auto\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <Dialog.Title className=\"text-lg font-medium\">\r\n                    Editar Usuario\r\n                  </Dialog.Title>\r\n                  <button\r\n                    onClick={() => setEditingUser(null)}\r\n                    className=\"text-gray-500 hover:text-gray-400 dark:hover:text-gray-300\"\r\n                    aria-label=\"Cerrar modal\"\r\n                  >\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n                <form onSubmit={(e) => { e.preventDefault(); handleSaveEdit(); }}>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label htmlFor=\"email-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Email</label>\r\n                      <input\r\n                        id=\"email-input\"\r\n                        type=\"email\"\r\n                        value={editUserForm.email}\r\n                        onChange={e => setEditUserForm({ ...editUserForm, email: e.target.value })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                        placeholder=\"Ej: usuario@ejemplo.com\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"role-select\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Rol</label>\r\n                      <select\r\n                        id=\"role-select\"\r\n                        value={editUserForm.role}\r\n                        onChange={e => setEditUserForm({ ...editUserForm, role: Number(e.target.value) })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                      >\r\n                        <option value={1}>Cliente</option>\r\n                        <option value={2}>Administrador</option>\r\n                        <option value={3}>Mesero</option>\r\n                        <option value={4}>Domiciliario</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"total-orders-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Pedidos</label>\r\n                      <input\r\n                        id=\"total-orders-input\"\r\n                        type=\"number\"\r\n                        value={editUserForm.totalOrders}\r\n                        onChange={e => setEditUserForm({ ...editUserForm, totalOrders: Number(e.target.value) })}\r\n                        className={classNames(\r\n                          \"w-full p-2 rounded-md border text-sm\",\r\n                          theme === 'dark' ? 'border-gray-600 bg-gray-700 text-white' : 'border-gray-200 bg-white text-gray-900',\r\n                          \"focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                        )}\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex justify-end gap-2\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setEditingUser(null)}\r\n                        className={classNames(\r\n                          \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\",\r\n                          theme === 'dark' ? 'bg-gray-600 hover:bg-gray-700 text-gray-200' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'\r\n                        )}\r\n                      >\r\n                        Cancelar\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classNames(\r\n                          \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\",\r\n                          isLoading ? 'bg-gray-400 cursor-not-allowed' : theme === 'dark' ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-blue-500 hover:bg-blue-600 text-white'\r\n                        )}\r\n                      >\r\n                        {isLoading ? 'Guardando...' : 'Guardar'}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n\r\n      {/* User Details Modal */}\r\n      <Transition show={showUserDetailsModal !== null} as={React.Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={() => setShowUserDetailsModal(null)}>\r\n          <Transition.Child\r\n            as={React.Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={React.Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={classNames(\r\n                \"w-full max-w-md p-6 rounded-lg shadow-xl max-h-[80vh] overflow-y-auto\",\r\n                theme === 'dark' ? 'bg-gray-800 text-gray-200' : 'bg-gray-50 text-gray-900'\r\n              )}>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <Dialog.Title className=\"text-lg font-medium\">\r\n                    Detalles del Usuario\r\n                  </Dialog.Title>\r\n                  <button\r\n                    onClick={() => setShowUserDetailsModal(null)}\r\n                    className=\"text-gray-500 hover:text-gray-400 dark:hover:text-gray-300\"\r\n                    aria-label=\"Cerrar modal de detalles\"\r\n                  >\r\n                    <XMarkIcon className=\"h-6 w-6\" />\r\n                  </button>\r\n                </div>\r\n                {showUserDetailsModal && (\r\n                  <div className=\"space-y-3 text-sm\">\r\n                    <p><span className=\"font-semibold\">Email:</span> {showUserDetailsModal.email}</p>\r\n                    <p><span className=\"font-semibold\">ID de Usuario:</span> {showUserDetailsModal.id}</p>\r\n                    <p><span className=\"font-semibold\">Rol:</span> {ROLE_MAP[`${showUserDetailsModal.role}`] || 'Desconocido'}</p>\r\n                    <p><span className=\"font-semibold\">Total de Pedidos:</span> {showUserDetailsModal.totalOrders || 0}</p>\r\n                    <p><span className=\"font-semibold\">Dirección:</span> {showUserDetailsModal.address}</p>\r\n                    {showUserDetailsModal.createdAt?.seconds && (\r\n                      <p><span className=\"font-semibold\">Registrado Desde:</span> {new Date(showUserDetailsModal.createdAt.seconds * 1000).toLocaleDateString('es-CO', { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;","// src/utils/classNames.js\r\nexport function classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ');\r\n}"],"names":["cleanText","text","replace","trim","toString","String","name","debounce","func","delay","timeout","_len","arguments","length","args","Array","_key","context","this","clearTimeout","setTimeout","apply","ROLE_MAP","_ref","_showUserDetailsModal","setError","setSuccess","theme","users","setUsers","useState","editingUser","setEditingUser","editUserForm","setEditUserForm","email","role","totalOrders","isLoading","setIsLoading","fetchError","setFetchError","searchTerm","setSearchTerm","showUserDetailsModal","setShowUserDetailsModal","showCreateUserModal","setShowCreateUserModal","createUserForm","setCreateUserForm","password","pagination","setPagination","currentPage","itemsPerPage","sortColumn","setSortColumn","sortOrder","setSortOrder","debouncedSetSearchTerm","useCallback","value","sortedAndFilteredUsers","useMemo","currentUsers","filter","user","_ROLE_MAP","toLowerCase","includes","address","sort","a","b","valA","valB","number","totalPages","Math","ceil","paginatedUsers","startIndex","endIndex","slice","useEffect","usersCollectionRef","collection","db","unsubscribe","onSnapshot","async","usersData","snapshot","docs","map","doc","id","data","createdAt","seconds","_a$createdAt","_b$createdAt","usersWithAddresses","Promise","all","index","ordersQuery","query","where","orderBy","limit","orderSnapshot","getDocs","empty","_orderSnapshot$docs","_orderSnapshot$docs$","_orderData$meals","_orderData$meals$","orderData","display","addressType","recipientName","unitDetails","localName","getAddressDisplay","meals","error","console","message","handleEditUser","handleSaveEdit","runTransaction","userRef","transaction","update","Number","handleDeleteUser","window","confirm","deleteDoc","userId","handleCreateUser","test","q","createUserWithEmailAndPassword","auth","uid","set","Date","handlePageChange","newPage","prev","handleItemsPerPageChange","e","target","handleSort","columnName","prevOrder","getSortIcon","_jsx","ChevronUpIcon","className","ChevronDownIcon","getExportData","_user$createdAt","toLocaleDateString","exportToExcel","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","exportToPDF","jsPDF","head","Object","keys","body","row","values","autoTable","startY","styles","fontSize","cellPadding","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","margin","top","left","right","bottom","save","previewTable","exportData","printWindow","open","tableHtml","key","join","document","write","close","focus","_jsxs","children","type","placeholder","onChange","classNames","Menu","as","Button","EllipsisVerticalIcon","Transition","React","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","_ref2","active","onClick","PlusIcon","_ref3","_ref4","_ref5","colSpan","title","PencilIcon","TrashIcon","InformationCircleIcon","disabled","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","show","Dialog","onClose","Child","Panel","Title","XMarkIcon","onSubmit","preventDefault","htmlFor","required","min","year","month","day","classes","Boolean"],"sourceRoot":""}